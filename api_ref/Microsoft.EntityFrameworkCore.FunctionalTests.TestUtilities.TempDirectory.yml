### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.FunctionalTests.TestUtilities.TempDirectory
  commentId: T:Microsoft.EntityFrameworkCore.FunctionalTests.TestUtilities.TempDirectory
  id: TempDirectory
  parent: Microsoft.EntityFrameworkCore.FunctionalTests.TestUtilities
  children:
  - Microsoft.EntityFrameworkCore.FunctionalTests.TestUtilities.TempDirectory.#ctor
  - Microsoft.EntityFrameworkCore.FunctionalTests.TestUtilities.TempDirectory.Dispose
  - Microsoft.EntityFrameworkCore.FunctionalTests.TestUtilities.TempDirectory.Path
  langs:
  - csharp
  - vb
  name: TempDirectory
  nameWithType: TempDirectory
  fullName: Microsoft.EntityFrameworkCore.FunctionalTests.TestUtilities.TempDirectory
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Design.FunctionalTests/TestUtilities/TempDirectory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TempDirectory
    path: test/Microsoft.EntityFrameworkCore.Design.FunctionalTests/TestUtilities/TempDirectory.cs
    startLine: 9
  assemblies:
  - Microsoft.EntityFrameworkCore.Design.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.FunctionalTests.TestUtilities
  syntax:
    content: 'public class TempDirectory : IDisposable'
    content.vb: >-
      Public Class TempDirectory
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.FunctionalTests.TestUtilities.TempDirectory.#ctor
  commentId: M:Microsoft.EntityFrameworkCore.FunctionalTests.TestUtilities.TempDirectory.#ctor
  id: '#ctor'
  parent: Microsoft.EntityFrameworkCore.FunctionalTests.TestUtilities.TempDirectory
  langs:
  - csharp
  - vb
  name: TempDirectory()
  nameWithType: TempDirectory.TempDirectory()
  fullName: Microsoft.EntityFrameworkCore.FunctionalTests.TestUtilities.TempDirectory.TempDirectory()
  type: Constructor
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Design.FunctionalTests/TestUtilities/TempDirectory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: test/Microsoft.EntityFrameworkCore.Design.FunctionalTests/TestUtilities/TempDirectory.cs
    startLine: 11
  assemblies:
  - Microsoft.EntityFrameworkCore.Design.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.FunctionalTests.TestUtilities
  syntax:
    content: public TempDirectory()
    content.vb: Public Sub New
  overload: Microsoft.EntityFrameworkCore.FunctionalTests.TestUtilities.TempDirectory.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.FunctionalTests.TestUtilities.TempDirectory.Path
  commentId: P:Microsoft.EntityFrameworkCore.FunctionalTests.TestUtilities.TempDirectory.Path
  id: Path
  parent: Microsoft.EntityFrameworkCore.FunctionalTests.TestUtilities.TempDirectory
  langs:
  - csharp
  - vb
  name: Path
  nameWithType: TempDirectory.Path
  fullName: Microsoft.EntityFrameworkCore.FunctionalTests.TestUtilities.TempDirectory.Path
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Design.FunctionalTests/TestUtilities/TempDirectory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Path
    path: test/Microsoft.EntityFrameworkCore.Design.FunctionalTests/TestUtilities/TempDirectory.cs
    startLine: 17
  assemblies:
  - Microsoft.EntityFrameworkCore.Design.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.FunctionalTests.TestUtilities
  syntax:
    content: public string Path { get; }
    content.vb: Public ReadOnly Property Path As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.FunctionalTests.TestUtilities.TempDirectory.Path*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.FunctionalTests.TestUtilities.TempDirectory.Dispose
  commentId: M:Microsoft.EntityFrameworkCore.FunctionalTests.TestUtilities.TempDirectory.Dispose
  id: Dispose
  parent: Microsoft.EntityFrameworkCore.FunctionalTests.TestUtilities.TempDirectory
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: TempDirectory.Dispose()
  fullName: Microsoft.EntityFrameworkCore.FunctionalTests.TestUtilities.TempDirectory.Dispose()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Design.FunctionalTests/TestUtilities/TempDirectory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Dispose
    path: test/Microsoft.EntityFrameworkCore.Design.FunctionalTests/TestUtilities/TempDirectory.cs
    startLine: 19
  assemblies:
  - Microsoft.EntityFrameworkCore.Design.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.FunctionalTests.TestUtilities
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Microsoft.EntityFrameworkCore.FunctionalTests.TestUtilities.TempDirectory.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.EntityFrameworkCore.FunctionalTests.TestUtilities
  commentId: N:Microsoft.EntityFrameworkCore.FunctionalTests.TestUtilities
  isExternal: false
  name: Microsoft.EntityFrameworkCore.FunctionalTests.TestUtilities
  nameWithType: Microsoft.EntityFrameworkCore.FunctionalTests.TestUtilities
  fullName: Microsoft.EntityFrameworkCore.FunctionalTests.TestUtilities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.FunctionalTests.TestUtilities.TempDirectory.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.FunctionalTests.TestUtilities.TempDirectory.#ctor
  isExternal: false
  name: TempDirectory
  nameWithType: TempDirectory.TempDirectory
  fullName: Microsoft.EntityFrameworkCore.FunctionalTests.TestUtilities.TempDirectory.TempDirectory
- uid: Microsoft.EntityFrameworkCore.FunctionalTests.TestUtilities.TempDirectory.Path*
  commentId: Overload:Microsoft.EntityFrameworkCore.FunctionalTests.TestUtilities.TempDirectory.Path
  isExternal: false
  name: Path
  nameWithType: TempDirectory.Path
  fullName: Microsoft.EntityFrameworkCore.FunctionalTests.TestUtilities.TempDirectory.Path
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.FunctionalTests.TestUtilities.TempDirectory.Dispose*
  commentId: Overload:Microsoft.EntityFrameworkCore.FunctionalTests.TestUtilities.TempDirectory.Dispose
  isExternal: false
  name: Dispose
  nameWithType: TempDirectory.Dispose
  fullName: Microsoft.EntityFrameworkCore.FunctionalTests.TestUtilities.TempDirectory.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
