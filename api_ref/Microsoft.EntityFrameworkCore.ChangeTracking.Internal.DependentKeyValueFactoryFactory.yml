### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentKeyValueFactoryFactory
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentKeyValueFactoryFactory
  id: DependentKeyValueFactoryFactory
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  children:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentKeyValueFactoryFactory.Create``1(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentKeyValueFactoryFactory.CreateComposite(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentKeyValueFactoryFactory.CreateSimple``1(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  langs:
  - csharp
  - vb
  name: DependentKeyValueFactoryFactory
  nameWithType: DependentKeyValueFactoryFactory
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentKeyValueFactoryFactory
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/DependentKeyValueFactoryFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DependentKeyValueFactoryFactory
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/DependentKeyValueFactoryFactory.cs
    startLine: 15
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public class DependentKeyValueFactoryFactory
    content.vb: Public Class DependentKeyValueFactoryFactory
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentKeyValueFactoryFactory.Create``1(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentKeyValueFactoryFactory.Create``1(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  id: Create``1(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentKeyValueFactoryFactory
  langs:
  - csharp
  - vb
  name: Create<TKey>(IForeignKey)
  nameWithType: DependentKeyValueFactoryFactory.Create<TKey>(IForeignKey)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentKeyValueFactoryFactory.Create<TKey>(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/DependentKeyValueFactoryFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Create
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/DependentKeyValueFactoryFactory.cs
    startLine: 21
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IDependentKeyValueFactory<TKey> Create<TKey>(IForeignKey foreignKey)
    content.vb: Public Overridable Function Create(Of TKey)(foreignKey As IForeignKey) As IDependentKeyValueFactory(Of TKey)
    parameters:
    - id: foreignKey
      type: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    typeParameters:
    - id: TKey
    return:
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory{{TKey}}
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentKeyValueFactoryFactory.Create*
  nameWithType.vb: DependentKeyValueFactoryFactory.Create(Of TKey)(IForeignKey)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentKeyValueFactoryFactory.Create(Of TKey)(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  name.vb: Create(Of TKey)(IForeignKey)
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentKeyValueFactoryFactory.CreateSimple``1(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentKeyValueFactoryFactory.CreateSimple``1(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  id: CreateSimple``1(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentKeyValueFactoryFactory
  langs:
  - csharp
  - vb
  name: CreateSimple<TKey>(IForeignKey)
  nameWithType: DependentKeyValueFactoryFactory.CreateSimple<TKey>(IForeignKey)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentKeyValueFactoryFactory.CreateSimple<TKey>(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/DependentKeyValueFactoryFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateSimple
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/DependentKeyValueFactoryFactory.cs
    startLine: 30
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IDependentKeyValueFactory<TKey> CreateSimple<TKey>(IForeignKey foreignKey)
    content.vb: Public Overridable Function CreateSimple(Of TKey)(foreignKey As IForeignKey) As IDependentKeyValueFactory(Of TKey)
    parameters:
    - id: foreignKey
      type: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    typeParameters:
    - id: TKey
    return:
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory{{TKey}}
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentKeyValueFactoryFactory.CreateSimple*
  nameWithType.vb: DependentKeyValueFactoryFactory.CreateSimple(Of TKey)(IForeignKey)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentKeyValueFactoryFactory.CreateSimple(Of TKey)(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  name.vb: CreateSimple(Of TKey)(IForeignKey)
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentKeyValueFactoryFactory.CreateComposite(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentKeyValueFactoryFactory.CreateComposite(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  id: CreateComposite(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentKeyValueFactoryFactory
  langs:
  - csharp
  - vb
  name: CreateComposite(IForeignKey)
  nameWithType: DependentKeyValueFactoryFactory.CreateComposite(IForeignKey)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentKeyValueFactoryFactory.CreateComposite(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/DependentKeyValueFactoryFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateComposite
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/DependentKeyValueFactoryFactory.cs
    startLine: 63
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IDependentKeyValueFactory<object[]> CreateComposite(IForeignKey foreignKey)
    content.vb: Public Overridable Function CreateComposite(foreignKey As IForeignKey) As IDependentKeyValueFactory(Of Object())
    parameters:
    - id: foreignKey
      type: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    return:
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory{System.Object[]}
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentKeyValueFactoryFactory.CreateComposite*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  commentId: N:Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  nameWithType: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentKeyValueFactoryFactory.Create*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentKeyValueFactoryFactory.Create
  isExternal: false
  name: Create<TKey>
  nameWithType: DependentKeyValueFactoryFactory.Create<TKey>
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentKeyValueFactoryFactory.Create<TKey>
  nameWithType.vb: DependentKeyValueFactoryFactory.Create(Of TKey)
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentKeyValueFactoryFactory.Create(Of TKey)
  name.vb: Create(Of TKey)
- uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IForeignKey
  nameWithType: IForeignKey
  fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory{{TKey}}
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory{``0}
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  definition: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory`1
  name: IDependentKeyValueFactory<TKey>
  nameWithType: IDependentKeyValueFactory<TKey>
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory<TKey>
  nameWithType.vb: IDependentKeyValueFactory(Of TKey)
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory(Of TKey)
  name.vb: IDependentKeyValueFactory(Of TKey)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory`1
    name: IDependentKeyValueFactory
    nameWithType: IDependentKeyValueFactory
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory`1
    name: IDependentKeyValueFactory
    nameWithType: IDependentKeyValueFactory
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory`1
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory`1
  isExternal: false
  name: IDependentKeyValueFactory<TKey>
  nameWithType: IDependentKeyValueFactory<TKey>
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory<TKey>
  nameWithType.vb: IDependentKeyValueFactory(Of TKey)
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory(Of TKey)
  name.vb: IDependentKeyValueFactory(Of TKey)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory`1
    name: IDependentKeyValueFactory
    nameWithType: IDependentKeyValueFactory
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory`1
    name: IDependentKeyValueFactory
    nameWithType: IDependentKeyValueFactory
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentKeyValueFactoryFactory.CreateSimple*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentKeyValueFactoryFactory.CreateSimple
  isExternal: false
  name: CreateSimple<TKey>
  nameWithType: DependentKeyValueFactoryFactory.CreateSimple<TKey>
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentKeyValueFactoryFactory.CreateSimple<TKey>
  nameWithType.vb: DependentKeyValueFactoryFactory.CreateSimple(Of TKey)
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentKeyValueFactoryFactory.CreateSimple(Of TKey)
  name.vb: CreateSimple(Of TKey)
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentKeyValueFactoryFactory.CreateComposite*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentKeyValueFactoryFactory.CreateComposite
  isExternal: false
  name: CreateComposite
  nameWithType: DependentKeyValueFactoryFactory.CreateComposite
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentKeyValueFactoryFactory.CreateComposite
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory{System.Object[]}
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory{System.Object[]}
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  definition: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory`1
  name: IDependentKeyValueFactory<Object[]>
  nameWithType: IDependentKeyValueFactory<Object[]>
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory<System.Object[]>
  nameWithType.vb: IDependentKeyValueFactory(Of Object())
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory(Of System.Object())
  name.vb: IDependentKeyValueFactory(Of Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory`1
    name: IDependentKeyValueFactory
    nameWithType: IDependentKeyValueFactory
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory`1
    name: IDependentKeyValueFactory
    nameWithType: IDependentKeyValueFactory
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
