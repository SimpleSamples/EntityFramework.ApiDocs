### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.LocalViewListener
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.LocalViewListener
  id: LocalViewListener
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  children:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.LocalViewListener.RegisterView(System.Action{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState})
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.LocalViewListener.StateChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState,System.Boolean)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.LocalViewListener.StateChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState)
  langs:
  - csharp
  - vb
  name: LocalViewListener
  nameWithType: LocalViewListener
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.LocalViewListener
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/LocalViewListener.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: LocalViewListener
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/LocalViewListener.cs
    startLine: 12
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class LocalViewListener : ILocalViewListener, IEntityStateListener'
    content.vb: >-
      Public Class LocalViewListener
          Implements ILocalViewListener, IEntityStateListener
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ILocalViewListener
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityStateListener
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.LocalViewListener.RegisterView(System.Action{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState})
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.LocalViewListener.RegisterView(System.Action{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState})
  id: RegisterView(System.Action{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState})
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.LocalViewListener
  langs:
  - csharp
  - vb
  name: RegisterView(Action<InternalEntityEntry, EntityState>)
  nameWithType: LocalViewListener.RegisterView(Action<InternalEntityEntry, EntityState>)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.LocalViewListener.RegisterView(System.Action<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, Microsoft.EntityFrameworkCore.EntityState>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/LocalViewListener.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: RegisterView
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/LocalViewListener.cs
    startLine: 21
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void RegisterView(Action<InternalEntityEntry, EntityState> viewAction)
    content.vb: Public Overridable Sub RegisterView(viewAction As Action(Of InternalEntityEntry, EntityState))
    parameters:
    - id: viewAction
      type: System.Action{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState}
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.LocalViewListener.RegisterView*
  implements:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ILocalViewListener.RegisterView(System.Action{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState})
  nameWithType.vb: LocalViewListener.RegisterView(Action(Of InternalEntityEntry, EntityState))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.LocalViewListener.RegisterView(System.Action(Of Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, Microsoft.EntityFrameworkCore.EntityState))
  name.vb: RegisterView(Action(Of InternalEntityEntry, EntityState))
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.LocalViewListener.StateChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState,System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.LocalViewListener.StateChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState,System.Boolean)
  id: StateChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState,System.Boolean)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.LocalViewListener
  langs:
  - csharp
  - vb
  name: StateChanged(InternalEntityEntry, EntityState, Boolean)
  nameWithType: LocalViewListener.StateChanged(InternalEntityEntry, EntityState, Boolean)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.LocalViewListener.StateChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, Microsoft.EntityFrameworkCore.EntityState, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/LocalViewListener.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: StateChanged
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/LocalViewListener.cs
    startLine: 28
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void StateChanged(InternalEntityEntry entry, EntityState oldState, bool fromQuery)
    content.vb: Public Overridable Sub StateChanged(entry As InternalEntityEntry, oldState As EntityState, fromQuery As Boolean)
    parameters:
    - id: entry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    - id: oldState
      type: Microsoft.EntityFrameworkCore.EntityState
    - id: fromQuery
      type: System.Boolean
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.LocalViewListener.StateChanged*
  implements:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityStateListener.StateChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState,System.Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.LocalViewListener.StateChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.LocalViewListener.StateChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState)
  id: StateChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.LocalViewListener
  langs:
  - csharp
  - vb
  name: StateChanging(InternalEntityEntry, EntityState)
  nameWithType: LocalViewListener.StateChanging(InternalEntityEntry, EntityState)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.LocalViewListener.StateChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, Microsoft.EntityFrameworkCore.EntityState)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/LocalViewListener.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: StateChanging
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/LocalViewListener.cs
    startLine: 40
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void StateChanging(InternalEntityEntry entry, EntityState newState)
    content.vb: Public Overridable Sub StateChanging(entry As InternalEntityEntry, newState As EntityState)
    parameters:
    - id: entry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    - id: newState
      type: Microsoft.EntityFrameworkCore.EntityState
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.LocalViewListener.StateChanging*
  implements:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityStateListener.StateChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  commentId: N:Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  nameWithType: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ILocalViewListener
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ILocalViewListener
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: ILocalViewListener
  nameWithType: ILocalViewListener
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ILocalViewListener
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityStateListener
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityStateListener
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: IEntityStateListener
  nameWithType: IEntityStateListener
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityStateListener
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.LocalViewListener.RegisterView*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.LocalViewListener.RegisterView
  isExternal: false
  name: RegisterView
  nameWithType: LocalViewListener.RegisterView
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.LocalViewListener.RegisterView
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ILocalViewListener.RegisterView(System.Action{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState})
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ILocalViewListener.RegisterView(System.Action{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState})
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ILocalViewListener
  isExternal: true
  name: RegisterView(Action<InternalEntityEntry, EntityState>)
  nameWithType: ILocalViewListener.RegisterView(Action<InternalEntityEntry, EntityState>)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ILocalViewListener.RegisterView(System.Action<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, Microsoft.EntityFrameworkCore.EntityState>)
  nameWithType.vb: ILocalViewListener.RegisterView(Action(Of InternalEntityEntry, EntityState))
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ILocalViewListener.RegisterView(System.Action(Of Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, Microsoft.EntityFrameworkCore.EntityState))
  name.vb: RegisterView(Action(Of InternalEntityEntry, EntityState))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ILocalViewListener.RegisterView(System.Action{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState})
    name: RegisterView
    nameWithType: ILocalViewListener.RegisterView
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ILocalViewListener.RegisterView
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.EntityState
    name: EntityState
    nameWithType: EntityState
    fullName: Microsoft.EntityFrameworkCore.EntityState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ILocalViewListener.RegisterView(System.Action{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState})
    name: RegisterView
    nameWithType: ILocalViewListener.RegisterView
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ILocalViewListener.RegisterView
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.EntityState
    name: EntityState
    nameWithType: EntityState
    fullName: Microsoft.EntityFrameworkCore.EntityState
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState}
  commentId: T:System.Action{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState}
  parent: System
  definition: System.Action`2
  name: Action<InternalEntityEntry, EntityState>
  nameWithType: Action<InternalEntityEntry, EntityState>
  fullName: System.Action<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, Microsoft.EntityFrameworkCore.EntityState>
  nameWithType.vb: Action(Of InternalEntityEntry, EntityState)
  fullname.vb: System.Action(Of Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, Microsoft.EntityFrameworkCore.EntityState)
  name.vb: Action(Of InternalEntityEntry, EntityState)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.EntityState
    name: EntityState
    nameWithType: EntityState
    fullName: Microsoft.EntityFrameworkCore.EntityState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.EntityState
    name: EntityState
    nameWithType: EntityState
    fullName: Microsoft.EntityFrameworkCore.EntityState
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullname.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.LocalViewListener.StateChanged*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.LocalViewListener.StateChanged
  isExternal: false
  name: StateChanged
  nameWithType: LocalViewListener.StateChanged
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.LocalViewListener.StateChanged
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityStateListener.StateChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState,System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityStateListener.StateChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState,System.Boolean)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityStateListener
  isExternal: true
  name: StateChanged(InternalEntityEntry, EntityState, Boolean)
  nameWithType: IEntityStateListener.StateChanged(InternalEntityEntry, EntityState, Boolean)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityStateListener.StateChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, Microsoft.EntityFrameworkCore.EntityState, System.Boolean)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityStateListener.StateChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState,System.Boolean)
    name: StateChanged
    nameWithType: IEntityStateListener.StateChanged
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityStateListener.StateChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.EntityState
    name: EntityState
    nameWithType: EntityState
    fullName: Microsoft.EntityFrameworkCore.EntityState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityStateListener.StateChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState,System.Boolean)
    name: StateChanged
    nameWithType: IEntityStateListener.StateChanged
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityStateListener.StateChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.EntityState
    name: EntityState
    nameWithType: EntityState
    fullName: Microsoft.EntityFrameworkCore.EntityState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: InternalEntityEntry
  nameWithType: InternalEntityEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
- uid: Microsoft.EntityFrameworkCore.EntityState
  commentId: T:Microsoft.EntityFrameworkCore.EntityState
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: EntityState
  nameWithType: EntityState
  fullName: Microsoft.EntityFrameworkCore.EntityState
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: false
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.LocalViewListener.StateChanging*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.LocalViewListener.StateChanging
  isExternal: false
  name: StateChanging
  nameWithType: LocalViewListener.StateChanging
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.LocalViewListener.StateChanging
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityStateListener.StateChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityStateListener.StateChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityStateListener
  isExternal: false
  name: StateChanging(InternalEntityEntry, EntityState)
  nameWithType: IEntityStateListener.StateChanging(InternalEntityEntry, EntityState)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityStateListener.StateChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, Microsoft.EntityFrameworkCore.EntityState)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityStateListener.StateChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState)
    name: StateChanging
    nameWithType: IEntityStateListener.StateChanging
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityStateListener.StateChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.EntityState
    name: EntityState
    nameWithType: EntityState
    fullName: Microsoft.EntityFrameworkCore.EntityState
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityStateListener.StateChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState)
    name: StateChanging
    nameWithType: IEntityStateListener.StateChanging
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityStateListener.StateChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.EntityState
    name: EntityState
    nameWithType: EntityState
    fullName: Microsoft.EntityFrameworkCore.EntityState
  - name: )
    nameWithType: )
    fullName: )
