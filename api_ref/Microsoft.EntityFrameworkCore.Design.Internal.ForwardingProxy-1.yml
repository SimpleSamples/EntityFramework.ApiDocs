### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Design.Internal.ForwardingProxy`1
  commentId: T:Microsoft.EntityFrameworkCore.Design.Internal.ForwardingProxy`1
  id: ForwardingProxy`1
  parent: Microsoft.EntityFrameworkCore.Design.Internal
  children:
  - Microsoft.EntityFrameworkCore.Design.Internal.ForwardingProxy`1.#ctor(System.Object)
  - Microsoft.EntityFrameworkCore.Design.Internal.ForwardingProxy`1.GetTransparentProxy
  - Microsoft.EntityFrameworkCore.Design.Internal.ForwardingProxy`1.Invoke(System.Runtime.Remoting.Messaging.IMessage)
  langs:
  - csharp
  - vb
  name: ForwardingProxy<T>
  nameWithType: ForwardingProxy<T>
  fullName: Microsoft.EntityFrameworkCore.Design.Internal.ForwardingProxy<T>
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Design/Internal/ForwardingProxy`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ForwardingProxy
    path: src/Microsoft.EntityFrameworkCore.Design/Design/Internal/ForwardingProxy`.cs
    startLine: 20
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Design.Internal
  summary: "\nThis is a small piece of Remoting magic. It enables us to invoke methods on a\nremote object without knowing its actual type. The only restriction is that the\nnames and shapes of the types and their members must be the same on each side of\nthe boundary.\n"
  example: []
  syntax:
    content: 'public class ForwardingProxy<T> : RealProxy'
    content.vb: >-
      Public Class ForwardingProxy(Of T)
          Inherits RealProxy
    typeParameters:
    - id: T
  inheritance:
  - System.Object
  - System.Runtime.Remoting.Proxies.RealProxy
  inheritedMembers:
  - System.Runtime.Remoting.Proxies.RealProxy.InitializeServerObject(System.Runtime.Remoting.Activation.IConstructionCallMessage)
  - System.Runtime.Remoting.Proxies.RealProxy.GetUnwrappedServer
  - System.Runtime.Remoting.Proxies.RealProxy.DetachServer
  - System.Runtime.Remoting.Proxies.RealProxy.AttachServer(System.MarshalByRefObject)
  - System.Runtime.Remoting.Proxies.RealProxy.SetStubData(System.Runtime.Remoting.Proxies.RealProxy,System.Object)
  - System.Runtime.Remoting.Proxies.RealProxy.GetStubData(System.Runtime.Remoting.Proxies.RealProxy)
  - System.Runtime.Remoting.Proxies.RealProxy.GetProxiedType
  - System.Runtime.Remoting.Proxies.RealProxy.CreateObjRef(System.Type)
  - System.Runtime.Remoting.Proxies.RealProxy.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Runtime.Remoting.Proxies.RealProxy.GetCOMIUnknown(System.Boolean)
  - System.Runtime.Remoting.Proxies.RealProxy.SetCOMIUnknown(System.IntPtr)
  - System.Runtime.Remoting.Proxies.RealProxy.SupportsInterface(System.Guid@)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: ForwardingProxy(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.EntityFrameworkCore.Design.Internal.ForwardingProxy(Of T)
  name.vb: ForwardingProxy(Of T)
- uid: Microsoft.EntityFrameworkCore.Design.Internal.ForwardingProxy`1.#ctor(System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Design.Internal.ForwardingProxy`1.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: Microsoft.EntityFrameworkCore.Design.Internal.ForwardingProxy`1
  langs:
  - csharp
  - vb
  name: ForwardingProxy(Object)
  nameWithType: ForwardingProxy<T>.ForwardingProxy(Object)
  fullName: Microsoft.EntityFrameworkCore.Design.Internal.ForwardingProxy<T>.ForwardingProxy(System.Object)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Design/Internal/ForwardingProxy`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Design/Design/Internal/ForwardingProxy`.cs
    startLine: 28
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Design.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public ForwardingProxy(object target)
    content.vb: Public Sub New(target As Object)
    parameters:
    - id: target
      type: System.Object
  overload: Microsoft.EntityFrameworkCore.Design.Internal.ForwardingProxy`1.#ctor*
  nameWithType.vb: ForwardingProxy(Of T).ForwardingProxy(Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Design.Internal.ForwardingProxy(Of T).ForwardingProxy(System.Object)
- uid: Microsoft.EntityFrameworkCore.Design.Internal.ForwardingProxy`1.Invoke(System.Runtime.Remoting.Messaging.IMessage)
  commentId: M:Microsoft.EntityFrameworkCore.Design.Internal.ForwardingProxy`1.Invoke(System.Runtime.Remoting.Messaging.IMessage)
  id: Invoke(System.Runtime.Remoting.Messaging.IMessage)
  parent: Microsoft.EntityFrameworkCore.Design.Internal.ForwardingProxy`1
  langs:
  - csharp
  - vb
  name: Invoke(IMessage)
  nameWithType: ForwardingProxy<T>.Invoke(IMessage)
  fullName: Microsoft.EntityFrameworkCore.Design.Internal.ForwardingProxy<T>.Invoke(System.Runtime.Remoting.Messaging.IMessage)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Design/Internal/ForwardingProxy`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Invoke
    path: src/Microsoft.EntityFrameworkCore.Design/Design/Internal/ForwardingProxy`.cs
    startLine: 40
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Design.Internal
  summary: "\nIntercepts method invocations on the object represented by the current instance\nand forwards them to the target to finish processing.\n"
  example: []
  syntax:
    content: public override IMessage Invoke(IMessage msg)
    content.vb: Public Overrides Function Invoke(msg As IMessage) As IMessage
    parameters:
    - id: msg
      type: System.Runtime.Remoting.Messaging.IMessage
    return:
      type: System.Runtime.Remoting.Messaging.IMessage
  overridden: System.Runtime.Remoting.Proxies.RealProxy.Invoke(System.Runtime.Remoting.Messaging.IMessage)
  overload: Microsoft.EntityFrameworkCore.Design.Internal.ForwardingProxy`1.Invoke*
  nameWithType.vb: ForwardingProxy(Of T).Invoke(IMessage)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.EntityFrameworkCore.Design.Internal.ForwardingProxy(Of T).Invoke(System.Runtime.Remoting.Messaging.IMessage)
- uid: Microsoft.EntityFrameworkCore.Design.Internal.ForwardingProxy`1.GetTransparentProxy
  commentId: M:Microsoft.EntityFrameworkCore.Design.Internal.ForwardingProxy`1.GetTransparentProxy
  id: GetTransparentProxy
  parent: Microsoft.EntityFrameworkCore.Design.Internal.ForwardingProxy`1
  langs:
  - csharp
  - vb
  name: GetTransparentProxy()
  nameWithType: ForwardingProxy<T>.GetTransparentProxy()
  fullName: Microsoft.EntityFrameworkCore.Design.Internal.ForwardingProxy<T>.GetTransparentProxy()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Design/Internal/ForwardingProxy`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetTransparentProxy
    path: src/Microsoft.EntityFrameworkCore.Design/Design/Internal/ForwardingProxy`.cs
    startLine: 54
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Design.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual T GetTransparentProxy()
    content.vb: Public Overridable Function GetTransparentProxy As T
    return:
      type: '{T}'
  overload: Microsoft.EntityFrameworkCore.Design.Internal.ForwardingProxy`1.GetTransparentProxy*
  nameWithType.vb: ForwardingProxy(Of T).GetTransparentProxy()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Design.Internal.ForwardingProxy(Of T).GetTransparentProxy()
references:
- uid: Microsoft.EntityFrameworkCore.Design.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Design.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Design.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Design.Internal
  fullName: Microsoft.EntityFrameworkCore.Design.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.Remoting.Proxies.RealProxy
  commentId: T:System.Runtime.Remoting.Proxies.RealProxy
  parent: System.Runtime.Remoting.Proxies
  isExternal: true
  name: RealProxy
  nameWithType: RealProxy
  fullName: System.Runtime.Remoting.Proxies.RealProxy
- uid: System.Runtime.Remoting.Proxies.RealProxy.InitializeServerObject(System.Runtime.Remoting.Activation.IConstructionCallMessage)
  commentId: M:System.Runtime.Remoting.Proxies.RealProxy.InitializeServerObject(System.Runtime.Remoting.Activation.IConstructionCallMessage)
  parent: System.Runtime.Remoting.Proxies.RealProxy
  isExternal: true
  name: InitializeServerObject(IConstructionCallMessage)
  nameWithType: RealProxy.InitializeServerObject(IConstructionCallMessage)
  fullName: System.Runtime.Remoting.Proxies.RealProxy.InitializeServerObject(System.Runtime.Remoting.Activation.IConstructionCallMessage)
  spec.csharp:
  - uid: System.Runtime.Remoting.Proxies.RealProxy.InitializeServerObject(System.Runtime.Remoting.Activation.IConstructionCallMessage)
    name: InitializeServerObject
    nameWithType: RealProxy.InitializeServerObject
    fullName: System.Runtime.Remoting.Proxies.RealProxy.InitializeServerObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Remoting.Activation.IConstructionCallMessage
    name: IConstructionCallMessage
    nameWithType: IConstructionCallMessage
    fullName: System.Runtime.Remoting.Activation.IConstructionCallMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Remoting.Proxies.RealProxy.InitializeServerObject(System.Runtime.Remoting.Activation.IConstructionCallMessage)
    name: InitializeServerObject
    nameWithType: RealProxy.InitializeServerObject
    fullName: System.Runtime.Remoting.Proxies.RealProxy.InitializeServerObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Remoting.Activation.IConstructionCallMessage
    name: IConstructionCallMessage
    nameWithType: IConstructionCallMessage
    fullName: System.Runtime.Remoting.Activation.IConstructionCallMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Runtime.Remoting.Proxies.RealProxy.GetUnwrappedServer
  commentId: M:System.Runtime.Remoting.Proxies.RealProxy.GetUnwrappedServer
  parent: System.Runtime.Remoting.Proxies.RealProxy
  isExternal: true
  name: GetUnwrappedServer()
  nameWithType: RealProxy.GetUnwrappedServer()
  fullName: System.Runtime.Remoting.Proxies.RealProxy.GetUnwrappedServer()
  spec.csharp:
  - uid: System.Runtime.Remoting.Proxies.RealProxy.GetUnwrappedServer
    name: GetUnwrappedServer
    nameWithType: RealProxy.GetUnwrappedServer
    fullName: System.Runtime.Remoting.Proxies.RealProxy.GetUnwrappedServer
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Remoting.Proxies.RealProxy.GetUnwrappedServer
    name: GetUnwrappedServer
    nameWithType: RealProxy.GetUnwrappedServer
    fullName: System.Runtime.Remoting.Proxies.RealProxy.GetUnwrappedServer
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Runtime.Remoting.Proxies.RealProxy.DetachServer
  commentId: M:System.Runtime.Remoting.Proxies.RealProxy.DetachServer
  parent: System.Runtime.Remoting.Proxies.RealProxy
  isExternal: true
  name: DetachServer()
  nameWithType: RealProxy.DetachServer()
  fullName: System.Runtime.Remoting.Proxies.RealProxy.DetachServer()
  spec.csharp:
  - uid: System.Runtime.Remoting.Proxies.RealProxy.DetachServer
    name: DetachServer
    nameWithType: RealProxy.DetachServer
    fullName: System.Runtime.Remoting.Proxies.RealProxy.DetachServer
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Remoting.Proxies.RealProxy.DetachServer
    name: DetachServer
    nameWithType: RealProxy.DetachServer
    fullName: System.Runtime.Remoting.Proxies.RealProxy.DetachServer
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Runtime.Remoting.Proxies.RealProxy.AttachServer(System.MarshalByRefObject)
  commentId: M:System.Runtime.Remoting.Proxies.RealProxy.AttachServer(System.MarshalByRefObject)
  parent: System.Runtime.Remoting.Proxies.RealProxy
  isExternal: true
  name: AttachServer(MarshalByRefObject)
  nameWithType: RealProxy.AttachServer(MarshalByRefObject)
  fullName: System.Runtime.Remoting.Proxies.RealProxy.AttachServer(System.MarshalByRefObject)
  spec.csharp:
  - uid: System.Runtime.Remoting.Proxies.RealProxy.AttachServer(System.MarshalByRefObject)
    name: AttachServer
    nameWithType: RealProxy.AttachServer
    fullName: System.Runtime.Remoting.Proxies.RealProxy.AttachServer
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.MarshalByRefObject
    name: MarshalByRefObject
    nameWithType: MarshalByRefObject
    fullName: System.MarshalByRefObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Remoting.Proxies.RealProxy.AttachServer(System.MarshalByRefObject)
    name: AttachServer
    nameWithType: RealProxy.AttachServer
    fullName: System.Runtime.Remoting.Proxies.RealProxy.AttachServer
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.MarshalByRefObject
    name: MarshalByRefObject
    nameWithType: MarshalByRefObject
    fullName: System.MarshalByRefObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Runtime.Remoting.Proxies.RealProxy.SetStubData(System.Runtime.Remoting.Proxies.RealProxy,System.Object)
  commentId: M:System.Runtime.Remoting.Proxies.RealProxy.SetStubData(System.Runtime.Remoting.Proxies.RealProxy,System.Object)
  parent: System.Runtime.Remoting.Proxies.RealProxy
  isExternal: true
  name: SetStubData(RealProxy, Object)
  nameWithType: RealProxy.SetStubData(RealProxy, Object)
  fullName: System.Runtime.Remoting.Proxies.RealProxy.SetStubData(System.Runtime.Remoting.Proxies.RealProxy, System.Object)
  spec.csharp:
  - uid: System.Runtime.Remoting.Proxies.RealProxy.SetStubData(System.Runtime.Remoting.Proxies.RealProxy,System.Object)
    name: SetStubData
    nameWithType: RealProxy.SetStubData
    fullName: System.Runtime.Remoting.Proxies.RealProxy.SetStubData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Remoting.Proxies.RealProxy
    name: RealProxy
    nameWithType: RealProxy
    fullName: System.Runtime.Remoting.Proxies.RealProxy
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Remoting.Proxies.RealProxy.SetStubData(System.Runtime.Remoting.Proxies.RealProxy,System.Object)
    name: SetStubData
    nameWithType: RealProxy.SetStubData
    fullName: System.Runtime.Remoting.Proxies.RealProxy.SetStubData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Remoting.Proxies.RealProxy
    name: RealProxy
    nameWithType: RealProxy
    fullName: System.Runtime.Remoting.Proxies.RealProxy
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Runtime.Remoting.Proxies.RealProxy.GetStubData(System.Runtime.Remoting.Proxies.RealProxy)
  commentId: M:System.Runtime.Remoting.Proxies.RealProxy.GetStubData(System.Runtime.Remoting.Proxies.RealProxy)
  parent: System.Runtime.Remoting.Proxies.RealProxy
  isExternal: true
  name: GetStubData(RealProxy)
  nameWithType: RealProxy.GetStubData(RealProxy)
  fullName: System.Runtime.Remoting.Proxies.RealProxy.GetStubData(System.Runtime.Remoting.Proxies.RealProxy)
  spec.csharp:
  - uid: System.Runtime.Remoting.Proxies.RealProxy.GetStubData(System.Runtime.Remoting.Proxies.RealProxy)
    name: GetStubData
    nameWithType: RealProxy.GetStubData
    fullName: System.Runtime.Remoting.Proxies.RealProxy.GetStubData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Remoting.Proxies.RealProxy
    name: RealProxy
    nameWithType: RealProxy
    fullName: System.Runtime.Remoting.Proxies.RealProxy
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Remoting.Proxies.RealProxy.GetStubData(System.Runtime.Remoting.Proxies.RealProxy)
    name: GetStubData
    nameWithType: RealProxy.GetStubData
    fullName: System.Runtime.Remoting.Proxies.RealProxy.GetStubData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Remoting.Proxies.RealProxy
    name: RealProxy
    nameWithType: RealProxy
    fullName: System.Runtime.Remoting.Proxies.RealProxy
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Runtime.Remoting.Proxies.RealProxy.GetProxiedType
  commentId: M:System.Runtime.Remoting.Proxies.RealProxy.GetProxiedType
  parent: System.Runtime.Remoting.Proxies.RealProxy
  isExternal: true
  name: GetProxiedType()
  nameWithType: RealProxy.GetProxiedType()
  fullName: System.Runtime.Remoting.Proxies.RealProxy.GetProxiedType()
  spec.csharp:
  - uid: System.Runtime.Remoting.Proxies.RealProxy.GetProxiedType
    name: GetProxiedType
    nameWithType: RealProxy.GetProxiedType
    fullName: System.Runtime.Remoting.Proxies.RealProxy.GetProxiedType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Remoting.Proxies.RealProxy.GetProxiedType
    name: GetProxiedType
    nameWithType: RealProxy.GetProxiedType
    fullName: System.Runtime.Remoting.Proxies.RealProxy.GetProxiedType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Runtime.Remoting.Proxies.RealProxy.CreateObjRef(System.Type)
  commentId: M:System.Runtime.Remoting.Proxies.RealProxy.CreateObjRef(System.Type)
  parent: System.Runtime.Remoting.Proxies.RealProxy
  isExternal: true
  name: CreateObjRef(Type)
  nameWithType: RealProxy.CreateObjRef(Type)
  fullName: System.Runtime.Remoting.Proxies.RealProxy.CreateObjRef(System.Type)
  spec.csharp:
  - uid: System.Runtime.Remoting.Proxies.RealProxy.CreateObjRef(System.Type)
    name: CreateObjRef
    nameWithType: RealProxy.CreateObjRef
    fullName: System.Runtime.Remoting.Proxies.RealProxy.CreateObjRef
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Remoting.Proxies.RealProxy.CreateObjRef(System.Type)
    name: CreateObjRef
    nameWithType: RealProxy.CreateObjRef
    fullName: System.Runtime.Remoting.Proxies.RealProxy.CreateObjRef
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Runtime.Remoting.Proxies.RealProxy.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Runtime.Remoting.Proxies.RealProxy.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Remoting.Proxies.RealProxy
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: RealProxy.GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Runtime.Remoting.Proxies.RealProxy.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Runtime.Remoting.Proxies.RealProxy.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: RealProxy.GetObjectData
    fullName: System.Runtime.Remoting.Proxies.RealProxy.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Remoting.Proxies.RealProxy.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: RealProxy.GetObjectData
    fullName: System.Runtime.Remoting.Proxies.RealProxy.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Runtime.Remoting.Proxies.RealProxy.GetCOMIUnknown(System.Boolean)
  commentId: M:System.Runtime.Remoting.Proxies.RealProxy.GetCOMIUnknown(System.Boolean)
  parent: System.Runtime.Remoting.Proxies.RealProxy
  isExternal: true
  name: GetCOMIUnknown(Boolean)
  nameWithType: RealProxy.GetCOMIUnknown(Boolean)
  fullName: System.Runtime.Remoting.Proxies.RealProxy.GetCOMIUnknown(System.Boolean)
  spec.csharp:
  - uid: System.Runtime.Remoting.Proxies.RealProxy.GetCOMIUnknown(System.Boolean)
    name: GetCOMIUnknown
    nameWithType: RealProxy.GetCOMIUnknown
    fullName: System.Runtime.Remoting.Proxies.RealProxy.GetCOMIUnknown
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Remoting.Proxies.RealProxy.GetCOMIUnknown(System.Boolean)
    name: GetCOMIUnknown
    nameWithType: RealProxy.GetCOMIUnknown
    fullName: System.Runtime.Remoting.Proxies.RealProxy.GetCOMIUnknown
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Runtime.Remoting.Proxies.RealProxy.SetCOMIUnknown(System.IntPtr)
  commentId: M:System.Runtime.Remoting.Proxies.RealProxy.SetCOMIUnknown(System.IntPtr)
  parent: System.Runtime.Remoting.Proxies.RealProxy
  isExternal: true
  name: SetCOMIUnknown(IntPtr)
  nameWithType: RealProxy.SetCOMIUnknown(IntPtr)
  fullName: System.Runtime.Remoting.Proxies.RealProxy.SetCOMIUnknown(System.IntPtr)
  spec.csharp:
  - uid: System.Runtime.Remoting.Proxies.RealProxy.SetCOMIUnknown(System.IntPtr)
    name: SetCOMIUnknown
    nameWithType: RealProxy.SetCOMIUnknown
    fullName: System.Runtime.Remoting.Proxies.RealProxy.SetCOMIUnknown
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IntPtr
    name: IntPtr
    nameWithType: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Remoting.Proxies.RealProxy.SetCOMIUnknown(System.IntPtr)
    name: SetCOMIUnknown
    nameWithType: RealProxy.SetCOMIUnknown
    fullName: System.Runtime.Remoting.Proxies.RealProxy.SetCOMIUnknown
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IntPtr
    name: IntPtr
    nameWithType: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Runtime.Remoting.Proxies.RealProxy.SupportsInterface(System.Guid@)
  commentId: M:System.Runtime.Remoting.Proxies.RealProxy.SupportsInterface(System.Guid@)
  parent: System.Runtime.Remoting.Proxies.RealProxy
  isExternal: true
  name: SupportsInterface(Guid)
  nameWithType: RealProxy.SupportsInterface(Guid)
  fullName: System.Runtime.Remoting.Proxies.RealProxy.SupportsInterface(System.Guid)
  spec.csharp:
  - uid: System.Runtime.Remoting.Proxies.RealProxy.SupportsInterface(System.Guid@)
    name: SupportsInterface
    nameWithType: RealProxy.SupportsInterface
    fullName: System.Runtime.Remoting.Proxies.RealProxy.SupportsInterface
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Remoting.Proxies.RealProxy.SupportsInterface(System.Guid@)
    name: SupportsInterface
    nameWithType: RealProxy.SupportsInterface
    fullName: System.Runtime.Remoting.Proxies.RealProxy.SupportsInterface
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Runtime.Remoting.Proxies
  commentId: N:System.Runtime.Remoting.Proxies
  isExternal: false
  name: System.Runtime.Remoting.Proxies
  nameWithType: System.Runtime.Remoting.Proxies
  fullName: System.Runtime.Remoting.Proxies
- uid: Microsoft.EntityFrameworkCore.Design.Internal.ForwardingProxy`1.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.Design.Internal.ForwardingProxy`1.#ctor
  isExternal: false
  name: ForwardingProxy
  nameWithType: ForwardingProxy<T>.ForwardingProxy
  fullName: Microsoft.EntityFrameworkCore.Design.Internal.ForwardingProxy<T>.ForwardingProxy
  nameWithType.vb: ForwardingProxy(Of T).ForwardingProxy
  fullname.vb: Microsoft.EntityFrameworkCore.Design.Internal.ForwardingProxy(Of T).ForwardingProxy
- uid: System.Runtime.Remoting.Proxies.RealProxy.Invoke(System.Runtime.Remoting.Messaging.IMessage)
  commentId: M:System.Runtime.Remoting.Proxies.RealProxy.Invoke(System.Runtime.Remoting.Messaging.IMessage)
  parent: System.Runtime.Remoting.Proxies.RealProxy
  isExternal: true
  name: Invoke(IMessage)
  nameWithType: RealProxy.Invoke(IMessage)
  fullName: System.Runtime.Remoting.Proxies.RealProxy.Invoke(System.Runtime.Remoting.Messaging.IMessage)
  spec.csharp:
  - uid: System.Runtime.Remoting.Proxies.RealProxy.Invoke(System.Runtime.Remoting.Messaging.IMessage)
    name: Invoke
    nameWithType: RealProxy.Invoke
    fullName: System.Runtime.Remoting.Proxies.RealProxy.Invoke
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Remoting.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: System.Runtime.Remoting.Messaging.IMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Remoting.Proxies.RealProxy.Invoke(System.Runtime.Remoting.Messaging.IMessage)
    name: Invoke
    nameWithType: RealProxy.Invoke
    fullName: System.Runtime.Remoting.Proxies.RealProxy.Invoke
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Remoting.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: System.Runtime.Remoting.Messaging.IMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Design.Internal.ForwardingProxy`1.Invoke*
  commentId: Overload:Microsoft.EntityFrameworkCore.Design.Internal.ForwardingProxy`1.Invoke
  isExternal: false
  name: Invoke
  nameWithType: ForwardingProxy<T>.Invoke
  fullName: Microsoft.EntityFrameworkCore.Design.Internal.ForwardingProxy<T>.Invoke
  nameWithType.vb: ForwardingProxy(Of T).Invoke
  fullname.vb: Microsoft.EntityFrameworkCore.Design.Internal.ForwardingProxy(Of T).Invoke
- uid: System.Runtime.Remoting.Messaging.IMessage
  commentId: T:System.Runtime.Remoting.Messaging.IMessage
  parent: System.Runtime.Remoting.Messaging
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: System.Runtime.Remoting.Messaging.IMessage
- uid: System.Runtime.Remoting.Messaging
  commentId: N:System.Runtime.Remoting.Messaging
  isExternal: false
  name: System.Runtime.Remoting.Messaging
  nameWithType: System.Runtime.Remoting.Messaging
  fullName: System.Runtime.Remoting.Messaging
- uid: Microsoft.EntityFrameworkCore.Design.Internal.ForwardingProxy`1.GetTransparentProxy*
  commentId: Overload:Microsoft.EntityFrameworkCore.Design.Internal.ForwardingProxy`1.GetTransparentProxy
  isExternal: false
  name: GetTransparentProxy
  nameWithType: ForwardingProxy<T>.GetTransparentProxy
  fullName: Microsoft.EntityFrameworkCore.Design.Internal.ForwardingProxy<T>.GetTransparentProxy
  nameWithType.vb: ForwardingProxy(Of T).GetTransparentProxy
  fullname.vb: Microsoft.EntityFrameworkCore.Design.Internal.ForwardingProxy(Of T).GetTransparentProxy
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
