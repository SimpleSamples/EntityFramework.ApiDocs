### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.MultiSnapshot
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.MultiSnapshot
  id: MultiSnapshot
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  children:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.MultiSnapshot.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot[])
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.MultiSnapshot.GetValue``1(System.Int32)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.MultiSnapshot.Item(System.Int32)
  langs:
  - csharp
  - vb
  name: MultiSnapshot
  nameWithType: MultiSnapshot
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.MultiSnapshot
  type: Struct
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/MultiSnapshot.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: MultiSnapshot
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/MultiSnapshot.cs
    startLine: 13
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public struct MultiSnapshot : ISnapshot'
    content.vb: >-
      Public Structure MultiSnapshot
          Implements ISnapshot
  implements:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.MultiSnapshot.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot[])
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.MultiSnapshot.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot[])
  id: '#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot[])'
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.MultiSnapshot
  langs:
  - csharp
  - vb
  name: MultiSnapshot(ISnapshot[])
  nameWithType: MultiSnapshot.MultiSnapshot(ISnapshot[])
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.MultiSnapshot.MultiSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot[])
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/MultiSnapshot.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/MultiSnapshot.cs
    startLine: 21
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public MultiSnapshot(ISnapshot[] snapshots)
    content.vb: Public Sub New(snapshots As ISnapshot())
    parameters:
    - id: snapshots
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot[]
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.MultiSnapshot.#ctor*
  nameWithType.vb: MultiSnapshot.MultiSnapshot(ISnapshot())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.MultiSnapshot.MultiSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot())
  name.vb: MultiSnapshot(ISnapshot())
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.MultiSnapshot.GetValue``1(System.Int32)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.MultiSnapshot.GetValue``1(System.Int32)
  id: GetValue``1(System.Int32)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.MultiSnapshot
  langs:
  - csharp
  - vb
  name: GetValue<T>(Int32)
  nameWithType: MultiSnapshot.GetValue<T>(Int32)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.MultiSnapshot.GetValue<T>(System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/MultiSnapshot.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetValue
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/MultiSnapshot.cs
    startLine: 33
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public T GetValue<T>(int index)
    content.vb: Public Function GetValue(Of T)(index As Integer) As T
    parameters:
    - id: index
      type: System.Int32
    typeParameters:
    - id: T
    return:
      type: '{T}'
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.MultiSnapshot.GetValue*
  implements:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot.GetValue``1(System.Int32)
  nameWithType.vb: MultiSnapshot.GetValue(Of T)(Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.MultiSnapshot.GetValue(Of T)(System.Int32)
  name.vb: GetValue(Of T)(Int32)
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.MultiSnapshot.Item(System.Int32)
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.MultiSnapshot.Item(System.Int32)
  id: Item(System.Int32)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.MultiSnapshot
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: MultiSnapshot.Item[Int32]
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.MultiSnapshot.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/MultiSnapshot.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: this[]
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/MultiSnapshot.cs
    startLine: 40
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public object this[int index] { get; set; }
    content.vb: Public Property Item(index As Integer) As Object
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Object
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.MultiSnapshot.Item*
  implements:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot.Item(System.Int32)
  nameWithType.vb: MultiSnapshot.Item(Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.MultiSnapshot.Item(System.Int32)
  name.vb: Item(Int32)
references:
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  commentId: N:Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  nameWithType: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: ISnapshot
  nameWithType: ISnapshot
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.MultiSnapshot.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.MultiSnapshot.#ctor
  isExternal: false
  name: MultiSnapshot
  nameWithType: MultiSnapshot.MultiSnapshot
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.MultiSnapshot.MultiSnapshot
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot[]
  name: ISnapshot[]
  nameWithType: ISnapshot[]
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot[]
  nameWithType.vb: ISnapshot()
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot()
  name.vb: ISnapshot()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot
    name: ISnapshot
    nameWithType: ISnapshot
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot
    name: ISnapshot
    nameWithType: ISnapshot
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.MultiSnapshot.GetValue*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.MultiSnapshot.GetValue
  isExternal: false
  name: GetValue<T>
  nameWithType: MultiSnapshot.GetValue<T>
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.MultiSnapshot.GetValue<T>
  nameWithType.vb: MultiSnapshot.GetValue(Of T)
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.MultiSnapshot.GetValue(Of T)
  name.vb: GetValue(Of T)
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot.GetValue``1(System.Int32)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot.GetValue``1(System.Int32)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot
  isExternal: true
  name: GetValue<T>(Int32)
  nameWithType: ISnapshot.GetValue<T>(Int32)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot.GetValue<T>(System.Int32)
  nameWithType.vb: ISnapshot.GetValue(Of T)(Int32)
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot.GetValue(Of T)(System.Int32)
  name.vb: GetValue(Of T)(Int32)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot.GetValue``1(System.Int32)
    name: GetValue<T>
    nameWithType: ISnapshot.GetValue<T>
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot.GetValue<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot.GetValue``1(System.Int32)
    name: GetValue(Of T)
    nameWithType: ISnapshot.GetValue(Of T)
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot.GetValue(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.MultiSnapshot.Item*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.MultiSnapshot.Item
  isExternal: false
  name: Item
  nameWithType: MultiSnapshot.Item
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.MultiSnapshot.Item
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot.Item(System.Int32)
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot.Item(System.Int32)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot
  isExternal: true
  name: Item[Int32]
  nameWithType: ISnapshot.Item[Int32]
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot.Item[System.Int32]
  nameWithType.vb: ISnapshot.Item(Int32)
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot.Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot.Item(System.Int32)
    name: Item
    nameWithType: ISnapshot.Item
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot.Item(System.Int32)
    name: Item
    nameWithType: ISnapshot.Item
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
