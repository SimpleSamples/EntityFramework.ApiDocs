### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap
  id: IDependentsMap
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  children:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Add(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.GetDependents(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.GetDependentsUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Remove(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Update(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  langs:
  - csharp
  - vb
  name: IDependentsMap
  nameWithType: IDependentsMap
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap
  type: Interface
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IDependentsMap.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IDependentsMap
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IDependentsMap.cs
    startLine: 12
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public interface IDependentsMap
    content.vb: Public Interface IDependentsMap
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Add(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Add(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  id: Add(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap
  langs:
  - csharp
  - vb
  name: Add(InternalEntityEntry)
  nameWithType: IDependentsMap.Add(InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Add(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IDependentsMap.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Add
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IDependentsMap.cs
    startLine: 18
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: void Add(InternalEntityEntry entry)
    content.vb: Sub Add(entry As InternalEntityEntry)
    parameters:
    - id: entry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Add*
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Update(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Update(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  id: Update(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap
  langs:
  - csharp
  - vb
  name: Update(InternalEntityEntry)
  nameWithType: IDependentsMap.Update(InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Update(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IDependentsMap.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Update
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IDependentsMap.cs
    startLine: 24
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: void Update(InternalEntityEntry entry)
    content.vb: Sub Update(entry As InternalEntityEntry)
    parameters:
    - id: entry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Update*
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Remove(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Remove(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  id: Remove(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap
  langs:
  - csharp
  - vb
  name: Remove(InternalEntityEntry)
  nameWithType: IDependentsMap.Remove(InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Remove(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IDependentsMap.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Remove
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IDependentsMap.cs
    startLine: 30
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: void Remove(InternalEntityEntry entry)
    content.vb: Sub Remove(entry As InternalEntityEntry)
    parameters:
    - id: entry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Remove*
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.GetDependents(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.GetDependents(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  id: GetDependents(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap
  langs:
  - csharp
  - vb
  name: GetDependents(InternalEntityEntry)
  nameWithType: IDependentsMap.GetDependents(InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.GetDependents(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IDependentsMap.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetDependents
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IDependentsMap.cs
    startLine: 36
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: IEnumerable<InternalEntityEntry> GetDependents(InternalEntityEntry principalEntry)
    content.vb: Function GetDependents(principalEntry As InternalEntityEntry) As IEnumerable(Of InternalEntityEntry)
    parameters:
    - id: principalEntry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry}
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.GetDependents*
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.GetDependentsUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.GetDependentsUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  id: GetDependentsUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap
  langs:
  - csharp
  - vb
  name: GetDependentsUsingRelationshipSnapshot(InternalEntityEntry)
  nameWithType: IDependentsMap.GetDependentsUsingRelationshipSnapshot(InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.GetDependentsUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IDependentsMap.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetDependentsUsingRelationshipSnapshot
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IDependentsMap.cs
    startLine: 42
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: IEnumerable<InternalEntityEntry> GetDependentsUsingRelationshipSnapshot(InternalEntityEntry principalEntry)
    content.vb: Function GetDependentsUsingRelationshipSnapshot(principalEntry As InternalEntityEntry) As IEnumerable(Of InternalEntityEntry)
    parameters:
    - id: principalEntry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry}
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.GetDependentsUsingRelationshipSnapshot*
references:
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  commentId: N:Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  nameWithType: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Add*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Add
  isExternal: false
  name: Add
  nameWithType: IDependentsMap.Add
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Add
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: InternalEntityEntry
  nameWithType: InternalEntityEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Update*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Update
  isExternal: false
  name: Update
  nameWithType: IDependentsMap.Update
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Update
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Remove*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Remove
  isExternal: false
  name: Remove
  nameWithType: IDependentsMap.Remove
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Remove
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.GetDependents*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.GetDependents
  isExternal: false
  name: GetDependents
  nameWithType: IDependentsMap.GetDependents
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.GetDependents
- uid: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<InternalEntityEntry>
  nameWithType: IEnumerable<InternalEntityEntry>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry>
  nameWithType.vb: IEnumerable(Of InternalEntityEntry)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  name.vb: IEnumerable(Of InternalEntityEntry)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.GetDependentsUsingRelationshipSnapshot*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.GetDependentsUsingRelationshipSnapshot
  isExternal: false
  name: GetDependentsUsingRelationshipSnapshot
  nameWithType: IDependentsMap.GetDependentsUsingRelationshipSnapshot
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.GetDependentsUsingRelationshipSnapshot
