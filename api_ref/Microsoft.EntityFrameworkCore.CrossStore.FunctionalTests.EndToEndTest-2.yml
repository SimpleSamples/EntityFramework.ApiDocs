### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest`2
  commentId: T:Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest`2
  id: EndToEndTest`2
  parent: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests
  children:
  - Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest`2.#ctor(`1)
  - Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest`2.Can_save_changes_and_query
  - Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest`2.CreateContext
  - Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest`2.Dispose
  - Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest`2.Fixture
  - Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest`2.TestStore
  langs:
  - csharp
  - vb
  name: EndToEndTest<TTestStore, TFixture>
  nameWithType: EndToEndTest<TTestStore, TFixture>
  fullName: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest<TTestStore, TFixture>
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests/EndToEndTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: EndToEndTest
    path: test/Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests/EndToEndTest.cs
    startLine: 16
  assemblies:
  - Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests
  syntax:
    content: 'public abstract class EndToEndTest<TTestStore, TFixture> : IDisposable where TTestStore : TestStore where TFixture : CrossStoreFixture, new ()'
    content.vb: >-
      Public MustInherit Class EndToEndTest(Of TTestStore As TestStore, TFixture As {CrossStoreFixture, New})
          Implements IDisposable
    typeParameters:
    - id: TTestStore
    - id: TFixture
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: EndToEndTest(Of TTestStore, TFixture)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest(Of TTestStore, TFixture)
  name.vb: EndToEndTest(Of TTestStore, TFixture)
- uid: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest`2.Can_save_changes_and_query
  commentId: M:Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest`2.Can_save_changes_and_query
  id: Can_save_changes_and_query
  parent: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest`2
  langs:
  - csharp
  - vb
  name: Can_save_changes_and_query()
  nameWithType: EndToEndTest<TTestStore, TFixture>.Can_save_changes_and_query()
  fullName: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest<TTestStore, TFixture>.Can_save_changes_and_query()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests/EndToEndTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_save_changes_and_query
    path: test/Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests/EndToEndTest.cs
    startLine: 20
  assemblies:
  - Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests
  syntax:
    content: public virtual void Can_save_changes_and_query()
    content.vb: Public Overridable Sub Can_save_changes_and_query
  overload: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest`2.Can_save_changes_and_query*
  nameWithType.vb: EndToEndTest(Of TTestStore, TFixture).Can_save_changes_and_query()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest(Of TTestStore, TFixture).Can_save_changes_and_query()
- uid: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest`2.#ctor(`1)
  commentId: M:Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest`2.#ctor(`1)
  id: '#ctor(`1)'
  parent: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest`2
  langs:
  - csharp
  - vb
  name: EndToEndTest(TFixture)
  nameWithType: EndToEndTest<TTestStore, TFixture>.EndToEndTest(TFixture)
  fullName: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest<TTestStore, TFixture>.EndToEndTest(TFixture)
  type: Constructor
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests/EndToEndTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: test/Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests/EndToEndTest.cs
    startLine: 77
  assemblies:
  - Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests
  syntax:
    content: protected EndToEndTest(TFixture fixture)
    content.vb: Protected Sub New(fixture As TFixture)
    parameters:
    - id: fixture
      type: '{TFixture}'
  overload: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest`2.#ctor*
  nameWithType.vb: EndToEndTest(Of TTestStore, TFixture).EndToEndTest(TFixture)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest(Of TTestStore, TFixture).EndToEndTest(TFixture)
- uid: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest`2.Fixture
  commentId: P:Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest`2.Fixture
  id: Fixture
  parent: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest`2
  langs:
  - csharp
  - vb
  name: Fixture
  nameWithType: EndToEndTest<TTestStore, TFixture>.Fixture
  fullName: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest<TTestStore, TFixture>.Fixture
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests/EndToEndTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Fixture
    path: test/Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests/EndToEndTest.cs
    startLine: 83
  assemblies:
  - Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests
  syntax:
    content: protected TFixture Fixture { get; }
    content.vb: Protected ReadOnly Property Fixture As TFixture
    parameters: []
    return:
      type: '{TFixture}'
  overload: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest`2.Fixture*
  nameWithType.vb: EndToEndTest(Of TTestStore, TFixture).Fixture
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest(Of TTestStore, TFixture).Fixture
- uid: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest`2.TestStore
  commentId: P:Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest`2.TestStore
  id: TestStore
  parent: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest`2
  langs:
  - csharp
  - vb
  name: TestStore
  nameWithType: EndToEndTest<TTestStore, TFixture>.TestStore
  fullName: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest<TTestStore, TFixture>.TestStore
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests/EndToEndTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TestStore
    path: test/Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests/EndToEndTest.cs
    startLine: 85
  assemblies:
  - Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests
  syntax:
    content: protected TTestStore TestStore { get; }
    content.vb: Protected ReadOnly Property TestStore As TTestStore
    parameters: []
    return:
      type: '{TTestStore}'
  overload: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest`2.TestStore*
  nameWithType.vb: EndToEndTest(Of TTestStore, TFixture).TestStore
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest(Of TTestStore, TFixture).TestStore
- uid: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest`2.Dispose
  commentId: M:Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest`2.Dispose
  id: Dispose
  parent: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest`2
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: EndToEndTest<TTestStore, TFixture>.Dispose()
  fullName: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest<TTestStore, TFixture>.Dispose()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests/EndToEndTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Dispose
    path: test/Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests/EndToEndTest.cs
    startLine: 87
  assemblies:
  - Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest`2.Dispose*
  implements:
  - System.IDisposable.Dispose
  nameWithType.vb: EndToEndTest(Of TTestStore, TFixture).Dispose()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest(Of TTestStore, TFixture).Dispose()
- uid: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest`2.CreateContext
  commentId: M:Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest`2.CreateContext
  id: CreateContext
  parent: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest`2
  langs:
  - csharp
  - vb
  name: CreateContext()
  nameWithType: EndToEndTest<TTestStore, TFixture>.CreateContext()
  fullName: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest<TTestStore, TFixture>.CreateContext()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests/EndToEndTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateContext
    path: test/Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests/EndToEndTest.cs
    startLine: 89
  assemblies:
  - Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests
  syntax:
    content: protected CrossStoreContext CreateContext()
    content.vb: Protected Function CreateContext As CrossStoreContext
    return:
      type: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.TestModels.CrossStoreContext
  overload: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest`2.CreateContext*
  nameWithType.vb: EndToEndTest(Of TTestStore, TFixture).CreateContext()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest(Of TTestStore, TFixture).CreateContext()
references:
- uid: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests
  commentId: N:Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests
  nameWithType: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests
  fullName: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest`2.Can_save_changes_and_query*
  commentId: Overload:Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest`2.Can_save_changes_and_query
  isExternal: false
  name: Can_save_changes_and_query
  nameWithType: EndToEndTest<TTestStore, TFixture>.Can_save_changes_and_query
  fullName: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest<TTestStore, TFixture>.Can_save_changes_and_query
  nameWithType.vb: EndToEndTest(Of TTestStore, TFixture).Can_save_changes_and_query
  fullname.vb: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest(Of TTestStore, TFixture).Can_save_changes_and_query
- uid: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest`2.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest`2.#ctor
  isExternal: false
  name: EndToEndTest
  nameWithType: EndToEndTest<TTestStore, TFixture>.EndToEndTest
  fullName: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest<TTestStore, TFixture>.EndToEndTest
  nameWithType.vb: EndToEndTest(Of TTestStore, TFixture).EndToEndTest
  fullname.vb: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest(Of TTestStore, TFixture).EndToEndTest
- uid: '{TFixture}'
  commentId: '!:TFixture'
  definition: TFixture
  name: TFixture
  nameWithType: TFixture
  fullName: TFixture
- uid: TFixture
  isExternal: false
  name: TFixture
  nameWithType: TFixture
  fullName: TFixture
- uid: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest`2.Fixture*
  commentId: Overload:Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest`2.Fixture
  isExternal: false
  name: Fixture
  nameWithType: EndToEndTest<TTestStore, TFixture>.Fixture
  fullName: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest<TTestStore, TFixture>.Fixture
  nameWithType.vb: EndToEndTest(Of TTestStore, TFixture).Fixture
  fullname.vb: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest(Of TTestStore, TFixture).Fixture
- uid: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest`2.TestStore*
  commentId: Overload:Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest`2.TestStore
  isExternal: false
  name: TestStore
  nameWithType: EndToEndTest<TTestStore, TFixture>.TestStore
  fullName: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest<TTestStore, TFixture>.TestStore
  nameWithType.vb: EndToEndTest(Of TTestStore, TFixture).TestStore
  fullname.vb: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest(Of TTestStore, TFixture).TestStore
- uid: '{TTestStore}'
  commentId: '!:TTestStore'
  definition: TTestStore
  name: TTestStore
  nameWithType: TTestStore
  fullName: TTestStore
- uid: TTestStore
  isExternal: false
  name: TTestStore
  nameWithType: TTestStore
  fullName: TTestStore
- uid: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest`2.Dispose*
  commentId: Overload:Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest`2.Dispose
  isExternal: false
  name: Dispose
  nameWithType: EndToEndTest<TTestStore, TFixture>.Dispose
  fullName: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest<TTestStore, TFixture>.Dispose
  nameWithType.vb: EndToEndTest(Of TTestStore, TFixture).Dispose
  fullname.vb: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest(Of TTestStore, TFixture).Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest`2.CreateContext*
  commentId: Overload:Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest`2.CreateContext
  isExternal: false
  name: CreateContext
  nameWithType: EndToEndTest<TTestStore, TFixture>.CreateContext
  fullName: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest<TTestStore, TFixture>.CreateContext
  nameWithType.vb: EndToEndTest(Of TTestStore, TFixture).CreateContext
  fullname.vb: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.EndToEndTest(Of TTestStore, TFixture).CreateContext
- uid: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.TestModels.CrossStoreContext
  commentId: T:Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.TestModels.CrossStoreContext
  parent: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.TestModels
  isExternal: false
  name: CrossStoreContext
  nameWithType: CrossStoreContext
  fullName: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.TestModels.CrossStoreContext
- uid: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.TestModels
  commentId: N:Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.TestModels
  isExternal: false
  name: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.TestModels
  nameWithType: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.TestModels
  fullName: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.TestModels
