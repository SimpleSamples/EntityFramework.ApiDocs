### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry
  id: NavigationEntry
  parent: Microsoft.EntityFrameworkCore.ChangeTracking
  children:
  - Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation)
  - Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.String,System.Boolean)
  - Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Finder(System.Type)
  - Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.IsLoaded
  - Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.IsModified
  - Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Load
  - Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.LoadAsync(System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Metadata
  - Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Query
  langs:
  - csharp
  - vb
  name: NavigationEntry
  nameWithType: NavigationEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/NavigationEntry.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: NavigationEntry
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/NavigationEntry.cs
    startLine: 28
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\n<p>\n    Provides access to change tracking and loading information for a navigation property\n    that associates this entity to one or more other entities.\n</p>\n<p>\n    Instances of this class are returned from methods when using the <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker\" data-throw-if-not-resolved=\"false\"></xref> API and it is\n    not designed to be directly constructed in your application code.\n</p>\n"
  example: []
  syntax:
    content: 'public abstract class NavigationEntry : MemberEntry, IInfrastructure<InternalEntityEntry>'
    content.vb: >-
      Public MustInherit Class NavigationEntry
          Inherits MemberEntry
          Implements IInfrastructure(Of InternalEntityEntry)
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry
  implements:
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry}
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.InternalEntry
  - Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.CurrentValue
  - Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.EntityEntry
  - Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#ChangeTracking#Internal#InternalEntityEntry}#Instance
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry}.Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.String,System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.String,System.Boolean)
  id: '#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.String,System.Boolean)'
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry
  langs:
  - csharp
  - vb
  name: NavigationEntry(InternalEntityEntry, String, Boolean)
  nameWithType: NavigationEntry.NavigationEntry(InternalEntityEntry, String, Boolean)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.NavigationEntry(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, System.String, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/NavigationEntry.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/NavigationEntry.cs
    startLine: 36
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected NavigationEntry(InternalEntityEntry internalEntry, string name, bool collection)
    content.vb: Protected Sub New(internalEntry As InternalEntityEntry, name As String, collection As Boolean)
    parameters:
    - id: internalEntry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    - id: name
      type: System.String
    - id: collection
      type: System.Boolean
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation)
  id: '#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation)'
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry
  langs:
  - csharp
  - vb
  name: NavigationEntry(InternalEntityEntry, INavigation)
  nameWithType: NavigationEntry.NavigationEntry(InternalEntityEntry, INavigation)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.NavigationEntry(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, Microsoft.EntityFrameworkCore.Metadata.INavigation)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/NavigationEntry.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/NavigationEntry.cs
    startLine: 45
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected NavigationEntry(InternalEntityEntry internalEntry, INavigation navigation)
    content.vb: Protected Sub New(internalEntry As InternalEntityEntry, navigation As INavigation)
    parameters:
    - id: internalEntry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    - id: navigation
      type: Microsoft.EntityFrameworkCore.Metadata.INavigation
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Load
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Load
  id: Load
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry
  langs:
  - csharp
  - vb
  name: Load()
  nameWithType: NavigationEntry.Load()
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Load()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/NavigationEntry.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/NavigationEntry.cs
    startLine: 92
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\n<p>\n    Loads the entity or entities referenced by this navigation property, unless <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.IsLoaded\" data-throw-if-not-resolved=\"false\"></xref>\n    is already set to true.\n</p>\n<p>\n    Note that entities that are already being tracked are not overwritten with new data from the database.\n</p>\n"
  example: []
  syntax:
    content: public virtual void Load()
    content.vb: Public Overridable Sub Load
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Load*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.LoadAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.LoadAsync(System.Threading.CancellationToken)
  id: LoadAsync(System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry
  langs:
  - csharp
  - vb
  name: LoadAsync(CancellationToken)
  nameWithType: NavigationEntry.LoadAsync(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.LoadAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/NavigationEntry.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: LoadAsync
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/NavigationEntry.cs
    startLine: 119
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\n<p>\n    Loads the entity or entities referenced by this navigation property, unless <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.IsLoaded\" data-throw-if-not-resolved=\"false\"></xref>\n    is already set to true.\n</p>\n<p>\n    Note that entities that are already being tracked are not overwritten with new data from the database.\n</p>\n<p>\n    Multiple active operations on the same context instance are not supported.  Use 'await' to ensure\n    that any asynchronous operations have completed before calling another method on this context.\n</p>\n"
  example: []
  syntax:
    content: public virtual Task LoadAsync(CancellationToken cancellationToken = null)
    content.vb: Public Overridable Function LoadAsync(cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nA <xref href=\"System.Threading.CancellationToken\" data-throw-if-not-resolved=\"false\"></xref> to observe while waiting for the task to complete.\n"
    return:
      type: System.Threading.Tasks.Task
      description: "\nA task that represents the asynchronous save operation.\n"
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.LoadAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Query
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Query
  id: Query
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry
  langs:
  - csharp
  - vb
  name: Query()
  nameWithType: NavigationEntry.Query()
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Query()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/NavigationEntry.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Query
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/NavigationEntry.cs
    startLine: 136
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\n<p>\n    Returns the query that would be used by <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Load\" data-throw-if-not-resolved=\"false\"></xref> to load entities referenced by\n    this navigation property.\n</p>\n<p>\n    The query can be composed over using LINQ to perform filtering, counting, etc. without\n    actually loading all entities from the database.\n</p>\n"
  example: []
  syntax:
    content: public virtual IQueryable Query()
    content.vb: Public Overridable Function Query As IQueryable
    return:
      type: System.Linq.IQueryable
      description: 'The query to load related entities. '
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Query*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.IsLoaded
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.IsLoaded
  id: IsLoaded
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry
  langs:
  - csharp
  - vb
  name: IsLoaded
  nameWithType: NavigationEntry.IsLoaded
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.IsLoaded
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/NavigationEntry.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IsLoaded
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/NavigationEntry.cs
    startLine: 162
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\n<p>\n    Gets or sets a value indicating whether the entity or entities referenced by this navigation property\n    are known to be loaded.\n</p>\n<p>\n    Loading entities from the database using\n<xref href=\"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include%60%602(System.Linq.IQueryable%7b%60%600%7d%2cSystem.Linq.Expressions.Expression%7bSystem.Func%7b%60%600%2c%60%601%7d%7d)\" data-throw-if-not-resolved=\"false\"></xref> or\n<xref href=\"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ThenInclude%60%603(Microsoft.EntityFrameworkCore.Query.IIncludableQueryable%7b%60%600%2cSystem.Collections.Generic.IEnumerable%7b%60%601%7d%7d%2cSystem.Linq.Expressions.Expression%7bSystem.Func%7b%60%601%2c%60%602%7d%7d)\" data-throw-if-not-resolved=\"false\"></xref>\n, <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Load\" data-throw-if-not-resolved=\"false\"></xref>, or <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.LoadAsync(System.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref> will set this flag. Subseqent calls to <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Load\" data-throw-if-not-resolved=\"false\"></xref>\nor <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.LoadAsync(System.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref> will then be a no-op.\n</p>\n<p>\n    It is possible for IsLoaded to be false even if all related entities are loaded. This is because, depending on\n    how entities are loaded, it is not always possible to know for sure that all entities in a related collection\n    have been loaded. In such cases, calling <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Load\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.LoadAsync(System.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref> will ensure all\n    related entities are loaded and will set this flag to true.\n</p>\n"
  example: []
  syntax:
    content: public virtual bool IsLoaded { get; set; }
    content.vb: Public Overridable Property IsLoaded As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\nTrue if all the related entities are loaded or the IsLoaded has been explicitly set to true.\n"
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.IsLoaded*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Finder(System.Type)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Finder(System.Type)
  id: Finder(System.Type)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry
  langs:
  - csharp
  - vb
  name: Finder(Type)
  nameWithType: NavigationEntry.Finder(Type)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Finder(System.Type)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/NavigationEntry.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Finder
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/NavigationEntry.cs
    startLine: 172
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IEntityFinder Finder(Type entityType)
    content.vb: Protected Overridable Function Finder(entityType As Type) As IEntityFinder
    parameters:
    - id: entityType
      type: System.Type
    return:
      type: Microsoft.EntityFrameworkCore.Internal.IEntityFinder
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Finder*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.IsModified
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.IsModified
  id: IsModified
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry
  langs:
  - csharp
  - vb
  name: IsModified
  nameWithType: NavigationEntry.IsModified
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.IsModified
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/NavigationEntry.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IsModified
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/NavigationEntry.cs
    startLine: 182
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\nGets or sets a value indicating whether any of foreign key property values associated\nwith this navigation property have been modified and should be updated in the database\nwhen <xref href=\"Microsoft.EntityFrameworkCore.DbContext.SaveChanges\" data-throw-if-not-resolved=\"false\"></xref> is called.\n"
  example: []
  syntax:
    content: public override bool IsModified { get; set; }
    content.vb: Public Overrides Property IsModified As Boolean
    parameters: []
    return:
      type: System.Boolean
  overridden: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.IsModified
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.IsModified*
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Metadata
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Metadata
  id: Metadata
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: NavigationEntry.Metadata
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Metadata
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/NavigationEntry.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Metadata
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/NavigationEntry.cs
    startLine: 256
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\nGets the metadata that describes the facets of this property and how it maps to the database.\n"
  example: []
  syntax:
    content: public virtual INavigation Metadata { get; }
    content.vb: Public Overridable ReadOnly Property Metadata As INavigation
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.INavigation
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Metadata*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
references:
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker
  parent: Microsoft.EntityFrameworkCore.ChangeTracking
  isExternal: false
  name: ChangeTracker
  nameWithType: ChangeTracker
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker
- uid: Microsoft.EntityFrameworkCore.ChangeTracking
  commentId: N:Microsoft.EntityFrameworkCore.ChangeTracking
  isExternal: false
  name: Microsoft.EntityFrameworkCore.ChangeTracking
  nameWithType: Microsoft.EntityFrameworkCore.ChangeTracking
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry
  parent: Microsoft.EntityFrameworkCore.ChangeTracking
  isExternal: false
  name: MemberEntry
  nameWithType: MemberEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry}
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry}
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  definition: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  name: IInfrastructure<InternalEntityEntry>
  nameWithType: IInfrastructure<InternalEntityEntry>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry>
  nameWithType.vb: IInfrastructure(Of InternalEntityEntry)
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  name.vb: IInfrastructure(Of InternalEntityEntry)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.InternalEntry
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.InternalEntry
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry
  isExternal: false
  name: InternalEntry
  nameWithType: MemberEntry.InternalEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.InternalEntry
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.CurrentValue
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.CurrentValue
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry
  isExternal: false
  name: CurrentValue
  nameWithType: MemberEntry.CurrentValue
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.CurrentValue
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.EntityEntry
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.EntityEntry
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry
  isExternal: false
  name: EntityEntry
  nameWithType: MemberEntry.EntityEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.EntityEntry
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#ChangeTracking#Internal#InternalEntityEntry}#Instance
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#ChangeTracking#Internal#InternalEntityEntry}#Instance
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry
  isExternal: false
  name: IInfrastructure<InternalEntityEntry>.Instance
  nameWithType: MemberEntry.IInfrastructure<InternalEntityEntry>.Instance
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry>.Instance
  nameWithType.vb: MemberEntry.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry>.Instance
  name.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry>.Instance
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry}.Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
  parent: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions
  definition: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
  name: GetInfrastructure<InternalEntityEntry>()
  nameWithType: AccessorExtensions.GetInfrastructure<InternalEntityEntry>()
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry>()
  nameWithType.vb: AccessorExtensions.GetInfrastructure(Of InternalEntityEntry)()
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure(Of Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)()
  name.vb: GetInfrastructure(Of InternalEntityEntry)()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1
    name: GetInfrastructure<InternalEntityEntry>
    nameWithType: AccessorExtensions.GetInfrastructure<InternalEntityEntry>
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1
    name: GetInfrastructure(Of InternalEntityEntry)
    nameWithType: AccessorExtensions.GetInfrastructure(Of InternalEntityEntry)
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure(Of Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  isExternal: false
  name: IInfrastructure<T>
  nameWithType: IInfrastructure<T>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<T>
  nameWithType.vb: IInfrastructure(Of T)
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of T)
  name.vb: IInfrastructure(Of T)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure
  commentId: N:Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Infrastructure
  nameWithType: Microsoft.EntityFrameworkCore.Infrastructure
  fullName: Microsoft.EntityFrameworkCore.Infrastructure
- uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
  isExternal: false
  name: GetInfrastructure<T>(IInfrastructure<T>)
  nameWithType: AccessorExtensions.GetInfrastructure<T>(IInfrastructure<T>)
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure<T>(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<T>)
  nameWithType.vb: AccessorExtensions.GetInfrastructure(Of T)(IInfrastructure(Of T))
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure(Of T)(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of T))
  name.vb: GetInfrastructure(Of T)(IInfrastructure(Of T))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
    name: GetInfrastructure<T>
    nameWithType: AccessorExtensions.GetInfrastructure<T>
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
    name: GetInfrastructure(Of T)
    nameWithType: AccessorExtensions.GetInfrastructure(Of T)
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: AccessorExtensions
  nameWithType: AccessorExtensions
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.#ctor
  isExternal: false
  name: NavigationEntry
  nameWithType: NavigationEntry.NavigationEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.NavigationEntry
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: InternalEntityEntry
  nameWithType: InternalEntityEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  commentId: N:Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  nameWithType: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
- uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.INavigation
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: INavigation
  nameWithType: INavigation
  fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.IsLoaded
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.IsLoaded
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry
  isExternal: false
  name: IsLoaded
  nameWithType: NavigationEntry.IsLoaded
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.IsLoaded
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Load*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Load
  isExternal: false
  name: Load
  nameWithType: NavigationEntry.Load
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Load
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry
  parent: Microsoft.EntityFrameworkCore.ChangeTracking
  isExternal: false
  name: NavigationEntry
  nameWithType: NavigationEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.LoadAsync*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.LoadAsync
  isExternal: false
  name: LoadAsync
  nameWithType: NavigationEntry.LoadAsync
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.LoadAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Load
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Load
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry
  isExternal: false
  name: Load()
  nameWithType: NavigationEntry.Load()
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Load()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Load
    name: Load
    nameWithType: NavigationEntry.Load
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Load
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Load
    name: Load
    nameWithType: NavigationEntry.Load
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Load
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Query*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Query
  isExternal: false
  name: Query
  nameWithType: NavigationEntry.Query
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Query
- uid: System.Linq.IQueryable
  commentId: T:System.Linq.IQueryable
  parent: System.Linq
  isExternal: true
  name: IQueryable
  nameWithType: IQueryable
  fullName: System.Linq.IQueryable
- uid: System.Linq
  commentId: N:System.Linq
  isExternal: false
  name: System.Linq
  nameWithType: System.Linq
  fullName: System.Linq
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  isExternal: true
  name: Include<TEntity, TProperty>(IQueryable<TEntity>, Expression<Func<TEntity, TProperty>>)
  nameWithType: EntityFrameworkQueryableExtensions.Include<TEntity, TProperty>(IQueryable<TEntity>, Expression<Func<TEntity, TProperty>>)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include<TEntity, TProperty>(System.Linq.IQueryable<TEntity>, System.Linq.Expressions.Expression<System.Func<TEntity, TProperty>>)
  nameWithType.vb: EntityFrameworkQueryableExtensions.Include(Of TEntity, TProperty)(IQueryable(Of TEntity), Expression(Of Func(Of TEntity, TProperty)))
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include(Of TEntity, TProperty)(System.Linq.IQueryable(Of TEntity), System.Linq.Expressions.Expression(Of System.Func(Of TEntity, TProperty)))
  name.vb: Include(Of TEntity, TProperty)(IQueryable(Of TEntity), Expression(Of Func(Of TEntity, TProperty)))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
    name: Include<TEntity, TProperty>
    nameWithType: EntityFrameworkQueryableExtensions.Include<TEntity, TProperty>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include<TEntity, TProperty>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
    name: Include(Of TEntity, TProperty)
    nameWithType: EntityFrameworkQueryableExtensions.Include(Of TEntity, TProperty)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include(Of TEntity, TProperty)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ThenInclude``3(Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{``0,System.Collections.Generic.IEnumerable{``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ThenInclude``3(Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{``0,System.Collections.Generic.IEnumerable{``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.LoadAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.LoadAsync(System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry
  isExternal: true
  name: LoadAsync(CancellationToken)
  nameWithType: NavigationEntry.LoadAsync(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.LoadAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.LoadAsync(System.Threading.CancellationToken)
    name: LoadAsync
    nameWithType: NavigationEntry.LoadAsync
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.LoadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.LoadAsync(System.Threading.CancellationToken)
    name: LoadAsync
    nameWithType: NavigationEntry.LoadAsync
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.LoadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.IsLoaded*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.IsLoaded
  isExternal: false
  name: IsLoaded
  nameWithType: NavigationEntry.IsLoaded
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.IsLoaded
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Finder*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Finder
  isExternal: false
  name: Finder
  nameWithType: NavigationEntry.Finder
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Finder
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder
  commentId: T:Microsoft.EntityFrameworkCore.Internal.IEntityFinder
  parent: Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: IEntityFinder
  nameWithType: IEntityFinder
  fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder
- uid: Microsoft.EntityFrameworkCore.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Internal
  fullName: Microsoft.EntityFrameworkCore.Internal
- uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: false
  name: SaveChanges()
  nameWithType: DbContext.SaveChanges()
  fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChanges()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
    name: SaveChanges
    nameWithType: DbContext.SaveChanges
    fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
    name: SaveChanges
    nameWithType: DbContext.SaveChanges
    fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.IsModified
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.IsModified
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry
  isExternal: false
  name: IsModified
  nameWithType: MemberEntry.IsModified
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.IsModified
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.IsModified*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.IsModified
  isExternal: false
  name: IsModified
  nameWithType: NavigationEntry.IsModified
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.IsModified
- uid: Microsoft.EntityFrameworkCore.DbContext
  commentId: T:Microsoft.EntityFrameworkCore.DbContext
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: DbContext
  nameWithType: DbContext
  fullName: Microsoft.EntityFrameworkCore.DbContext
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: false
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Metadata*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Metadata
  isExternal: false
  name: Metadata
  nameWithType: NavigationEntry.Metadata
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Metadata
