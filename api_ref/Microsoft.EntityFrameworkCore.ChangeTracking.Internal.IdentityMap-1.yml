### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1
  id: IdentityMap`1
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  children:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.#ctor(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory{`0})
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(`0,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.AddOrUpdate(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Contains(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Contains(Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.FindDependentsMap(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.GetDependentsMap(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Key
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.PrincipalKeyValueFactory
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Remove(`0,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Remove(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.RemoveUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.TryGetEntry(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.TryGetEntry(Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Boolean)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.TryGetEntry(System.Object[])
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.TryGetEntryUsingPreStoreGeneratedValues(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.TryGetEntryUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  langs:
  - csharp
  - vb
  name: IdentityMap<TKey>
  nameWithType: IdentityMap<TKey>
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap<TKey>
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IdentityMap.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IdentityMap
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IdentityMap.cs
    startLine: 18
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class IdentityMap<TKey> : IIdentityMap'
    content.vb: >-
      Public Class IdentityMap(Of TKey)
          Implements IIdentityMap
    typeParameters:
    - id: TKey
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: IdentityMap(Of TKey)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap(Of TKey)
  name.vb: IdentityMap(Of TKey)
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.#ctor(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory{`0})
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.#ctor(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory{`0})
  id: '#ctor(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory{`0})'
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1
  langs:
  - csharp
  - vb
  name: IdentityMap(IKey, IPrincipalKeyValueFactory<TKey>)
  nameWithType: IdentityMap<TKey>.IdentityMap(IKey, IPrincipalKeyValueFactory<TKey>)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap<TKey>.IdentityMap(Microsoft.EntityFrameworkCore.Metadata.IKey, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory<TKey>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IdentityMap.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IdentityMap.cs
    startLine: 28
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public IdentityMap(IKey key, IPrincipalKeyValueFactory<TKey> principalKeyValueFactory)
    content.vb: Public Sub New(key As IKey, principalKeyValueFactory As IPrincipalKeyValueFactory(Of TKey))
    parameters:
    - id: key
      type: Microsoft.EntityFrameworkCore.Metadata.IKey
    - id: principalKeyValueFactory
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory{{TKey}}
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.#ctor*
  nameWithType.vb: IdentityMap(Of TKey).IdentityMap(IKey, IPrincipalKeyValueFactory(Of TKey))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap(Of TKey).IdentityMap(Microsoft.EntityFrameworkCore.Metadata.IKey, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory(Of TKey))
  name.vb: IdentityMap(IKey, IPrincipalKeyValueFactory(Of TKey))
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.PrincipalKeyValueFactory
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.PrincipalKeyValueFactory
  id: PrincipalKeyValueFactory
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1
  langs:
  - csharp
  - vb
  name: PrincipalKeyValueFactory
  nameWithType: IdentityMap<TKey>.PrincipalKeyValueFactory
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap<TKey>.PrincipalKeyValueFactory
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IdentityMap.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: PrincipalKeyValueFactory
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IdentityMap.cs
    startLine: 50
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IPrincipalKeyValueFactory<TKey> PrincipalKeyValueFactory { get; }
    content.vb: Protected Overridable ReadOnly Property PrincipalKeyValueFactory As IPrincipalKeyValueFactory(Of TKey)
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory{{TKey}}
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.PrincipalKeyValueFactory*
  nameWithType.vb: IdentityMap(Of TKey).PrincipalKeyValueFactory
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap(Of TKey).PrincipalKeyValueFactory
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Key
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Key
  id: Key
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1
  langs:
  - csharp
  - vb
  name: Key
  nameWithType: IdentityMap<TKey>.Key
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap<TKey>.Key
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IdentityMap.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Key
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IdentityMap.cs
    startLine: 56
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IKey Key { get; }
    content.vb: Public Overridable ReadOnly Property Key As IKey
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.IKey
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Key*
  implements:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.Key
  nameWithType.vb: IdentityMap(Of TKey).Key
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap(Of TKey).Key
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Contains(Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Contains(Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
  id: Contains(Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1
  langs:
  - csharp
  - vb
  name: Contains(ValueBuffer)
  nameWithType: IdentityMap<TKey>.Contains(ValueBuffer)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap<TKey>.Contains(Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IdentityMap.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Contains
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IdentityMap.cs
    startLine: 62
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual bool Contains(ValueBuffer valueBuffer)
    content.vb: Public Overridable Function Contains(valueBuffer As ValueBuffer) As Boolean
    parameters:
    - id: valueBuffer
      type: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
    return:
      type: System.Boolean
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Contains*
  implements:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.Contains(Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
  nameWithType.vb: IdentityMap(Of TKey).Contains(ValueBuffer)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap(Of TKey).Contains(Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Contains(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Contains(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
  id: Contains(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1
  langs:
  - csharp
  - vb
  name: Contains(IForeignKey, ValueBuffer)
  nameWithType: IdentityMap<TKey>.Contains(IForeignKey, ValueBuffer)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap<TKey>.Contains(Microsoft.EntityFrameworkCore.Metadata.IForeignKey, Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IdentityMap.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Contains
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IdentityMap.cs
    startLine: 72
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual bool Contains(IForeignKey foreignKey, ValueBuffer valueBuffer)
    content.vb: Public Overridable Function Contains(foreignKey As IForeignKey, valueBuffer As ValueBuffer) As Boolean
    parameters:
    - id: foreignKey
      type: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    - id: valueBuffer
      type: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
    return:
      type: System.Boolean
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Contains*
  implements:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.Contains(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
  nameWithType.vb: IdentityMap(Of TKey).Contains(IForeignKey, ValueBuffer)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap(Of TKey).Contains(Microsoft.EntityFrameworkCore.Metadata.IForeignKey, Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.TryGetEntry(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.TryGetEntry(System.Object[])
  id: TryGetEntry(System.Object[])
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1
  langs:
  - csharp
  - vb
  name: TryGetEntry(Object[])
  nameWithType: IdentityMap<TKey>.TryGetEntry(Object[])
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap<TKey>.TryGetEntry(System.Object[])
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IdentityMap.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TryGetEntry
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IdentityMap.cs
    startLine: 83
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual InternalEntityEntry TryGetEntry(object[] keyValues)
    content.vb: Public Overridable Function TryGetEntry(keyValues As Object()) As InternalEntityEntry
    parameters:
    - id: keyValues
      type: System.Object[]
    return:
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.TryGetEntry*
  implements:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.TryGetEntry(System.Object[])
  nameWithType.vb: IdentityMap(Of TKey).TryGetEntry(Object())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap(Of TKey).TryGetEntry(System.Object())
  name.vb: TryGetEntry(Object())
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.TryGetEntry(Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.TryGetEntry(Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Boolean)
  id: TryGetEntry(Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Boolean)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1
  langs:
  - csharp
  - vb
  name: TryGetEntry(ValueBuffer, Boolean)
  nameWithType: IdentityMap<TKey>.TryGetEntry(ValueBuffer, Boolean)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap<TKey>.TryGetEntry(Microsoft.EntityFrameworkCore.Storage.ValueBuffer, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IdentityMap.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TryGetEntry
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IdentityMap.cs
    startLine: 94
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual InternalEntityEntry TryGetEntry(ValueBuffer valueBuffer, bool throwOnNullKey)
    content.vb: Public Overridable Function TryGetEntry(valueBuffer As ValueBuffer, throwOnNullKey As Boolean) As InternalEntityEntry
    parameters:
    - id: valueBuffer
      type: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
    - id: throwOnNullKey
      type: System.Boolean
    return:
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.TryGetEntry*
  implements:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.TryGetEntry(Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Boolean)
  nameWithType.vb: IdentityMap(Of TKey).TryGetEntry(ValueBuffer, Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap(Of TKey).TryGetEntry(Microsoft.EntityFrameworkCore.Storage.ValueBuffer, System.Boolean)
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.TryGetEntry(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.TryGetEntry(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  id: TryGetEntry(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1
  langs:
  - csharp
  - vb
  name: TryGetEntry(IForeignKey, InternalEntityEntry)
  nameWithType: IdentityMap<TKey>.TryGetEntry(IForeignKey, InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap<TKey>.TryGetEntry(Microsoft.EntityFrameworkCore.Metadata.IForeignKey, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IdentityMap.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TryGetEntry
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IdentityMap.cs
    startLine: 126
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual InternalEntityEntry TryGetEntry(IForeignKey foreignKey, InternalEntityEntry dependentEntry)
    content.vb: Public Overridable Function TryGetEntry(foreignKey As IForeignKey, dependentEntry As InternalEntityEntry) As InternalEntityEntry
    parameters:
    - id: foreignKey
      type: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    - id: dependentEntry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    return:
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.TryGetEntry*
  implements:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.TryGetEntry(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  nameWithType.vb: IdentityMap(Of TKey).TryGetEntry(IForeignKey, InternalEntityEntry)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap(Of TKey).TryGetEntry(Microsoft.EntityFrameworkCore.Metadata.IForeignKey, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.TryGetEntryUsingPreStoreGeneratedValues(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.TryGetEntryUsingPreStoreGeneratedValues(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  id: TryGetEntryUsingPreStoreGeneratedValues(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1
  langs:
  - csharp
  - vb
  name: TryGetEntryUsingPreStoreGeneratedValues(IForeignKey, InternalEntityEntry)
  nameWithType: IdentityMap<TKey>.TryGetEntryUsingPreStoreGeneratedValues(IForeignKey, InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap<TKey>.TryGetEntryUsingPreStoreGeneratedValues(Microsoft.EntityFrameworkCore.Metadata.IForeignKey, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IdentityMap.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TryGetEntryUsingPreStoreGeneratedValues
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IdentityMap.cs
    startLine: 140
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual InternalEntityEntry TryGetEntryUsingPreStoreGeneratedValues(IForeignKey foreignKey, InternalEntityEntry dependentEntry)
    content.vb: Public Overridable Function TryGetEntryUsingPreStoreGeneratedValues(foreignKey As IForeignKey, dependentEntry As InternalEntityEntry) As InternalEntityEntry
    parameters:
    - id: foreignKey
      type: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    - id: dependentEntry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    return:
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.TryGetEntryUsingPreStoreGeneratedValues*
  implements:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.TryGetEntryUsingPreStoreGeneratedValues(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  nameWithType.vb: IdentityMap(Of TKey).TryGetEntryUsingPreStoreGeneratedValues(IForeignKey, InternalEntityEntry)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap(Of TKey).TryGetEntryUsingPreStoreGeneratedValues(Microsoft.EntityFrameworkCore.Metadata.IForeignKey, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.TryGetEntryUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.TryGetEntryUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  id: TryGetEntryUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1
  langs:
  - csharp
  - vb
  name: TryGetEntryUsingRelationshipSnapshot(IForeignKey, InternalEntityEntry)
  nameWithType: IdentityMap<TKey>.TryGetEntryUsingRelationshipSnapshot(IForeignKey, InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap<TKey>.TryGetEntryUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.Metadata.IForeignKey, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IdentityMap.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TryGetEntryUsingRelationshipSnapshot
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IdentityMap.cs
    startLine: 154
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual InternalEntityEntry TryGetEntryUsingRelationshipSnapshot(IForeignKey foreignKey, InternalEntityEntry dependentEntry)
    content.vb: Public Overridable Function TryGetEntryUsingRelationshipSnapshot(foreignKey As IForeignKey, dependentEntry As InternalEntityEntry) As InternalEntityEntry
    parameters:
    - id: foreignKey
      type: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    - id: dependentEntry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    return:
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.TryGetEntryUsingRelationshipSnapshot*
  implements:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.TryGetEntryUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  nameWithType.vb: IdentityMap(Of TKey).TryGetEntryUsingRelationshipSnapshot(IForeignKey, InternalEntityEntry)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap(Of TKey).TryGetEntryUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.Metadata.IForeignKey, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.AddOrUpdate(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.AddOrUpdate(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  id: AddOrUpdate(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1
  langs:
  - csharp
  - vb
  name: AddOrUpdate(InternalEntityEntry)
  nameWithType: IdentityMap<TKey>.AddOrUpdate(InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap<TKey>.AddOrUpdate(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IdentityMap.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AddOrUpdate
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IdentityMap.cs
    startLine: 168
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void AddOrUpdate(InternalEntityEntry entry)
    content.vb: Public Overridable Sub AddOrUpdate(entry As InternalEntityEntry)
    parameters:
    - id: entry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.AddOrUpdate*
  implements:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.AddOrUpdate(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  nameWithType.vb: IdentityMap(Of TKey).AddOrUpdate(InternalEntityEntry)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap(Of TKey).AddOrUpdate(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  id: Add(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1
  langs:
  - csharp
  - vb
  name: Add(InternalEntityEntry)
  nameWithType: IdentityMap<TKey>.Add(InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap<TKey>.Add(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IdentityMap.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Add
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IdentityMap.cs
    startLine: 175
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void Add(InternalEntityEntry entry)
    content.vb: Public Overridable Sub Add(entry As InternalEntityEntry)
    parameters:
    - id: entry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add*
  implements:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.Add(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  nameWithType.vb: IdentityMap(Of TKey).Add(InternalEntityEntry)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap(Of TKey).Add(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(`0,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(`0,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  id: Add(`0,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1
  langs:
  - csharp
  - vb
  name: Add(TKey, InternalEntityEntry)
  nameWithType: IdentityMap<TKey>.Add(TKey, InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap<TKey>.Add(TKey, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IdentityMap.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Add
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IdentityMap.cs
    startLine: 182
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual void Add(TKey key, InternalEntityEntry entry)
    content.vb: Protected Overridable Sub Add(key As TKey, entry As InternalEntityEntry)
    parameters:
    - id: key
      type: '{TKey}'
    - id: entry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add*
  nameWithType.vb: IdentityMap(Of TKey).Add(TKey, InternalEntityEntry)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap(Of TKey).Add(TKey, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.GetDependentsMap(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.GetDependentsMap(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  id: GetDependentsMap(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1
  langs:
  - csharp
  - vb
  name: GetDependentsMap(IForeignKey)
  nameWithType: IdentityMap<TKey>.GetDependentsMap(IForeignKey)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap<TKey>.GetDependentsMap(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IdentityMap.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetDependentsMap
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IdentityMap.cs
    startLine: 220
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IDependentsMap GetDependentsMap(IForeignKey foreignKey)
    content.vb: Public Overridable Function GetDependentsMap(foreignKey As IForeignKey) As IDependentsMap
    parameters:
    - id: foreignKey
      type: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    return:
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.GetDependentsMap*
  implements:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.GetDependentsMap(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  nameWithType.vb: IdentityMap(Of TKey).GetDependentsMap(IForeignKey)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap(Of TKey).GetDependentsMap(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.FindDependentsMap(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.FindDependentsMap(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  id: FindDependentsMap(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1
  langs:
  - csharp
  - vb
  name: FindDependentsMap(IForeignKey)
  nameWithType: IdentityMap<TKey>.FindDependentsMap(IForeignKey)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap<TKey>.FindDependentsMap(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IdentityMap.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: FindDependentsMap
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IdentityMap.cs
    startLine: 247
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IDependentsMap FindDependentsMap(IForeignKey foreignKey)
    content.vb: Public Overridable Function FindDependentsMap(foreignKey As IForeignKey) As IDependentsMap
    parameters:
    - id: foreignKey
      type: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    return:
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.FindDependentsMap*
  implements:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.FindDependentsMap(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  nameWithType.vb: IdentityMap(Of TKey).FindDependentsMap(IForeignKey)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap(Of TKey).FindDependentsMap(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Remove(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Remove(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  id: Remove(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1
  langs:
  - csharp
  - vb
  name: Remove(InternalEntityEntry)
  nameWithType: IdentityMap<TKey>.Remove(InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap<TKey>.Remove(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IdentityMap.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Remove
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IdentityMap.cs
    startLine: 260
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void Remove(InternalEntityEntry entry)
    content.vb: Public Overridable Sub Remove(entry As InternalEntityEntry)
    parameters:
    - id: entry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Remove*
  implements:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.Remove(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  nameWithType.vb: IdentityMap(Of TKey).Remove(InternalEntityEntry)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap(Of TKey).Remove(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.RemoveUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.RemoveUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  id: RemoveUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1
  langs:
  - csharp
  - vb
  name: RemoveUsingRelationshipSnapshot(InternalEntityEntry)
  nameWithType: IdentityMap<TKey>.RemoveUsingRelationshipSnapshot(InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap<TKey>.RemoveUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IdentityMap.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: RemoveUsingRelationshipSnapshot
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IdentityMap.cs
    startLine: 267
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void RemoveUsingRelationshipSnapshot(InternalEntityEntry entry)
    content.vb: Public Overridable Sub RemoveUsingRelationshipSnapshot(entry As InternalEntityEntry)
    parameters:
    - id: entry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.RemoveUsingRelationshipSnapshot*
  implements:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.RemoveUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  nameWithType.vb: IdentityMap(Of TKey).RemoveUsingRelationshipSnapshot(InternalEntityEntry)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap(Of TKey).RemoveUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Remove(`0,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Remove(`0,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  id: Remove(`0,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1
  langs:
  - csharp
  - vb
  name: Remove(TKey, InternalEntityEntry)
  nameWithType: IdentityMap<TKey>.Remove(TKey, InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap<TKey>.Remove(TKey, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IdentityMap.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Remove
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IdentityMap.cs
    startLine: 274
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual void Remove(TKey key, InternalEntityEntry entry)
    content.vb: Protected Overridable Sub Remove(key As TKey, entry As InternalEntityEntry)
    parameters:
    - id: key
      type: '{TKey}'
    - id: entry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Remove*
  nameWithType.vb: IdentityMap(Of TKey).Remove(TKey, InternalEntityEntry)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap(Of TKey).Remove(TKey, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
references:
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  commentId: N:Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  nameWithType: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: IIdentityMap
  nameWithType: IIdentityMap
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.#ctor
  isExternal: false
  name: IdentityMap
  nameWithType: IdentityMap<TKey>.IdentityMap
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap<TKey>.IdentityMap
  nameWithType.vb: IdentityMap(Of TKey).IdentityMap
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap(Of TKey).IdentityMap
- uid: Microsoft.EntityFrameworkCore.Metadata.IKey
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IKey
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IKey
  nameWithType: IKey
  fullName: Microsoft.EntityFrameworkCore.Metadata.IKey
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory{{TKey}}
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory{`0}
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  definition: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory`1
  name: IPrincipalKeyValueFactory<TKey>
  nameWithType: IPrincipalKeyValueFactory<TKey>
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory<TKey>
  nameWithType.vb: IPrincipalKeyValueFactory(Of TKey)
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory(Of TKey)
  name.vb: IPrincipalKeyValueFactory(Of TKey)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory`1
    name: IPrincipalKeyValueFactory
    nameWithType: IPrincipalKeyValueFactory
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory`1
    name: IPrincipalKeyValueFactory
    nameWithType: IPrincipalKeyValueFactory
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory`1
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory`1
  isExternal: false
  name: IPrincipalKeyValueFactory<TKey>
  nameWithType: IPrincipalKeyValueFactory<TKey>
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory<TKey>
  nameWithType.vb: IPrincipalKeyValueFactory(Of TKey)
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory(Of TKey)
  name.vb: IPrincipalKeyValueFactory(Of TKey)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory`1
    name: IPrincipalKeyValueFactory
    nameWithType: IPrincipalKeyValueFactory
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory`1
    name: IPrincipalKeyValueFactory
    nameWithType: IPrincipalKeyValueFactory
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.PrincipalKeyValueFactory*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.PrincipalKeyValueFactory
  isExternal: false
  name: PrincipalKeyValueFactory
  nameWithType: IdentityMap<TKey>.PrincipalKeyValueFactory
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap<TKey>.PrincipalKeyValueFactory
  nameWithType.vb: IdentityMap(Of TKey).PrincipalKeyValueFactory
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap(Of TKey).PrincipalKeyValueFactory
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Key*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Key
  isExternal: false
  name: Key
  nameWithType: IdentityMap<TKey>.Key
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap<TKey>.Key
  nameWithType.vb: IdentityMap(Of TKey).Key
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap(Of TKey).Key
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.Key
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.Key
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap
  isExternal: false
  name: Key
  nameWithType: IIdentityMap.Key
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.Key
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Contains*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Contains
  isExternal: false
  name: Contains
  nameWithType: IdentityMap<TKey>.Contains
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap<TKey>.Contains
  nameWithType.vb: IdentityMap(Of TKey).Contains
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap(Of TKey).Contains
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.Contains(Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.Contains(Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap
  isExternal: false
  name: Contains(ValueBuffer)
  nameWithType: IIdentityMap.Contains(ValueBuffer)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.Contains(Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.Contains(Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
    name: Contains
    nameWithType: IIdentityMap.Contains
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.Contains
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
    name: ValueBuffer
    nameWithType: ValueBuffer
    fullName: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.Contains(Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
    name: Contains
    nameWithType: IIdentityMap.Contains
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.Contains
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
    name: ValueBuffer
    nameWithType: ValueBuffer
    fullName: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
  commentId: T:Microsoft.EntityFrameworkCore.Storage.ValueBuffer
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: ValueBuffer
  nameWithType: ValueBuffer
  fullName: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.Contains(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.Contains(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap
  isExternal: false
  name: Contains(IForeignKey, ValueBuffer)
  nameWithType: IIdentityMap.Contains(IForeignKey, ValueBuffer)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.Contains(Microsoft.EntityFrameworkCore.Metadata.IForeignKey, Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.Contains(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
    name: Contains
    nameWithType: IIdentityMap.Contains
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.Contains
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    name: IForeignKey
    nameWithType: IForeignKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
    name: ValueBuffer
    nameWithType: ValueBuffer
    fullName: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.Contains(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
    name: Contains
    nameWithType: IIdentityMap.Contains
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.Contains
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    name: IForeignKey
    nameWithType: IForeignKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
    name: ValueBuffer
    nameWithType: ValueBuffer
    fullName: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IForeignKey
  nameWithType: IForeignKey
  fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.TryGetEntry*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.TryGetEntry
  isExternal: false
  name: TryGetEntry
  nameWithType: IdentityMap<TKey>.TryGetEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap<TKey>.TryGetEntry
  nameWithType.vb: IdentityMap(Of TKey).TryGetEntry
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap(Of TKey).TryGetEntry
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.TryGetEntry(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.TryGetEntry(System.Object[])
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap
  isExternal: true
  name: TryGetEntry(Object[])
  nameWithType: IIdentityMap.TryGetEntry(Object[])
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.TryGetEntry(System.Object[])
  nameWithType.vb: IIdentityMap.TryGetEntry(Object())
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.TryGetEntry(System.Object())
  name.vb: TryGetEntry(Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.TryGetEntry(System.Object[])
    name: TryGetEntry
    nameWithType: IIdentityMap.TryGetEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.TryGetEntry
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.TryGetEntry(System.Object[])
    name: TryGetEntry
    nameWithType: IIdentityMap.TryGetEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.TryGetEntry
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object[]
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: InternalEntityEntry
  nameWithType: InternalEntityEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.TryGetEntry(Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.TryGetEntry(Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Boolean)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap
  isExternal: true
  name: TryGetEntry(ValueBuffer, Boolean)
  nameWithType: IIdentityMap.TryGetEntry(ValueBuffer, Boolean)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.TryGetEntry(Microsoft.EntityFrameworkCore.Storage.ValueBuffer, System.Boolean)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.TryGetEntry(Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Boolean)
    name: TryGetEntry
    nameWithType: IIdentityMap.TryGetEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.TryGetEntry
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
    name: ValueBuffer
    nameWithType: ValueBuffer
    fullName: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.TryGetEntry(Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Boolean)
    name: TryGetEntry
    nameWithType: IIdentityMap.TryGetEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.TryGetEntry
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
    name: ValueBuffer
    nameWithType: ValueBuffer
    fullName: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.TryGetEntry(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.TryGetEntry(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap
  isExternal: false
  name: TryGetEntry(IForeignKey, InternalEntityEntry)
  nameWithType: IIdentityMap.TryGetEntry(IForeignKey, InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.TryGetEntry(Microsoft.EntityFrameworkCore.Metadata.IForeignKey, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.TryGetEntry(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
    name: TryGetEntry
    nameWithType: IIdentityMap.TryGetEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.TryGetEntry
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    name: IForeignKey
    nameWithType: IForeignKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.TryGetEntry(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
    name: TryGetEntry
    nameWithType: IIdentityMap.TryGetEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.TryGetEntry
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    name: IForeignKey
    nameWithType: IForeignKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.TryGetEntryUsingPreStoreGeneratedValues*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.TryGetEntryUsingPreStoreGeneratedValues
  isExternal: false
  name: TryGetEntryUsingPreStoreGeneratedValues
  nameWithType: IdentityMap<TKey>.TryGetEntryUsingPreStoreGeneratedValues
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap<TKey>.TryGetEntryUsingPreStoreGeneratedValues
  nameWithType.vb: IdentityMap(Of TKey).TryGetEntryUsingPreStoreGeneratedValues
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap(Of TKey).TryGetEntryUsingPreStoreGeneratedValues
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.TryGetEntryUsingPreStoreGeneratedValues(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.TryGetEntryUsingPreStoreGeneratedValues(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap
  isExternal: false
  name: TryGetEntryUsingPreStoreGeneratedValues(IForeignKey, InternalEntityEntry)
  nameWithType: IIdentityMap.TryGetEntryUsingPreStoreGeneratedValues(IForeignKey, InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.TryGetEntryUsingPreStoreGeneratedValues(Microsoft.EntityFrameworkCore.Metadata.IForeignKey, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.TryGetEntryUsingPreStoreGeneratedValues(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
    name: TryGetEntryUsingPreStoreGeneratedValues
    nameWithType: IIdentityMap.TryGetEntryUsingPreStoreGeneratedValues
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.TryGetEntryUsingPreStoreGeneratedValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    name: IForeignKey
    nameWithType: IForeignKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.TryGetEntryUsingPreStoreGeneratedValues(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
    name: TryGetEntryUsingPreStoreGeneratedValues
    nameWithType: IIdentityMap.TryGetEntryUsingPreStoreGeneratedValues
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.TryGetEntryUsingPreStoreGeneratedValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    name: IForeignKey
    nameWithType: IForeignKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.TryGetEntryUsingRelationshipSnapshot*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.TryGetEntryUsingRelationshipSnapshot
  isExternal: false
  name: TryGetEntryUsingRelationshipSnapshot
  nameWithType: IdentityMap<TKey>.TryGetEntryUsingRelationshipSnapshot
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap<TKey>.TryGetEntryUsingRelationshipSnapshot
  nameWithType.vb: IdentityMap(Of TKey).TryGetEntryUsingRelationshipSnapshot
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap(Of TKey).TryGetEntryUsingRelationshipSnapshot
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.TryGetEntryUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.TryGetEntryUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap
  isExternal: false
  name: TryGetEntryUsingRelationshipSnapshot(IForeignKey, InternalEntityEntry)
  nameWithType: IIdentityMap.TryGetEntryUsingRelationshipSnapshot(IForeignKey, InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.TryGetEntryUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.Metadata.IForeignKey, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.TryGetEntryUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
    name: TryGetEntryUsingRelationshipSnapshot
    nameWithType: IIdentityMap.TryGetEntryUsingRelationshipSnapshot
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.TryGetEntryUsingRelationshipSnapshot
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    name: IForeignKey
    nameWithType: IForeignKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.TryGetEntryUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
    name: TryGetEntryUsingRelationshipSnapshot
    nameWithType: IIdentityMap.TryGetEntryUsingRelationshipSnapshot
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.TryGetEntryUsingRelationshipSnapshot
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    name: IForeignKey
    nameWithType: IForeignKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.AddOrUpdate*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.AddOrUpdate
  isExternal: false
  name: AddOrUpdate
  nameWithType: IdentityMap<TKey>.AddOrUpdate
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap<TKey>.AddOrUpdate
  nameWithType.vb: IdentityMap(Of TKey).AddOrUpdate
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap(Of TKey).AddOrUpdate
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.AddOrUpdate(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.AddOrUpdate(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap
  isExternal: false
  name: AddOrUpdate(InternalEntityEntry)
  nameWithType: IIdentityMap.AddOrUpdate(InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.AddOrUpdate(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.AddOrUpdate(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
    name: AddOrUpdate
    nameWithType: IIdentityMap.AddOrUpdate
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.AddOrUpdate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.AddOrUpdate(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
    name: AddOrUpdate
    nameWithType: IIdentityMap.AddOrUpdate
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.AddOrUpdate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add
  isExternal: false
  name: Add
  nameWithType: IdentityMap<TKey>.Add
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap<TKey>.Add
  nameWithType.vb: IdentityMap(Of TKey).Add
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap(Of TKey).Add
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.Add(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.Add(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap
  isExternal: false
  name: Add(InternalEntityEntry)
  nameWithType: IIdentityMap.Add(InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.Add(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.Add(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
    name: Add
    nameWithType: IIdentityMap.Add
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.Add(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
    name: Add
    nameWithType: IIdentityMap.Add
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TKey}'
  commentId: '!:TKey'
  definition: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: TKey
  isExternal: false
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.GetDependentsMap*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.GetDependentsMap
  isExternal: false
  name: GetDependentsMap
  nameWithType: IdentityMap<TKey>.GetDependentsMap
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap<TKey>.GetDependentsMap
  nameWithType.vb: IdentityMap(Of TKey).GetDependentsMap
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap(Of TKey).GetDependentsMap
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.GetDependentsMap(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.GetDependentsMap(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap
  isExternal: false
  name: GetDependentsMap(IForeignKey)
  nameWithType: IIdentityMap.GetDependentsMap(IForeignKey)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.GetDependentsMap(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.GetDependentsMap(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
    name: GetDependentsMap
    nameWithType: IIdentityMap.GetDependentsMap
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.GetDependentsMap
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    name: IForeignKey
    nameWithType: IForeignKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.GetDependentsMap(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
    name: GetDependentsMap
    nameWithType: IIdentityMap.GetDependentsMap
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.GetDependentsMap
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    name: IForeignKey
    nameWithType: IForeignKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: IDependentsMap
  nameWithType: IDependentsMap
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.FindDependentsMap*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.FindDependentsMap
  isExternal: false
  name: FindDependentsMap
  nameWithType: IdentityMap<TKey>.FindDependentsMap
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap<TKey>.FindDependentsMap
  nameWithType.vb: IdentityMap(Of TKey).FindDependentsMap
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap(Of TKey).FindDependentsMap
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.FindDependentsMap(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.FindDependentsMap(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap
  isExternal: false
  name: FindDependentsMap(IForeignKey)
  nameWithType: IIdentityMap.FindDependentsMap(IForeignKey)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.FindDependentsMap(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.FindDependentsMap(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
    name: FindDependentsMap
    nameWithType: IIdentityMap.FindDependentsMap
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.FindDependentsMap
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    name: IForeignKey
    nameWithType: IForeignKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.FindDependentsMap(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
    name: FindDependentsMap
    nameWithType: IIdentityMap.FindDependentsMap
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.FindDependentsMap
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    name: IForeignKey
    nameWithType: IForeignKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Remove*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Remove
  isExternal: false
  name: Remove
  nameWithType: IdentityMap<TKey>.Remove
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap<TKey>.Remove
  nameWithType.vb: IdentityMap(Of TKey).Remove
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap(Of TKey).Remove
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.Remove(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.Remove(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap
  isExternal: false
  name: Remove(InternalEntityEntry)
  nameWithType: IIdentityMap.Remove(InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.Remove(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.Remove(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
    name: Remove
    nameWithType: IIdentityMap.Remove
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.Remove(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
    name: Remove
    nameWithType: IIdentityMap.Remove
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.RemoveUsingRelationshipSnapshot*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.RemoveUsingRelationshipSnapshot
  isExternal: false
  name: RemoveUsingRelationshipSnapshot
  nameWithType: IdentityMap<TKey>.RemoveUsingRelationshipSnapshot
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap<TKey>.RemoveUsingRelationshipSnapshot
  nameWithType.vb: IdentityMap(Of TKey).RemoveUsingRelationshipSnapshot
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap(Of TKey).RemoveUsingRelationshipSnapshot
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.RemoveUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.RemoveUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap
  isExternal: false
  name: RemoveUsingRelationshipSnapshot(InternalEntityEntry)
  nameWithType: IIdentityMap.RemoveUsingRelationshipSnapshot(InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.RemoveUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.RemoveUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
    name: RemoveUsingRelationshipSnapshot
    nameWithType: IIdentityMap.RemoveUsingRelationshipSnapshot
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.RemoveUsingRelationshipSnapshot
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.RemoveUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
    name: RemoveUsingRelationshipSnapshot
    nameWithType: IIdentityMap.RemoveUsingRelationshipSnapshot
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.RemoveUsingRelationshipSnapshot
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: )
    nameWithType: )
    fullName: )
