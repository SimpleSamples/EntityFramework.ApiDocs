### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode
  id: EntityEntryGraphNode
  parent: Microsoft.EntityFrameworkCore.ChangeTracking
  children:
  - Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation)
  - Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.CreateNode(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation)
  - Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.Entry
  - Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.InboundNavigation
  - Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#ChangeTracking#Internal#InternalEntityEntry}#Instance
  - Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.NodeState
  langs:
  - csharp
  - vb
  name: EntityEntryGraphNode
  nameWithType: EntityEntryGraphNode
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/EntityEntryGraphNode.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: EntityEntryGraphNode
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/EntityEntryGraphNode.cs
    startLine: 15
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\nProvides access to change tracking information and operations for a node in a\ngraph of entities that is being traversed.\n"
  example: []
  syntax:
    content: 'public class EntityEntryGraphNode : IInfrastructure<InternalEntityEntry>'
    content.vb: >-
      Public Class EntityEntryGraphNode
          Implements IInfrastructure(Of InternalEntityEntry)
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry}.Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation)
  id: '#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation)'
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode
  langs:
  - csharp
  - vb
  name: EntityEntryGraphNode(InternalEntityEntry, INavigation)
  nameWithType: EntityEntryGraphNode.EntityEntryGraphNode(InternalEntityEntry, INavigation)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.EntityEntryGraphNode(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, Microsoft.EntityFrameworkCore.Metadata.INavigation)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/EntityEntryGraphNode.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/EntityEntryGraphNode.cs
    startLine: 23
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public EntityEntryGraphNode(InternalEntityEntry internalEntityEntry, INavigation inboundNavigation)
    content.vb: Public Sub New(internalEntityEntry As InternalEntityEntry, inboundNavigation As INavigation)
    parameters:
    - id: internalEntityEntry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    - id: inboundNavigation
      type: Microsoft.EntityFrameworkCore.Metadata.INavigation
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.InboundNavigation
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.InboundNavigation
  id: InboundNavigation
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode
  langs:
  - csharp
  - vb
  name: InboundNavigation
  nameWithType: EntityEntryGraphNode.InboundNavigation
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.InboundNavigation
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/EntityEntryGraphNode.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: InboundNavigation
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/EntityEntryGraphNode.cs
    startLine: 36
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\nGets the navigation property that is being traversed to reach this node in the graph.\n"
  example: []
  syntax:
    content: public virtual INavigation InboundNavigation { get; }
    content.vb: Public Overridable ReadOnly Property InboundNavigation As INavigation
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.INavigation
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.InboundNavigation*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.NodeState
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.NodeState
  id: NodeState
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode
  langs:
  - csharp
  - vb
  name: NodeState
  nameWithType: EntityEntryGraphNode.NodeState
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.NodeState
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/EntityEntryGraphNode.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: NodeState
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/EntityEntryGraphNode.cs
    startLine: 41
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\nGets or sets state that will be available to all nodes that are visited after this node.\n"
  example: []
  syntax:
    content: public virtual object NodeState { get; set; }
    content.vb: Public Overridable Property NodeState As Object
    parameters: []
    return:
      type: System.Object
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.NodeState*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.Entry
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.Entry
  id: Entry
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode
  langs:
  - csharp
  - vb
  name: Entry
  nameWithType: EntityEntryGraphNode.Entry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.Entry
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/EntityEntryGraphNode.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Entry
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/EntityEntryGraphNode.cs
    startLine: 46
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\nGets the entry tracking information about this entity.\n"
  example: []
  syntax:
    content: public virtual EntityEntry Entry { get; }
    content.vb: Public Overridable ReadOnly Property Entry As EntityEntry
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.Entry*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#ChangeTracking#Internal#InternalEntityEntry}#Instance
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#ChangeTracking#Internal#InternalEntityEntry}#Instance
  id: Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#ChangeTracking#Internal#InternalEntityEntry}#Instance
  isEii: true
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode
  langs:
  - csharp
  - vb
  name: IInfrastructure<InternalEntityEntry>.Instance
  nameWithType: EntityEntryGraphNode.IInfrastructure<InternalEntityEntry>.Instance
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry>.Instance
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/EntityEntryGraphNode.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry>.Instance
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/EntityEntryGraphNode.cs
    startLine: 57
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\n<p>\n    Gets the internal entry that is tracking information about this entity.\n</p>\n<p>\n    This property is intended for use by extension methods. It is not intended to be used in\n    application code.\n</p>\n"
  example: []
  syntax:
    content: InternalEntityEntry IInfrastructure<InternalEntityEntry>.Instance { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry>.Instance As InternalEntityEntry Implements IInfrastructure(Of InternalEntityEntry).Instance
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#ChangeTracking#Internal#InternalEntityEntry}#Instance*
  implements:
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry}.Instance
  nameWithType.vb: EntityEntryGraphNode.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry>.Instance
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry>.Instance
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.CreateNode(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.CreateNode(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation)
  id: CreateNode(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode
  langs:
  - csharp
  - vb
  name: CreateNode(EntityEntryGraphNode, InternalEntityEntry, INavigation)
  nameWithType: EntityEntryGraphNode.CreateNode(EntityEntryGraphNode, InternalEntityEntry, INavigation)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.CreateNode(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, Microsoft.EntityFrameworkCore.Metadata.INavigation)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/EntityEntryGraphNode.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateNode
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/EntityEntryGraphNode.cs
    startLine: 68
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\nCreates a new node for the entity that is being traversed next in the graph.\n"
  example: []
  syntax:
    content: public virtual EntityEntryGraphNode CreateNode(EntityEntryGraphNode currentNode, InternalEntityEntry internalEntityEntry, INavigation reachedVia)
    content.vb: Public Overridable Function CreateNode(currentNode As EntityEntryGraphNode, internalEntityEntry As InternalEntityEntry, reachedVia As INavigation) As EntityEntryGraphNode
    parameters:
    - id: currentNode
      type: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode
      description: 'The node that the entity is being traversed from. '
    - id: internalEntityEntry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
      description: "\nThe internal entry tracking information about the entity being traversed to.\n"
    - id: reachedVia
      type: Microsoft.EntityFrameworkCore.Metadata.INavigation
      description: 'The navigation property that is being traversed to reach the new node. '
    return:
      type: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode
      description: 'The newly created node. '
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.CreateNode*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.ChangeTracking
  commentId: N:Microsoft.EntityFrameworkCore.ChangeTracking
  isExternal: false
  name: Microsoft.EntityFrameworkCore.ChangeTracking
  nameWithType: Microsoft.EntityFrameworkCore.ChangeTracking
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry}
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry}
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  definition: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  name: IInfrastructure<InternalEntityEntry>
  nameWithType: IInfrastructure<InternalEntityEntry>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry>
  nameWithType.vb: IInfrastructure(Of InternalEntityEntry)
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  name.vb: IInfrastructure(Of InternalEntityEntry)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry}.Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
  parent: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions
  definition: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
  name: GetInfrastructure<InternalEntityEntry>()
  nameWithType: AccessorExtensions.GetInfrastructure<InternalEntityEntry>()
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry>()
  nameWithType.vb: AccessorExtensions.GetInfrastructure(Of InternalEntityEntry)()
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure(Of Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)()
  name.vb: GetInfrastructure(Of InternalEntityEntry)()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1
    name: GetInfrastructure<InternalEntityEntry>
    nameWithType: AccessorExtensions.GetInfrastructure<InternalEntityEntry>
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1
    name: GetInfrastructure(Of InternalEntityEntry)
    nameWithType: AccessorExtensions.GetInfrastructure(Of InternalEntityEntry)
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure(Of Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  isExternal: false
  name: IInfrastructure<T>
  nameWithType: IInfrastructure<T>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<T>
  nameWithType.vb: IInfrastructure(Of T)
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of T)
  name.vb: IInfrastructure(Of T)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure
  commentId: N:Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Infrastructure
  nameWithType: Microsoft.EntityFrameworkCore.Infrastructure
  fullName: Microsoft.EntityFrameworkCore.Infrastructure
- uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
  isExternal: false
  name: GetInfrastructure<T>(IInfrastructure<T>)
  nameWithType: AccessorExtensions.GetInfrastructure<T>(IInfrastructure<T>)
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure<T>(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<T>)
  nameWithType.vb: AccessorExtensions.GetInfrastructure(Of T)(IInfrastructure(Of T))
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure(Of T)(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of T))
  name.vb: GetInfrastructure(Of T)(IInfrastructure(Of T))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
    name: GetInfrastructure<T>
    nameWithType: AccessorExtensions.GetInfrastructure<T>
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
    name: GetInfrastructure(Of T)
    nameWithType: AccessorExtensions.GetInfrastructure(Of T)
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: AccessorExtensions
  nameWithType: AccessorExtensions
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.#ctor
  isExternal: false
  name: EntityEntryGraphNode
  nameWithType: EntityEntryGraphNode.EntityEntryGraphNode
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.EntityEntryGraphNode
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: InternalEntityEntry
  nameWithType: InternalEntityEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
- uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.INavigation
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: INavigation
  nameWithType: INavigation
  fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  commentId: N:Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  nameWithType: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.InboundNavigation*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.InboundNavigation
  isExternal: false
  name: InboundNavigation
  nameWithType: EntityEntryGraphNode.InboundNavigation
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.InboundNavigation
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.NodeState*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.NodeState
  isExternal: false
  name: NodeState
  nameWithType: EntityEntryGraphNode.NodeState
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.NodeState
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.Entry*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.Entry
  isExternal: false
  name: Entry
  nameWithType: EntityEntryGraphNode.Entry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.Entry
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  parent: Microsoft.EntityFrameworkCore.ChangeTracking
  isExternal: false
  name: EntityEntry
  nameWithType: EntityEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#ChangeTracking#Internal#InternalEntityEntry}#Instance*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#ChangeTracking#Internal#InternalEntityEntry}#Instance
  isExternal: false
  name: IInfrastructure<InternalEntityEntry>.Instance
  nameWithType: EntityEntryGraphNode.IInfrastructure<InternalEntityEntry>.Instance
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry>.Instance
  nameWithType.vb: EntityEntryGraphNode.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry>.Instance
  name.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry>.Instance
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry}.Instance
  commentId: P:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry}.Instance
  parent: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry}
  definition: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1.Instance
  name: Instance
  nameWithType: IInfrastructure<InternalEntityEntry>.Instance
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry>.Instance
  nameWithType.vb: IInfrastructure(Of InternalEntityEntry).Instance
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry).Instance
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1.Instance
  commentId: P:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1.Instance
  isExternal: false
  name: Instance
  nameWithType: IInfrastructure<T>.Instance
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<T>.Instance
  nameWithType.vb: IInfrastructure(Of T).Instance
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of T).Instance
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.CreateNode*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.CreateNode
  isExternal: false
  name: CreateNode
  nameWithType: EntityEntryGraphNode.CreateNode
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.CreateNode
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode
  parent: Microsoft.EntityFrameworkCore.ChangeTracking
  isExternal: false
  name: EntityEntryGraphNode
  nameWithType: EntityEntryGraphNode
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode
