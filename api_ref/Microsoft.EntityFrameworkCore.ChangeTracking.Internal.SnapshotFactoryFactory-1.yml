### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory`1
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory`1
  id: SnapshotFactoryFactory`1
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  children:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory`1.Create(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  langs:
  - csharp
  - vb
  name: SnapshotFactoryFactory<TInput>
  nameWithType: SnapshotFactoryFactory<TInput>
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory<TInput>
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/SnapshotFactoryFactory`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SnapshotFactoryFactory
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/SnapshotFactoryFactory`.cs
    startLine: 14
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public abstract class SnapshotFactoryFactory<TInput> : SnapshotFactoryFactory'
    content.vb: >-
      Public MustInherit Class SnapshotFactoryFactory(Of TInput)
          Inherits SnapshotFactoryFactory
    typeParameters:
    - id: TInput
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateEmpty(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateConstructorExpression(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Linq.Expressions.ParameterExpression)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateReadShadowValueExpression(System.Linq.Expressions.ParameterExpression,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.GetPropertyIndex(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.GetPropertyCount(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.UseEntityVariable
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: SnapshotFactoryFactory(Of TInput)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory(Of TInput)
  name.vb: SnapshotFactoryFactory(Of TInput)
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory`1.Create(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory`1.Create(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  id: Create(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory`1
  langs:
  - csharp
  - vb
  name: Create(IEntityType)
  nameWithType: SnapshotFactoryFactory<TInput>.Create(IEntityType)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory<TInput>.Create(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/SnapshotFactoryFactory`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Create
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/SnapshotFactoryFactory`.cs
    startLine: 20
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual Func<TInput, ISnapshot> Create(IEntityType entityType)
    content.vb: Public Overridable Function Create(entityType As IEntityType) As Func(Of TInput, ISnapshot)
    parameters:
    - id: entityType
      type: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    return:
      type: System.Func{{TInput},Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot}
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory`1.Create*
  nameWithType.vb: SnapshotFactoryFactory(Of TInput).Create(IEntityType)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory(Of TInput).Create(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
references:
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  commentId: N:Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  nameWithType: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: SnapshotFactoryFactory
  nameWithType: SnapshotFactoryFactory
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateEmpty(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateEmpty(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory
  isExternal: false
  name: CreateEmpty(IEntityType)
  nameWithType: SnapshotFactoryFactory.CreateEmpty(IEntityType)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateEmpty(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateEmpty(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
    name: CreateEmpty
    nameWithType: SnapshotFactoryFactory.CreateEmpty
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    name: IEntityType
    nameWithType: IEntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateEmpty(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
    name: CreateEmpty
    nameWithType: SnapshotFactoryFactory.CreateEmpty
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    name: IEntityType
    nameWithType: IEntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateConstructorExpression(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Linq.Expressions.ParameterExpression)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateConstructorExpression(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Linq.Expressions.ParameterExpression)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory
  isExternal: true
  name: CreateConstructorExpression(IEntityType, ParameterExpression)
  nameWithType: SnapshotFactoryFactory.CreateConstructorExpression(IEntityType, ParameterExpression)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateConstructorExpression(Microsoft.EntityFrameworkCore.Metadata.IEntityType, System.Linq.Expressions.ParameterExpression)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateConstructorExpression(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Linq.Expressions.ParameterExpression)
    name: CreateConstructorExpression
    nameWithType: SnapshotFactoryFactory.CreateConstructorExpression
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateConstructorExpression
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    name: IEntityType
    nameWithType: IEntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    nameWithType: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateConstructorExpression(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Linq.Expressions.ParameterExpression)
    name: CreateConstructorExpression
    nameWithType: SnapshotFactoryFactory.CreateConstructorExpression
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateConstructorExpression
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    name: IEntityType
    nameWithType: IEntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    nameWithType: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateReadShadowValueExpression(System.Linq.Expressions.ParameterExpression,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateReadShadowValueExpression(System.Linq.Expressions.ParameterExpression,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory
  isExternal: true
  name: CreateReadShadowValueExpression(ParameterExpression, IPropertyBase)
  nameWithType: SnapshotFactoryFactory.CreateReadShadowValueExpression(ParameterExpression, IPropertyBase)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateReadShadowValueExpression(System.Linq.Expressions.ParameterExpression, Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateReadShadowValueExpression(System.Linq.Expressions.ParameterExpression,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
    name: CreateReadShadowValueExpression
    nameWithType: SnapshotFactoryFactory.CreateReadShadowValueExpression
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateReadShadowValueExpression
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    nameWithType: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
    name: IPropertyBase
    nameWithType: IPropertyBase
    fullName: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateReadShadowValueExpression(System.Linq.Expressions.ParameterExpression,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
    name: CreateReadShadowValueExpression
    nameWithType: SnapshotFactoryFactory.CreateReadShadowValueExpression
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateReadShadowValueExpression
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    nameWithType: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
    name: IPropertyBase
    nameWithType: IPropertyBase
    fullName: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.GetPropertyIndex(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.GetPropertyIndex(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory
  isExternal: false
  name: GetPropertyIndex(IPropertyBase)
  nameWithType: SnapshotFactoryFactory.GetPropertyIndex(IPropertyBase)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.GetPropertyIndex(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.GetPropertyIndex(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
    name: GetPropertyIndex
    nameWithType: SnapshotFactoryFactory.GetPropertyIndex
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.GetPropertyIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
    name: IPropertyBase
    nameWithType: IPropertyBase
    fullName: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.GetPropertyIndex(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
    name: GetPropertyIndex
    nameWithType: SnapshotFactoryFactory.GetPropertyIndex
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.GetPropertyIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
    name: IPropertyBase
    nameWithType: IPropertyBase
    fullName: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.GetPropertyCount(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.GetPropertyCount(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory
  isExternal: false
  name: GetPropertyCount(IEntityType)
  nameWithType: SnapshotFactoryFactory.GetPropertyCount(IEntityType)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.GetPropertyCount(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.GetPropertyCount(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
    name: GetPropertyCount
    nameWithType: SnapshotFactoryFactory.GetPropertyCount
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.GetPropertyCount
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    name: IEntityType
    nameWithType: IEntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.GetPropertyCount(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
    name: GetPropertyCount
    nameWithType: SnapshotFactoryFactory.GetPropertyCount
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.GetPropertyCount
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    name: IEntityType
    nameWithType: IEntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.UseEntityVariable
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.UseEntityVariable
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory
  isExternal: false
  name: UseEntityVariable
  nameWithType: SnapshotFactoryFactory.UseEntityVariable
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.UseEntityVariable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory`1.Create*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory`1.Create
  isExternal: false
  name: Create
  nameWithType: SnapshotFactoryFactory<TInput>.Create
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory<TInput>.Create
  nameWithType.vb: SnapshotFactoryFactory(Of TInput).Create
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory(Of TInput).Create
- uid: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IEntityType
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IEntityType
  nameWithType: IEntityType
  fullName: Microsoft.EntityFrameworkCore.Metadata.IEntityType
- uid: System.Func{{TInput},Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot}
  commentId: T:System.Func{`0,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot}
  parent: System
  definition: System.Func`2
  name: Func<TInput, ISnapshot>
  nameWithType: Func<TInput, ISnapshot>
  fullName: System.Func<TInput, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot>
  nameWithType.vb: Func(Of TInput, ISnapshot)
  fullname.vb: System.Func(Of TInput, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot)
  name.vb: Func(Of TInput, ISnapshot)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TInput
    nameWithType: TInput
    fullName: TInput
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot
    name: ISnapshot
    nameWithType: ISnapshot
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TInput
    nameWithType: TInput
    fullName: TInput
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot
    name: ISnapshot
    nameWithType: ISnapshot
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
