### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker
  id: ChangeTracker
  parent: Microsoft.EntityFrameworkCore.ChangeTracking
  children:
  - Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  - Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.AcceptAllChanges
  - Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.AutoDetectChangesEnabled
  - Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.Context
  - Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges
  - Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.Entries
  - Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.Entries``1
  - Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.HasChanges
  - Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#ChangeTracking#Internal#IStateManager}#Instance
  - Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.QueryTrackingBehavior
  - Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.TrackGraph(System.Object,System.Action{Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode})
  langs:
  - csharp
  - vb
  name: ChangeTracker
  nameWithType: ChangeTracker
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/ChangeTracker.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ChangeTracker
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/ChangeTracker.cs
    startLine: 20
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\nProvides access to change tracking information and operations for entity instances the context is tracking.\nInstances of this class are typically obtained from <xref href=\"Microsoft.EntityFrameworkCore.DbContext.ChangeTracker\" data-throw-if-not-resolved=\"false\"></xref> and it is not designed\nto be directly constructed in your application code.\n"
  example: []
  syntax:
    content: 'public class ChangeTracker : IInfrastructure<IStateManager>'
    content.vb: >-
      Public Class ChangeTracker
          Implements IInfrastructure(Of IStateManager)
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager}.Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  id: '#ctor(Microsoft.EntityFrameworkCore.DbContext)'
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker
  langs:
  - csharp
  - vb
  name: ChangeTracker(DbContext)
  nameWithType: ChangeTracker.ChangeTracker(DbContext)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.ChangeTracker(Microsoft.EntityFrameworkCore.DbContext)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/ChangeTracker.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/ChangeTracker.cs
    startLine: 31
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public ChangeTracker(DbContext context)
    content.vb: Public Sub New(context As DbContext)
    parameters:
    - id: context
      type: Microsoft.EntityFrameworkCore.DbContext
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.AutoDetectChangesEnabled
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.AutoDetectChangesEnabled
  id: AutoDetectChangesEnabled
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker
  langs:
  - csharp
  - vb
  name: AutoDetectChangesEnabled
  nameWithType: ChangeTracker.AutoDetectChangesEnabled
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.AutoDetectChangesEnabled
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/ChangeTracker.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AutoDetectChangesEnabled
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/ChangeTracker.cs
    startLine: 59
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\n<p>\n    Gets or sets a value indicating whether the <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges\" data-throw-if-not-resolved=\"false\"></xref> method is called\n    automatically by methods of <xref href=\"Microsoft.EntityFrameworkCore.DbContext\" data-throw-if-not-resolved=\"false\"></xref> and related classes.\n</p>\n<p>\n    The default value is true. This ensures the context is aware of any changes to tracked entity instances\n    before performing operations such as <xref href=\"Microsoft.EntityFrameworkCore.DbContext.SaveChanges\" data-throw-if-not-resolved=\"false\"></xref> or returning change tracking\n    information. If you disable automatic detect changes then you must ensure that\n<xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges\" data-throw-if-not-resolved=\"false\"></xref> is called when entity instances have been modified.\nFailure to do so may result in some changes not being persisted during\n<xref href=\"Microsoft.EntityFrameworkCore.DbContext.SaveChanges\" data-throw-if-not-resolved=\"false\"></xref> or out-of-date change tracking information being returned.\n</p>\n"
  example: []
  syntax:
    content: public virtual bool AutoDetectChangesEnabled { get; set; }
    content.vb: Public Overridable Property AutoDetectChangesEnabled As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.AutoDetectChangesEnabled*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.QueryTrackingBehavior
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.QueryTrackingBehavior
  id: QueryTrackingBehavior
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker
  langs:
  - csharp
  - vb
  name: QueryTrackingBehavior
  nameWithType: ChangeTracker.QueryTrackingBehavior
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.QueryTrackingBehavior
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/ChangeTracker.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: QueryTrackingBehavior
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/ChangeTracker.cs
    startLine: 78
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\n<p>\n    Gets or sets the tracking behavior for LINQ queries run against the context. Disabling change tracking\n    is useful for read-only scenarios because it avoids the overhead of setting up change tracking for each\n    entity instance. You should not disable change tracking if you want to manipulate entity instances and\n    persist those changes to the database using <xref href=\"Microsoft.EntityFrameworkCore.DbContext.SaveChanges\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n<p>\n    This method sets the default behavior for the context, but you can override this behavior for individual\n    queries using the <xref href=\"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsNoTracking%60%601(System.Linq.IQueryable%7b%60%600%7d)\" data-throw-if-not-resolved=\"false\"></xref>\n    and <xref href=\"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsTracking%60%601(System.Linq.IQueryable%7b%60%600%7d)\" data-throw-if-not-resolved=\"false\"></xref> methods.\n</p>\n<p>\n    The default value is <xref href=\"Microsoft.EntityFrameworkCore.QueryTrackingBehavior.TrackAll\" data-throw-if-not-resolved=\"false\"></xref>. This means the change tracker will\n    keep track of changes for all entities that are returned from a LINQ query.\n</p>\n"
  example: []
  syntax:
    content: public virtual QueryTrackingBehavior QueryTrackingBehavior { get; set; }
    content.vb: Public Overridable Property QueryTrackingBehavior As QueryTrackingBehavior
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.QueryTrackingBehavior
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.QueryTrackingBehavior*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.Entries
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.Entries
  id: Entries
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker
  langs:
  - csharp
  - vb
  name: Entries()
  nameWithType: ChangeTracker.Entries()
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.Entries()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/ChangeTracker.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Entries
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/ChangeTracker.cs
    startLine: 89
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\nGets an <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry\" data-throw-if-not-resolved=\"false\"></xref> for each entity being tracked by the context.\nThe entries provide access to change tracking information and operations for each entity.\n"
  example: []
  syntax:
    content: public virtual IEnumerable<EntityEntry> Entries()
    content.vb: Public Overridable Function Entries As IEnumerable(Of EntityEntry)
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry}
      description: 'An entry for each entity being tracked. '
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.Entries*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.Entries``1
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.Entries``1
  id: Entries``1
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker
  langs:
  - csharp
  - vb
  name: Entries<TEntity>()
  nameWithType: ChangeTracker.Entries<TEntity>()
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.Entries<TEntity>()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/ChangeTracker.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Entries
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/ChangeTracker.cs
    startLine: 102
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\nGets an <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry\" data-throw-if-not-resolved=\"false\"></xref> for all entities of a given type being tracked by the context.\nThe entries provide access to change tracking information and operations for each entity.\n"
  example: []
  syntax:
    content: 'public virtual IEnumerable<EntityEntry<TEntity>> Entries<TEntity>()where TEntity : class'
    content.vb: Public Overridable Function Entries(Of TEntity As Class) As IEnumerable(Of EntityEntry(Of TEntity))
    typeParameters:
    - id: TEntity
      description: 'The type of entities to get entries for. '
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry{{TEntity}}}
      description: 'An entry for each entity of the given type that is being tracked. '
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.Entries*
  nameWithType.vb: ChangeTracker.Entries(Of TEntity)()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.Entries(Of TEntity)()
  name.vb: Entries(Of TEntity)()
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.HasChanges
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.HasChanges
  id: HasChanges
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker
  langs:
  - csharp
  - vb
  name: HasChanges()
  nameWithType: ChangeTracker.HasChanges()
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.HasChanges()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/ChangeTracker.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasChanges
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/ChangeTracker.cs
    startLine: 131
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\n<p>\n    Checks if any new, deleted, or changed entities are being tracked\n    such that these changes will be sent to the database if <xref href=\"Microsoft.EntityFrameworkCore.DbContext.SaveChanges\" data-throw-if-not-resolved=\"false\"></xref>\n    or <xref href=\"Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref> is called.\n</p>\n<p>\n    Note that this method calls <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges\" data-throw-if-not-resolved=\"false\"></xref> unless\n<xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.AutoDetectChangesEnabled\" data-throw-if-not-resolved=\"false\"></xref> has been set to false.\n</p>\n"
  example: []
  syntax:
    content: public virtual bool HasChanges()
    content.vb: Public Overridable Function HasChanges As Boolean
    return:
      type: System.Boolean
      description: 'True if there are changes to save, otherwise false. '
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.HasChanges*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#ChangeTracking#Internal#IStateManager}#Instance
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#ChangeTracking#Internal#IStateManager}#Instance
  id: Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#ChangeTracking#Internal#IStateManager}#Instance
  isEii: true
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker
  langs:
  - csharp
  - vb
  name: IInfrastructure<IStateManager>.Instance
  nameWithType: ChangeTracker.IInfrastructure<IStateManager>.Instance
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager>.Instance
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/ChangeTracker.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager>.Instance
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/ChangeTracker.cs
    startLine: 150
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\n<p>\n    Gets the internal state manager being used to store information about tracked entities.\n</p>\n<p>\n    This property is intended for use by extension methods. It is not intended to be used in\n    application code.\n</p>\n"
  example: []
  syntax:
    content: IStateManager IInfrastructure<IStateManager>.Instance { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager>.Instance As IStateManager Implements IInfrastructure(Of IStateManager).Instance
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#ChangeTracking#Internal#IStateManager}#Instance*
  implements:
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager}.Instance
  nameWithType.vb: ChangeTracker.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager>.Instance
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager>.Instance
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.Context
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.Context
  id: Context
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker
  langs:
  - csharp
  - vb
  name: Context
  nameWithType: ChangeTracker.Context
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.Context
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/ChangeTracker.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Context
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/ChangeTracker.cs
    startLine: 155
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\nGets the context this change tracker belongs to.\n"
  example: []
  syntax:
    content: public virtual DbContext Context { get; }
    content.vb: Public Overridable ReadOnly Property Context As DbContext
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbContext
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.Context*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges
  id: DetectChanges
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker
  langs:
  - csharp
  - vb
  name: DetectChanges()
  nameWithType: ChangeTracker.DetectChanges()
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/ChangeTracker.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DetectChanges
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/ChangeTracker.cs
    startLine: 163
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\nScans the tracked entity instances to detect any changes made to the instance data. <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges\" data-throw-if-not-resolved=\"false\"></xref>\nis usually called automatically by the context when up-to-date information is required (before\n<xref href=\"Microsoft.EntityFrameworkCore.DbContext.SaveChanges\" data-throw-if-not-resolved=\"false\"></xref> and when returning change tracking information). You typically only need to\ncall this method if you have disabled <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.AutoDetectChangesEnabled\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public virtual void DetectChanges()
    content.vb: Public Overridable Sub DetectChanges
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.AcceptAllChanges
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.AcceptAllChanges
  id: AcceptAllChanges
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker
  langs:
  - csharp
  - vb
  name: AcceptAllChanges()
  nameWithType: ChangeTracker.AcceptAllChanges()
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.AcceptAllChanges()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/ChangeTracker.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AcceptAllChanges
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/ChangeTracker.cs
    startLine: 170
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\nAccepts all changes made to entities in the context. It will be assumed that the tracked entities\nrepresent the current state of the database. This method is typically called by <xref href=\"Microsoft.EntityFrameworkCore.DbContext.SaveChanges\" data-throw-if-not-resolved=\"false\"></xref>\nafter changes have been successfully saved to the database.\n"
  example: []
  syntax:
    content: public virtual void AcceptAllChanges()
    content.vb: Public Overridable Sub AcceptAllChanges
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.AcceptAllChanges*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.TrackGraph(System.Object,System.Action{Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode})
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.TrackGraph(System.Object,System.Action{Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode})
  id: TrackGraph(System.Object,System.Action{Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode})
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker
  langs:
  - csharp
  - vb
  name: TrackGraph(Object, Action<EntityEntryGraphNode>)
  nameWithType: ChangeTracker.TrackGraph(Object, Action<EntityEntryGraphNode>)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.TrackGraph(System.Object, System.Action<Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/ChangeTracker.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TrackGraph
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/ChangeTracker.cs
    startLine: 197
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\n<p>\n    Begins tracking an entity and any entities that are reachable by traversing it's navigation properties.\n    Traversal is recursive so the navigation properties of any discovered entities will also be scanned.\n    The specified <em>callback</em> is called for each discovered entity and must set the\n<xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.State\" data-throw-if-not-resolved=\"false\"></xref> that each entity should be tracked in. If no state is set, the entity\nremains untracked.\n</p>\n<p>\n    This method is designed for use in disconnected scenarios where entities are retrieved using one instance of\n    the context and then changes are saved using a different instance of the context. An example of this is a\n    web service where one service call retrieves entities from the database and another service call persists\n    any changes to the entities. Each service call uses a new instance of the context that is disposed when the\n    call is complete.\n</p>\n<p>\n    If an entity is discovered that is already tracked by the context, that entity is not processed (and it's\n    navigation properties are not traversed).\n</p>\n"
  example: []
  syntax:
    content: public virtual void TrackGraph(object rootEntity, Action<EntityEntryGraphNode> callback)
    content.vb: Public Overridable Sub TrackGraph(rootEntity As Object, callback As Action(Of EntityEntryGraphNode))
    parameters:
    - id: rootEntity
      type: System.Object
      description: 'The entity to begin traversal from. '
    - id: callback
      type: System.Action{Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode}
      description: "\nAn action to configure the change tracking information for each entity. For the entity to begin being tracked,\nthe <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.State\" data-throw-if-not-resolved=\"false\"></xref> must be set.\n"
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.TrackGraph*
  nameWithType.vb: ChangeTracker.TrackGraph(Object, Action(Of EntityEntryGraphNode))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.TrackGraph(System.Object, System.Action(Of Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode))
  name.vb: TrackGraph(Object, Action(Of EntityEntryGraphNode))
references:
- uid: Microsoft.EntityFrameworkCore.DbContext.ChangeTracker
  commentId: P:Microsoft.EntityFrameworkCore.DbContext.ChangeTracker
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: false
  name: ChangeTracker
  nameWithType: DbContext.ChangeTracker
  fullName: Microsoft.EntityFrameworkCore.DbContext.ChangeTracker
- uid: Microsoft.EntityFrameworkCore.ChangeTracking
  commentId: N:Microsoft.EntityFrameworkCore.ChangeTracking
  isExternal: false
  name: Microsoft.EntityFrameworkCore.ChangeTracking
  nameWithType: Microsoft.EntityFrameworkCore.ChangeTracking
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager}
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager}
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  definition: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  name: IInfrastructure<IStateManager>
  nameWithType: IInfrastructure<IStateManager>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager>
  nameWithType.vb: IInfrastructure(Of IStateManager)
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager)
  name.vb: IInfrastructure(Of IStateManager)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager
    name: IStateManager
    nameWithType: IStateManager
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager
    name: IStateManager
    nameWithType: IStateManager
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager}.Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
  parent: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions
  definition: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
  name: GetInfrastructure<IStateManager>()
  nameWithType: AccessorExtensions.GetInfrastructure<IStateManager>()
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager>()
  nameWithType.vb: AccessorExtensions.GetInfrastructure(Of IStateManager)()
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure(Of Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager)()
  name.vb: GetInfrastructure(Of IStateManager)()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1
    name: GetInfrastructure<IStateManager>
    nameWithType: AccessorExtensions.GetInfrastructure<IStateManager>
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1
    name: GetInfrastructure(Of IStateManager)
    nameWithType: AccessorExtensions.GetInfrastructure(Of IStateManager)
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure(Of Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext
  commentId: T:Microsoft.EntityFrameworkCore.DbContext
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: DbContext
  nameWithType: DbContext
  fullName: Microsoft.EntityFrameworkCore.DbContext
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  isExternal: false
  name: IInfrastructure<T>
  nameWithType: IInfrastructure<T>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<T>
  nameWithType.vb: IInfrastructure(Of T)
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of T)
  name.vb: IInfrastructure(Of T)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure
  commentId: N:Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Infrastructure
  nameWithType: Microsoft.EntityFrameworkCore.Infrastructure
  fullName: Microsoft.EntityFrameworkCore.Infrastructure
- uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
  isExternal: false
  name: GetInfrastructure<T>(IInfrastructure<T>)
  nameWithType: AccessorExtensions.GetInfrastructure<T>(IInfrastructure<T>)
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure<T>(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<T>)
  nameWithType.vb: AccessorExtensions.GetInfrastructure(Of T)(IInfrastructure(Of T))
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure(Of T)(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of T))
  name.vb: GetInfrastructure(Of T)(IInfrastructure(Of T))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
    name: GetInfrastructure<T>
    nameWithType: AccessorExtensions.GetInfrastructure<T>
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
    name: GetInfrastructure(Of T)
    nameWithType: AccessorExtensions.GetInfrastructure(Of T)
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: AccessorExtensions
  nameWithType: AccessorExtensions
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: false
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.#ctor
  isExternal: false
  name: ChangeTracker
  nameWithType: ChangeTracker.ChangeTracker
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.ChangeTracker
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges
- uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: false
  name: SaveChanges()
  nameWithType: DbContext.SaveChanges()
  fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChanges()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
    name: SaveChanges
    nameWithType: DbContext.SaveChanges
    fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
    name: SaveChanges
    nameWithType: DbContext.SaveChanges
    fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.AutoDetectChangesEnabled*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.AutoDetectChangesEnabled
  isExternal: false
  name: AutoDetectChangesEnabled
  nameWithType: ChangeTracker.AutoDetectChangesEnabled
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.AutoDetectChangesEnabled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsNoTracking``1(System.Linq.IQueryable{``0})
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsNoTracking``1(System.Linq.IQueryable{``0})
  isExternal: true
  name: AsNoTracking<TEntity>(IQueryable<TEntity>)
  nameWithType: EntityFrameworkQueryableExtensions.AsNoTracking<TEntity>(IQueryable<TEntity>)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsNoTracking<TEntity>(System.Linq.IQueryable<TEntity>)
  nameWithType.vb: EntityFrameworkQueryableExtensions.AsNoTracking(Of TEntity)(IQueryable(Of TEntity))
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsNoTracking(Of TEntity)(System.Linq.IQueryable(Of TEntity))
  name.vb: AsNoTracking(Of TEntity)(IQueryable(Of TEntity))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsNoTracking``1(System.Linq.IQueryable{``0})
    name: AsNoTracking<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.AsNoTracking<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsNoTracking<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsNoTracking``1(System.Linq.IQueryable{``0})
    name: AsNoTracking(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.AsNoTracking(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsNoTracking(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsTracking``1(System.Linq.IQueryable{``0})
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsTracking``1(System.Linq.IQueryable{``0})
  isExternal: true
  name: AsTracking<TEntity>(IQueryable<TEntity>)
  nameWithType: EntityFrameworkQueryableExtensions.AsTracking<TEntity>(IQueryable<TEntity>)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsTracking<TEntity>(System.Linq.IQueryable<TEntity>)
  nameWithType.vb: EntityFrameworkQueryableExtensions.AsTracking(Of TEntity)(IQueryable(Of TEntity))
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsTracking(Of TEntity)(System.Linq.IQueryable(Of TEntity))
  name.vb: AsTracking(Of TEntity)(IQueryable(Of TEntity))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsTracking``1(System.Linq.IQueryable{``0})
    name: AsTracking<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.AsTracking<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsTracking<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsTracking``1(System.Linq.IQueryable{``0})
    name: AsTracking(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.AsTracking(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsTracking(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.QueryTrackingBehavior.TrackAll
  commentId: F:Microsoft.EntityFrameworkCore.QueryTrackingBehavior.TrackAll
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.QueryTrackingBehavior*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.QueryTrackingBehavior
  isExternal: false
  name: QueryTrackingBehavior
  nameWithType: ChangeTracker.QueryTrackingBehavior
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.QueryTrackingBehavior
- uid: Microsoft.EntityFrameworkCore.QueryTrackingBehavior
  commentId: T:Microsoft.EntityFrameworkCore.QueryTrackingBehavior
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: QueryTrackingBehavior
  nameWithType: QueryTrackingBehavior
  fullName: Microsoft.EntityFrameworkCore.QueryTrackingBehavior
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  parent: Microsoft.EntityFrameworkCore.ChangeTracking
  isExternal: false
  name: EntityEntry
  nameWithType: EntityEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.Entries*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.Entries
  isExternal: false
  name: Entries
  nameWithType: ChangeTracker.Entries
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.Entries
- uid: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<EntityEntry>
  nameWithType: IEnumerable<EntityEntry>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry>
  nameWithType.vb: IEnumerable(Of EntityEntry)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry)
  name.vb: IEnumerable(Of EntityEntry)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
    name: EntityEntry
    nameWithType: EntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
    name: EntityEntry
    nameWithType: EntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry{{TEntity}}}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry{``0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<EntityEntry<TEntity>>
  nameWithType: IEnumerable<EntityEntry<TEntity>>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry<TEntity>>
  nameWithType.vb: IEnumerable(Of EntityEntry(Of TEntity))
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry(Of TEntity))
  name.vb: IEnumerable(Of EntityEntry(Of TEntity))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1
    name: EntityEntry
    nameWithType: EntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1
    name: EntityEntry
    nameWithType: EntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: SaveChangesAsync(CancellationToken)
  nameWithType: DbContext.SaveChangesAsync(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Threading.CancellationToken)
    name: SaveChangesAsync
    nameWithType: DbContext.SaveChangesAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Threading.CancellationToken)
    name: SaveChangesAsync
    nameWithType: DbContext.SaveChangesAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.AutoDetectChangesEnabled
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.AutoDetectChangesEnabled
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.HasChanges*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.HasChanges
  isExternal: false
  name: HasChanges
  nameWithType: ChangeTracker.HasChanges
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.HasChanges
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#ChangeTracking#Internal#IStateManager}#Instance*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#ChangeTracking#Internal#IStateManager}#Instance
  isExternal: false
  name: IInfrastructure<IStateManager>.Instance
  nameWithType: ChangeTracker.IInfrastructure<IStateManager>.Instance
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager>.Instance
  nameWithType.vb: ChangeTracker.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager>.Instance
  name.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager>.Instance
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager}.Instance
  commentId: P:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager}.Instance
  parent: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager}
  definition: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1.Instance
  name: Instance
  nameWithType: IInfrastructure<IStateManager>.Instance
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager>.Instance
  nameWithType.vb: IInfrastructure(Of IStateManager).Instance
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager).Instance
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: IStateManager
  nameWithType: IStateManager
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1.Instance
  commentId: P:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1.Instance
  isExternal: false
  name: Instance
  nameWithType: IInfrastructure<T>.Instance
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<T>.Instance
  nameWithType.vb: IInfrastructure(Of T).Instance
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of T).Instance
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  commentId: N:Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  nameWithType: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.Context*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.Context
  isExternal: false
  name: Context
  nameWithType: ChangeTracker.Context
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.Context
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges
  isExternal: false
  name: DetectChanges
  nameWithType: ChangeTracker.DetectChanges
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.AcceptAllChanges*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.AcceptAllChanges
  isExternal: false
  name: AcceptAllChanges
  nameWithType: ChangeTracker.AcceptAllChanges
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.AcceptAllChanges
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.State
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.State
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  isExternal: false
  name: State
  nameWithType: EntityEntry.State
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.State
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.TrackGraph*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.TrackGraph
  isExternal: false
  name: TrackGraph
  nameWithType: ChangeTracker.TrackGraph
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.TrackGraph
- uid: System.Action{Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode}
  commentId: T:System.Action{Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode}
  parent: System
  definition: System.Action`1
  name: Action<EntityEntryGraphNode>
  nameWithType: Action<EntityEntryGraphNode>
  fullName: System.Action<Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode>
  nameWithType.vb: Action(Of EntityEntryGraphNode)
  fullname.vb: System.Action(Of Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode)
  name.vb: Action(Of EntityEntryGraphNode)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode
    name: EntityEntryGraphNode
    nameWithType: EntityEntryGraphNode
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode
    name: EntityEntryGraphNode
    nameWithType: EntityEntryGraphNode
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullname.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
