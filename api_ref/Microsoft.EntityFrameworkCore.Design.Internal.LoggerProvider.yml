### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Design.Internal.LoggerProvider
  commentId: T:Microsoft.EntityFrameworkCore.Design.Internal.LoggerProvider
  id: LoggerProvider
  parent: Microsoft.EntityFrameworkCore.Design.Internal
  children:
  - Microsoft.EntityFrameworkCore.Design.Internal.LoggerProvider.#ctor(System.Func{System.String,ILogger})
  - Microsoft.EntityFrameworkCore.Design.Internal.LoggerProvider.CreateLogger(System.String)
  - Microsoft.EntityFrameworkCore.Design.Internal.LoggerProvider.Dispose
  langs:
  - csharp
  - vb
  name: LoggerProvider
  nameWithType: LoggerProvider
  fullName: Microsoft.EntityFrameworkCore.Design.Internal.LoggerProvider
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Design/Internal/LoggerProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: LoggerProvider
    path: src/Microsoft.EntityFrameworkCore.Design/Design/Internal/LoggerProvider.cs
    startLine: 14
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Design.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class LoggerProvider : ILoggerProvider'
    content.vb: >-
      Public Class LoggerProvider
          Inherits ILoggerProvider
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Design.Internal.LoggerProvider.#ctor(System.Func{System.String,ILogger})
  commentId: M:Microsoft.EntityFrameworkCore.Design.Internal.LoggerProvider.#ctor(System.Func{System.String,ILogger})
  id: '#ctor(System.Func{System.String,ILogger})'
  parent: Microsoft.EntityFrameworkCore.Design.Internal.LoggerProvider
  langs:
  - csharp
  - vb
  name: LoggerProvider(Func<String, ILogger>)
  nameWithType: LoggerProvider.LoggerProvider(Func<String, ILogger>)
  fullName: Microsoft.EntityFrameworkCore.Design.Internal.LoggerProvider.LoggerProvider(System.Func<System.String, ILogger>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Design/Internal/LoggerProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Design/Design/Internal/LoggerProvider.cs
    startLine: 22
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Design.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public LoggerProvider(Func<string, ILogger> creator)
    content.vb: Public Sub New(creator As Func(Of String, ILogger))
    parameters:
    - id: creator
      type: System.Func{System.String,ILogger}
  overload: Microsoft.EntityFrameworkCore.Design.Internal.LoggerProvider.#ctor*
  nameWithType.vb: LoggerProvider.LoggerProvider(Func(Of String, ILogger))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Design.Internal.LoggerProvider.LoggerProvider(System.Func(Of System.String, ILogger))
  name.vb: LoggerProvider(Func(Of String, ILogger))
- uid: Microsoft.EntityFrameworkCore.Design.Internal.LoggerProvider.CreateLogger(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Design.Internal.LoggerProvider.CreateLogger(System.String)
  id: CreateLogger(System.String)
  parent: Microsoft.EntityFrameworkCore.Design.Internal.LoggerProvider
  langs:
  - csharp
  - vb
  name: CreateLogger(String)
  nameWithType: LoggerProvider.CreateLogger(String)
  fullName: Microsoft.EntityFrameworkCore.Design.Internal.LoggerProvider.CreateLogger(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Design/Internal/LoggerProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateLogger
    path: src/Microsoft.EntityFrameworkCore.Design/Design/Internal/LoggerProvider.cs
    startLine: 33
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Design.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual ILogger CreateLogger(string categoryName)
    content.vb: Public Overridable Function CreateLogger(categoryName As String) As ILogger
    parameters:
    - id: categoryName
      type: System.String
    return:
      type: ILogger
  overload: Microsoft.EntityFrameworkCore.Design.Internal.LoggerProvider.CreateLogger*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Design.Internal.LoggerProvider.Dispose
  commentId: M:Microsoft.EntityFrameworkCore.Design.Internal.LoggerProvider.Dispose
  id: Dispose
  parent: Microsoft.EntityFrameworkCore.Design.Internal.LoggerProvider
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: LoggerProvider.Dispose()
  fullName: Microsoft.EntityFrameworkCore.Design.Internal.LoggerProvider.Dispose()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Design/Internal/LoggerProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Dispose
    path: src/Microsoft.EntityFrameworkCore.Design/Design/Internal/LoggerProvider.cs
    startLine: 39
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Design.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void Dispose()
    content.vb: Public Overridable Sub Dispose
  overload: Microsoft.EntityFrameworkCore.Design.Internal.LoggerProvider.Dispose*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.Design.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Design.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Design.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Design.Internal
  fullName: Microsoft.EntityFrameworkCore.Design.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Design.Internal.LoggerProvider.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.Design.Internal.LoggerProvider.#ctor
  isExternal: false
  name: LoggerProvider
  nameWithType: LoggerProvider.LoggerProvider
  fullName: Microsoft.EntityFrameworkCore.Design.Internal.LoggerProvider.LoggerProvider
- uid: System.Func{System.String,ILogger}
  commentId: T:System.Func{System.String,ILogger}
  parent: System
  definition: System.Func`2
  name: Func<String, ILogger>
  nameWithType: Func<String, ILogger>
  fullName: System.Func<System.String, ILogger>
  nameWithType.vb: Func(Of String, ILogger)
  fullname.vb: System.Func(Of System.String, ILogger)
  name.vb: Func(Of String, ILogger)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Design.Internal.LoggerProvider.CreateLogger*
  commentId: Overload:Microsoft.EntityFrameworkCore.Design.Internal.LoggerProvider.CreateLogger
  isExternal: false
  name: CreateLogger
  nameWithType: LoggerProvider.CreateLogger
  fullName: Microsoft.EntityFrameworkCore.Design.Internal.LoggerProvider.CreateLogger
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: ILogger
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: ILogger
- uid: Microsoft.EntityFrameworkCore.Design.Internal.LoggerProvider.Dispose*
  commentId: Overload:Microsoft.EntityFrameworkCore.Design.Internal.LoggerProvider.Dispose
  isExternal: false
  name: Dispose
  nameWithType: LoggerProvider.Dispose
  fullName: Microsoft.EntityFrameworkCore.Design.Internal.LoggerProvider.Dispose
