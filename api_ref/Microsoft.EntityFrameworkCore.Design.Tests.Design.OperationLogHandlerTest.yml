### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Design.Tests.Design.OperationLogHandlerTest
  commentId: T:Microsoft.EntityFrameworkCore.Design.Tests.Design.OperationLogHandlerTest
  id: OperationLogHandlerTest
  parent: Microsoft.EntityFrameworkCore.Design.Tests.Design
  children:
  - Microsoft.EntityFrameworkCore.Design.Tests.Design.OperationLogHandlerTest.Version_is_zero
  - Microsoft.EntityFrameworkCore.Design.Tests.Design.OperationLogHandlerTest.Write_methods_are_noops_when_null
  - Microsoft.EntityFrameworkCore.Design.Tests.Design.OperationLogHandlerTest.WriteDebug_works
  - Microsoft.EntityFrameworkCore.Design.Tests.Design.OperationLogHandlerTest.WriteError_works
  - Microsoft.EntityFrameworkCore.Design.Tests.Design.OperationLogHandlerTest.WriteInformation_works
  - Microsoft.EntityFrameworkCore.Design.Tests.Design.OperationLogHandlerTest.WriteTrace_works
  - Microsoft.EntityFrameworkCore.Design.Tests.Design.OperationLogHandlerTest.WriteWarning_works
  langs:
  - csharp
  - vb
  name: OperationLogHandlerTest
  nameWithType: OperationLogHandlerTest
  fullName: Microsoft.EntityFrameworkCore.Design.Tests.Design.OperationLogHandlerTest
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Design.Tests/Design/OperationLogHandlerTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: OperationLogHandlerTest
    path: test/Microsoft.EntityFrameworkCore.Design.Tests/Design/OperationLogHandlerTest.cs
    startLine: 8
  assemblies:
  - Microsoft.EntityFrameworkCore.Design.Tests
  namespace: Microsoft.EntityFrameworkCore.Design.Tests.Design
  syntax:
    content: public class OperationLogHandlerTest
    content.vb: Public Class OperationLogHandlerTest
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Design.Tests.Design.OperationLogHandlerTest.Version_is_zero
  commentId: M:Microsoft.EntityFrameworkCore.Design.Tests.Design.OperationLogHandlerTest.Version_is_zero
  id: Version_is_zero
  parent: Microsoft.EntityFrameworkCore.Design.Tests.Design.OperationLogHandlerTest
  langs:
  - csharp
  - vb
  name: Version_is_zero()
  nameWithType: OperationLogHandlerTest.Version_is_zero()
  fullName: Microsoft.EntityFrameworkCore.Design.Tests.Design.OperationLogHandlerTest.Version_is_zero()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Design.Tests/Design/OperationLogHandlerTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Version_is_zero
    path: test/Microsoft.EntityFrameworkCore.Design.Tests/Design/OperationLogHandlerTest.cs
    startLine: 10
  assemblies:
  - Microsoft.EntityFrameworkCore.Design.Tests
  namespace: Microsoft.EntityFrameworkCore.Design.Tests.Design
  syntax:
    content: >-
      [Fact]

      public void Version_is_zero()
    content.vb: >-
      <Fact>

      Public Sub Version_is_zero
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Design.Tests.Design.OperationLogHandlerTest.Write_methods_are_noops_when_null
  commentId: M:Microsoft.EntityFrameworkCore.Design.Tests.Design.OperationLogHandlerTest.Write_methods_are_noops_when_null
  id: Write_methods_are_noops_when_null
  parent: Microsoft.EntityFrameworkCore.Design.Tests.Design.OperationLogHandlerTest
  langs:
  - csharp
  - vb
  name: Write_methods_are_noops_when_null()
  nameWithType: OperationLogHandlerTest.Write_methods_are_noops_when_null()
  fullName: Microsoft.EntityFrameworkCore.Design.Tests.Design.OperationLogHandlerTest.Write_methods_are_noops_when_null()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Design.Tests/Design/OperationLogHandlerTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Write_methods_are_noops_when_null
    path: test/Microsoft.EntityFrameworkCore.Design.Tests/Design/OperationLogHandlerTest.cs
    startLine: 16
  assemblies:
  - Microsoft.EntityFrameworkCore.Design.Tests
  namespace: Microsoft.EntityFrameworkCore.Design.Tests.Design
  syntax:
    content: >-
      [Fact]

      public void Write_methods_are_noops_when_null()
    content.vb: >-
      <Fact>

      Public Sub Write_methods_are_noops_when_null
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Design.Tests.Design.OperationLogHandlerTest.WriteError_works
  commentId: M:Microsoft.EntityFrameworkCore.Design.Tests.Design.OperationLogHandlerTest.WriteError_works
  id: WriteError_works
  parent: Microsoft.EntityFrameworkCore.Design.Tests.Design.OperationLogHandlerTest
  langs:
  - csharp
  - vb
  name: WriteError_works()
  nameWithType: OperationLogHandlerTest.WriteError_works()
  fullName: Microsoft.EntityFrameworkCore.Design.Tests.Design.OperationLogHandlerTest.WriteError_works()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Design.Tests/Design/OperationLogHandlerTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: WriteError_works
    path: test/Microsoft.EntityFrameworkCore.Design.Tests/Design/OperationLogHandlerTest.cs
    startLine: 28
  assemblies:
  - Microsoft.EntityFrameworkCore.Design.Tests
  namespace: Microsoft.EntityFrameworkCore.Design.Tests.Design
  syntax:
    content: >-
      [Fact]

      public void WriteError_works()
    content.vb: >-
      <Fact>

      Public Sub WriteError_works
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Design.Tests.Design.OperationLogHandlerTest.WriteWarning_works
  commentId: M:Microsoft.EntityFrameworkCore.Design.Tests.Design.OperationLogHandlerTest.WriteWarning_works
  id: WriteWarning_works
  parent: Microsoft.EntityFrameworkCore.Design.Tests.Design.OperationLogHandlerTest
  langs:
  - csharp
  - vb
  name: WriteWarning_works()
  nameWithType: OperationLogHandlerTest.WriteWarning_works()
  fullName: Microsoft.EntityFrameworkCore.Design.Tests.Design.OperationLogHandlerTest.WriteWarning_works()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Design.Tests/Design/OperationLogHandlerTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: WriteWarning_works
    path: test/Microsoft.EntityFrameworkCore.Design.Tests/Design/OperationLogHandlerTest.cs
    startLine: 40
  assemblies:
  - Microsoft.EntityFrameworkCore.Design.Tests
  namespace: Microsoft.EntityFrameworkCore.Design.Tests.Design
  syntax:
    content: >-
      [Fact]

      public void WriteWarning_works()
    content.vb: >-
      <Fact>

      Public Sub WriteWarning_works
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Design.Tests.Design.OperationLogHandlerTest.WriteInformation_works
  commentId: M:Microsoft.EntityFrameworkCore.Design.Tests.Design.OperationLogHandlerTest.WriteInformation_works
  id: WriteInformation_works
  parent: Microsoft.EntityFrameworkCore.Design.Tests.Design.OperationLogHandlerTest
  langs:
  - csharp
  - vb
  name: WriteInformation_works()
  nameWithType: OperationLogHandlerTest.WriteInformation_works()
  fullName: Microsoft.EntityFrameworkCore.Design.Tests.Design.OperationLogHandlerTest.WriteInformation_works()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Design.Tests/Design/OperationLogHandlerTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: WriteInformation_works
    path: test/Microsoft.EntityFrameworkCore.Design.Tests/Design/OperationLogHandlerTest.cs
    startLine: 52
  assemblies:
  - Microsoft.EntityFrameworkCore.Design.Tests
  namespace: Microsoft.EntityFrameworkCore.Design.Tests.Design
  syntax:
    content: >-
      [Fact]

      public void WriteInformation_works()
    content.vb: >-
      <Fact>

      Public Sub WriteInformation_works
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Design.Tests.Design.OperationLogHandlerTest.WriteDebug_works
  commentId: M:Microsoft.EntityFrameworkCore.Design.Tests.Design.OperationLogHandlerTest.WriteDebug_works
  id: WriteDebug_works
  parent: Microsoft.EntityFrameworkCore.Design.Tests.Design.OperationLogHandlerTest
  langs:
  - csharp
  - vb
  name: WriteDebug_works()
  nameWithType: OperationLogHandlerTest.WriteDebug_works()
  fullName: Microsoft.EntityFrameworkCore.Design.Tests.Design.OperationLogHandlerTest.WriteDebug_works()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Design.Tests/Design/OperationLogHandlerTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: WriteDebug_works
    path: test/Microsoft.EntityFrameworkCore.Design.Tests/Design/OperationLogHandlerTest.cs
    startLine: 64
  assemblies:
  - Microsoft.EntityFrameworkCore.Design.Tests
  namespace: Microsoft.EntityFrameworkCore.Design.Tests.Design
  syntax:
    content: >-
      [Fact]

      public void WriteDebug_works()
    content.vb: >-
      <Fact>

      Public Sub WriteDebug_works
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Design.Tests.Design.OperationLogHandlerTest.WriteTrace_works
  commentId: M:Microsoft.EntityFrameworkCore.Design.Tests.Design.OperationLogHandlerTest.WriteTrace_works
  id: WriteTrace_works
  parent: Microsoft.EntityFrameworkCore.Design.Tests.Design.OperationLogHandlerTest
  langs:
  - csharp
  - vb
  name: WriteTrace_works()
  nameWithType: OperationLogHandlerTest.WriteTrace_works()
  fullName: Microsoft.EntityFrameworkCore.Design.Tests.Design.OperationLogHandlerTest.WriteTrace_works()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Design.Tests/Design/OperationLogHandlerTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: WriteTrace_works
    path: test/Microsoft.EntityFrameworkCore.Design.Tests/Design/OperationLogHandlerTest.cs
    startLine: 76
  assemblies:
  - Microsoft.EntityFrameworkCore.Design.Tests
  namespace: Microsoft.EntityFrameworkCore.Design.Tests.Design
  syntax:
    content: >-
      [Fact]

      public void WriteTrace_works()
    content.vb: >-
      <Fact>

      Public Sub WriteTrace_works
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.EntityFrameworkCore.Design.Tests.Design
  commentId: N:Microsoft.EntityFrameworkCore.Design.Tests.Design
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Design.Tests.Design
  nameWithType: Microsoft.EntityFrameworkCore.Design.Tests.Design
  fullName: Microsoft.EntityFrameworkCore.Design.Tests.Design
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
