### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1
  id: EntityEntry`1
  parent: Microsoft.EntityFrameworkCore.ChangeTracking
  children:
  - Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  - Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Collection``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
  - Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Collection``1(System.String)
  - Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Entity
  - Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Property``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  - Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Property``1(System.String)
  - Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Reference``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  - Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Reference``1(System.String)
  langs:
  - csharp
  - vb
  name: EntityEntry<TEntity>
  nameWithType: EntityEntry<TEntity>
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry<TEntity>
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/EntityEntry`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: EntityEntry
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/EntityEntry`.cs
    startLine: 25
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\n<p>\n    Provides access to change tracking information and operations for a given entity.\n</p>\n<p>\n    Instances of this class are returned from methods when using the <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker\" data-throw-if-not-resolved=\"false\"></xref> API and it is\n    not designed to be directly constructed in your application code.\n</p>\n"
  example: []
  syntax:
    content: 'public class EntityEntry<TEntity> : EntityEntry, IInfrastructure<InternalEntityEntry> where TEntity : class'
    content.vb: >-
      Public Class EntityEntry(Of TEntity As Class)
          Inherits EntityEntry
          Implements IInfrastructure(Of InternalEntityEntry)
    typeParameters:
    - id: TEntity
      description: 'The type of entity being tracked by this entry. '
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  implements:
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry}
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.InternalEntry
  - Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.State
  - Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#ChangeTracking#Internal#InternalEntityEntry}#Instance
  - Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Context
  - Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Metadata
  - Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Member(System.String)
  - Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Members
  - Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Navigation(System.String)
  - Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Navigations
  - Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Property(System.String)
  - Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Properties
  - Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Reference(System.String)
  - Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.References
  - Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Collection(System.String)
  - Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Collections
  - Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.IsKeySet
  - Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.CurrentValues
  - Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.OriginalValues
  - Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.GetDatabaseValues
  - Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.GetDatabaseValuesAsync(System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Reload
  - Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.ReloadAsync(System.Threading.CancellationToken)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry}.Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1
  nameWithType.vb: EntityEntry(Of TEntity)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry(Of TEntity)
  name.vb: EntityEntry(Of TEntity)
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  id: '#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)'
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1
  langs:
  - csharp
  - vb
  name: EntityEntry(InternalEntityEntry)
  nameWithType: EntityEntry<TEntity>.EntityEntry(InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry<TEntity>.EntityEntry(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/EntityEntry`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/EntityEntry`.cs
    startLine: 32
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public EntityEntry(InternalEntityEntry internalEntry)
    content.vb: Public Sub New(internalEntry As InternalEntityEntry)
    parameters:
    - id: internalEntry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.#ctor*
  nameWithType.vb: EntityEntry(Of TEntity).EntityEntry(InternalEntityEntry)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry(Of TEntity).EntityEntry(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Entity
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Entity
  id: Entity
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1
  langs:
  - csharp
  - vb
  name: Entity
  nameWithType: EntityEntry<TEntity>.Entity
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry<TEntity>.Entity
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/EntityEntry`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Entity
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/EntityEntry`.cs
    startLine: 40
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\nGets the entity being tracked by this entry.\n"
  example: []
  syntax:
    content: public virtual TEntity Entity { get; }
    content.vb: Public Overridable ReadOnly Property Entity As TEntity
    parameters: []
    return:
      type: '{TEntity}'
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Entity*
  nameWithType.vb: EntityEntry(Of TEntity).Entity
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry(Of TEntity).Entity
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Property``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Property``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  id: Property``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1
  langs:
  - csharp
  - vb
  name: Property<TProperty>(Expression<Func<TEntity, TProperty>>)
  nameWithType: EntityEntry<TEntity>.Property<TProperty>(Expression<Func<TEntity, TProperty>>)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry<TEntity>.Property<TProperty>(System.Linq.Expressions.Expression<System.Func<TEntity, TProperty>>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/EntityEntry`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Property
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/EntityEntry`.cs
    startLine: 51
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\nProvides access to change tracking information and operations for a given\nproperty of this entity.\n"
  example: []
  syntax:
    content: public virtual PropertyEntry<TEntity, TProperty> Property<TProperty>(Expression<Func<TEntity, TProperty>> propertyExpression)
    content.vb: Public Overridable Function Property(Of TProperty)(propertyExpression As Expression(Of Func(Of TEntity, TProperty))) As PropertyEntry(Of TEntity, TProperty)
    parameters:
    - id: propertyExpression
      type: System.Linq.Expressions.Expression{System.Func{{TEntity},{TProperty}}}
      description: "\nA lambda expression representing the property to access information and operations for\n(<code>t =&gt; t.Property1</code>).\n"
    typeParameters:
    - id: TProperty
    return:
      type: Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry{{TEntity},{TProperty}}
      description: 'An object that exposes change tracking information and operations for the given property. '
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Property*
  nameWithType.vb: EntityEntry(Of TEntity).Property(Of TProperty)(Expression(Of Func(Of TEntity, TProperty)))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry(Of TEntity).Property(Of TProperty)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, TProperty)))
  name.vb: Property(Of TProperty)(Expression(Of Func(Of TEntity, TProperty)))
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Reference``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Reference``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  id: Reference``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1
  langs:
  - csharp
  - vb
  name: Reference<TProperty>(Expression<Func<TEntity, TProperty>>)
  nameWithType: EntityEntry<TEntity>.Reference<TProperty>(Expression<Func<TEntity, TProperty>>)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry<TEntity>.Reference<TProperty>(System.Linq.Expressions.Expression<System.Func<TEntity, TProperty>>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/EntityEntry`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Reference
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/EntityEntry`.cs
    startLine: 71
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\nProvides access to change tracking and loading information for a reference (i.e. non-collection)\nnavigation property that associates this entity to another entity.\n"
  example: []
  syntax:
    content: 'public virtual ReferenceEntry<TEntity, TProperty> Reference<TProperty>(Expression<Func<TEntity, TProperty>> propertyExpression)where TProperty : class'
    content.vb: Public Overridable Function Reference(Of TProperty As Class)(propertyExpression As Expression(Of Func(Of TEntity, TProperty))) As ReferenceEntry(Of TEntity, TProperty)
    parameters:
    - id: propertyExpression
      type: System.Linq.Expressions.Expression{System.Func{{TEntity},{TProperty}}}
      description: "\nA lambda expression representing the property to access information and operations for\n(<code>t =&gt; t.Property1</code>).\n"
    typeParameters:
    - id: TProperty
    return:
      type: Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry{{TEntity},{TProperty}}
      description: "\nAn object that exposes change tracking information and operations for the\ngiven navigation property.\n"
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Reference*
  nameWithType.vb: EntityEntry(Of TEntity).Reference(Of TProperty)(Expression(Of Func(Of TEntity, TProperty)))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry(Of TEntity).Reference(Of TProperty)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, TProperty)))
  name.vb: Reference(Of TProperty)(Expression(Of Func(Of TEntity, TProperty)))
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Collection``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Collection``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
  id: Collection``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1
  langs:
  - csharp
  - vb
  name: Collection<TProperty>(Expression<Func<TEntity, IEnumerable<TProperty>>>)
  nameWithType: EntityEntry<TEntity>.Collection<TProperty>(Expression<Func<TEntity, IEnumerable<TProperty>>>)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry<TEntity>.Collection<TProperty>(System.Linq.Expressions.Expression<System.Func<TEntity, System.Collections.Generic.IEnumerable<TProperty>>>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/EntityEntry`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Collection
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/EntityEntry`.cs
    startLine: 92
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\nProvides access to change tracking and loading information for a collection\nnavigation property that associates this entity to a collection of another entities.\n"
  example: []
  syntax:
    content: 'public virtual CollectionEntry<TEntity, TProperty> Collection<TProperty>(Expression<Func<TEntity, IEnumerable<TProperty>>> propertyExpression)where TProperty : class'
    content.vb: Public Overridable Function Collection(Of TProperty As Class)(propertyExpression As Expression(Of Func(Of TEntity, IEnumerable(Of TProperty)))) As CollectionEntry(Of TEntity, TProperty)
    parameters:
    - id: propertyExpression
      type: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Collections.Generic.IEnumerable{{TProperty}}}}
      description: "\nA lambda expression representing the property to access information and operations for\n(<code>t =&gt; t.Property1</code>).\n"
    typeParameters:
    - id: TProperty
    return:
      type: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry{{TEntity},{TProperty}}
      description: "\nAn object that exposes change tracking information and operations for the\ngiven navigation property.\n"
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Collection*
  nameWithType.vb: EntityEntry(Of TEntity).Collection(Of TProperty)(Expression(Of Func(Of TEntity, IEnumerable(Of TProperty))))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry(Of TEntity).Collection(Of TProperty)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Collections.Generic.IEnumerable(Of TProperty))))
  name.vb: Collection(Of TProperty)(Expression(Of Func(Of TEntity, IEnumerable(Of TProperty))))
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Reference``1(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Reference``1(System.String)
  id: Reference``1(System.String)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1
  langs:
  - csharp
  - vb
  name: Reference<TProperty>(String)
  nameWithType: EntityEntry<TEntity>.Reference<TProperty>(String)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry<TEntity>.Reference<TProperty>(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/EntityEntry`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Reference
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/EntityEntry`.cs
    startLine: 110
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\nProvides access to change tracking and loading information for a reference (i.e. non-collection)\nnavigation property that associates this entity to another entity.\n"
  example: []
  syntax:
    content: 'public virtual ReferenceEntry<TEntity, TProperty> Reference<TProperty>(string navigationPropertyName)where TProperty : class'
    content.vb: Public Overridable Function Reference(Of TProperty As Class)(navigationPropertyName As String) As ReferenceEntry(Of TEntity, TProperty)
    parameters:
    - id: navigationPropertyName
      type: System.String
      description: 'The name of the navigation property. '
    typeParameters:
    - id: TProperty
    return:
      type: Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry{{TEntity},{TProperty}}
      description: "\nAn object that exposes change tracking information and operations for the\ngiven navigation property.\n"
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Reference*
  nameWithType.vb: EntityEntry(Of TEntity).Reference(Of TProperty)(String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry(Of TEntity).Reference(Of TProperty)(System.String)
  name.vb: Reference(Of TProperty)(String)
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Collection``1(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Collection``1(System.String)
  id: Collection``1(System.String)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1
  langs:
  - csharp
  - vb
  name: Collection<TProperty>(String)
  nameWithType: EntityEntry<TEntity>.Collection<TProperty>(String)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry<TEntity>.Collection<TProperty>(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/EntityEntry`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Collection
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/EntityEntry`.cs
    startLine: 127
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\nProvides access to change tracking and loading information for a collection\nnavigation property that associates this entity to a collection of another entities.\n"
  example: []
  syntax:
    content: 'public virtual CollectionEntry<TEntity, TProperty> Collection<TProperty>(string navigationPropertyName)where TProperty : class'
    content.vb: Public Overridable Function Collection(Of TProperty As Class)(navigationPropertyName As String) As CollectionEntry(Of TEntity, TProperty)
    parameters:
    - id: navigationPropertyName
      type: System.String
      description: 'The name of the navigation property. '
    typeParameters:
    - id: TProperty
    return:
      type: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry{{TEntity},{TProperty}}
      description: "\nAn object that exposes change tracking information and operations for the\ngiven navigation property.\n"
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Collection*
  nameWithType.vb: EntityEntry(Of TEntity).Collection(Of TProperty)(String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry(Of TEntity).Collection(Of TProperty)(System.String)
  name.vb: Collection(Of TProperty)(String)
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Property``1(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Property``1(System.String)
  id: Property``1(System.String)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1
  langs:
  - csharp
  - vb
  name: Property<TProperty>(String)
  nameWithType: EntityEntry<TEntity>.Property<TProperty>(String)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry<TEntity>.Property<TProperty>(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/EntityEntry`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Property
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/EntityEntry`.cs
    startLine: 142
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\nProvides access to change tracking information and operations for a given\nproperty of this entity.\n"
  example: []
  syntax:
    content: public virtual PropertyEntry<TEntity, TProperty> Property<TProperty>(string propertyName)
    content.vb: Public Overridable Function Property(Of TProperty)(propertyName As String) As PropertyEntry(Of TEntity, TProperty)
    parameters:
    - id: propertyName
      type: System.String
      description: 'The property to access information and operations for. '
    typeParameters:
    - id: TProperty
      description: 'The type of the property. '
    return:
      type: Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry{{TEntity},{TProperty}}
      description: 'An object that exposes change tracking information and operations for the given property. '
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Property*
  nameWithType.vb: EntityEntry(Of TEntity).Property(Of TProperty)(String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry(Of TEntity).Property(Of TProperty)(System.String)
  name.vb: Property(Of TProperty)(String)
references:
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker
  parent: Microsoft.EntityFrameworkCore.ChangeTracking
  isExternal: false
  name: ChangeTracker
  nameWithType: ChangeTracker
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker
- uid: Microsoft.EntityFrameworkCore.ChangeTracking
  commentId: N:Microsoft.EntityFrameworkCore.ChangeTracking
  isExternal: false
  name: Microsoft.EntityFrameworkCore.ChangeTracking
  nameWithType: Microsoft.EntityFrameworkCore.ChangeTracking
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  parent: Microsoft.EntityFrameworkCore.ChangeTracking
  isExternal: false
  name: EntityEntry
  nameWithType: EntityEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry}
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry}
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  definition: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  name: IInfrastructure<InternalEntityEntry>
  nameWithType: IInfrastructure<InternalEntityEntry>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry>
  nameWithType.vb: IInfrastructure(Of InternalEntityEntry)
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  name.vb: IInfrastructure(Of InternalEntityEntry)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.InternalEntry
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.InternalEntry
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  isExternal: false
  name: InternalEntry
  nameWithType: EntityEntry.InternalEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.InternalEntry
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.State
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.State
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  isExternal: false
  name: State
  nameWithType: EntityEntry.State
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.State
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#ChangeTracking#Internal#InternalEntityEntry}#Instance
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#ChangeTracking#Internal#InternalEntityEntry}#Instance
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  isExternal: false
  name: IInfrastructure<InternalEntityEntry>.Instance
  nameWithType: EntityEntry.IInfrastructure<InternalEntityEntry>.Instance
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry>.Instance
  nameWithType.vb: EntityEntry.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry>.Instance
  name.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry>.Instance
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Context
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Context
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  isExternal: false
  name: Context
  nameWithType: EntityEntry.Context
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Context
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Metadata
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Metadata
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  isExternal: false
  name: Metadata
  nameWithType: EntityEntry.Metadata
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Metadata
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Member(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Member(System.String)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  isExternal: true
  name: Member(String)
  nameWithType: EntityEntry.Member(String)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Member(System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Member(System.String)
    name: Member
    nameWithType: EntityEntry.Member
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Member
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Member(System.String)
    name: Member
    nameWithType: EntityEntry.Member
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Member
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Members
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Members
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  isExternal: false
  name: Members
  nameWithType: EntityEntry.Members
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Members
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Navigation(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Navigation(System.String)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  isExternal: true
  name: Navigation(String)
  nameWithType: EntityEntry.Navigation(String)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Navigation(System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Navigation(System.String)
    name: Navigation
    nameWithType: EntityEntry.Navigation
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Navigation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Navigation(System.String)
    name: Navigation
    nameWithType: EntityEntry.Navigation
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Navigation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Navigations
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Navigations
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  isExternal: false
  name: Navigations
  nameWithType: EntityEntry.Navigations
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Navigations
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Property(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Property(System.String)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  isExternal: true
  name: Property(String)
  nameWithType: EntityEntry.Property(String)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Property(System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Property(System.String)
    name: Property
    nameWithType: EntityEntry.Property
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Property
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Property(System.String)
    name: Property
    nameWithType: EntityEntry.Property
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Property
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Properties
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Properties
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  isExternal: false
  name: Properties
  nameWithType: EntityEntry.Properties
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Properties
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Reference(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Reference(System.String)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  isExternal: true
  name: Reference(String)
  nameWithType: EntityEntry.Reference(String)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Reference(System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Reference(System.String)
    name: Reference
    nameWithType: EntityEntry.Reference
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Reference
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Reference(System.String)
    name: Reference
    nameWithType: EntityEntry.Reference
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Reference
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.References
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.References
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  isExternal: false
  name: References
  nameWithType: EntityEntry.References
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.References
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Collection(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Collection(System.String)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  isExternal: true
  name: Collection(String)
  nameWithType: EntityEntry.Collection(String)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Collection(System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Collection(System.String)
    name: Collection
    nameWithType: EntityEntry.Collection
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Collection
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Collection(System.String)
    name: Collection
    nameWithType: EntityEntry.Collection
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Collection
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Collections
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Collections
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  isExternal: false
  name: Collections
  nameWithType: EntityEntry.Collections
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Collections
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.IsKeySet
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.IsKeySet
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  isExternal: false
  name: IsKeySet
  nameWithType: EntityEntry.IsKeySet
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.IsKeySet
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.CurrentValues
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.CurrentValues
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  isExternal: false
  name: CurrentValues
  nameWithType: EntityEntry.CurrentValues
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.CurrentValues
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.OriginalValues
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.OriginalValues
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  isExternal: false
  name: OriginalValues
  nameWithType: EntityEntry.OriginalValues
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.OriginalValues
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.GetDatabaseValues
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.GetDatabaseValues
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  isExternal: false
  name: GetDatabaseValues()
  nameWithType: EntityEntry.GetDatabaseValues()
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.GetDatabaseValues()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.GetDatabaseValues
    name: GetDatabaseValues
    nameWithType: EntityEntry.GetDatabaseValues
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.GetDatabaseValues
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.GetDatabaseValues
    name: GetDatabaseValues
    nameWithType: EntityEntry.GetDatabaseValues
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.GetDatabaseValues
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.GetDatabaseValuesAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.GetDatabaseValuesAsync(System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  isExternal: true
  name: GetDatabaseValuesAsync(CancellationToken)
  nameWithType: EntityEntry.GetDatabaseValuesAsync(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.GetDatabaseValuesAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.GetDatabaseValuesAsync(System.Threading.CancellationToken)
    name: GetDatabaseValuesAsync
    nameWithType: EntityEntry.GetDatabaseValuesAsync
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.GetDatabaseValuesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.GetDatabaseValuesAsync(System.Threading.CancellationToken)
    name: GetDatabaseValuesAsync
    nameWithType: EntityEntry.GetDatabaseValuesAsync
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.GetDatabaseValuesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Reload
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Reload
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  isExternal: false
  name: Reload()
  nameWithType: EntityEntry.Reload()
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Reload()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Reload
    name: Reload
    nameWithType: EntityEntry.Reload
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Reload
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Reload
    name: Reload
    nameWithType: EntityEntry.Reload
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Reload
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.ReloadAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.ReloadAsync(System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  isExternal: true
  name: ReloadAsync(CancellationToken)
  nameWithType: EntityEntry.ReloadAsync(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.ReloadAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.ReloadAsync(System.Threading.CancellationToken)
    name: ReloadAsync
    nameWithType: EntityEntry.ReloadAsync
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.ReloadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.ReloadAsync(System.Threading.CancellationToken)
    name: ReloadAsync
    nameWithType: EntityEntry.ReloadAsync
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.ReloadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry}.Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
  parent: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions
  definition: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
  name: GetInfrastructure<InternalEntityEntry>()
  nameWithType: AccessorExtensions.GetInfrastructure<InternalEntityEntry>()
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry>()
  nameWithType.vb: AccessorExtensions.GetInfrastructure(Of InternalEntityEntry)()
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure(Of Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)()
  name.vb: GetInfrastructure(Of InternalEntityEntry)()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1
    name: GetInfrastructure<InternalEntityEntry>
    nameWithType: AccessorExtensions.GetInfrastructure<InternalEntityEntry>
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1
    name: GetInfrastructure(Of InternalEntityEntry)
    nameWithType: AccessorExtensions.GetInfrastructure(Of InternalEntityEntry)
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure(Of Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  isExternal: false
  name: IInfrastructure<T>
  nameWithType: IInfrastructure<T>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<T>
  nameWithType.vb: IInfrastructure(Of T)
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of T)
  name.vb: IInfrastructure(Of T)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure
  commentId: N:Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Infrastructure
  nameWithType: Microsoft.EntityFrameworkCore.Infrastructure
  fullName: Microsoft.EntityFrameworkCore.Infrastructure
- uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
  isExternal: false
  name: GetInfrastructure<T>(IInfrastructure<T>)
  nameWithType: AccessorExtensions.GetInfrastructure<T>(IInfrastructure<T>)
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure<T>(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<T>)
  nameWithType.vb: AccessorExtensions.GetInfrastructure(Of T)(IInfrastructure(Of T))
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure(Of T)(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of T))
  name.vb: GetInfrastructure(Of T)(IInfrastructure(Of T))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
    name: GetInfrastructure<T>
    nameWithType: AccessorExtensions.GetInfrastructure<T>
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
    name: GetInfrastructure(Of T)
    nameWithType: AccessorExtensions.GetInfrastructure(Of T)
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: AccessorExtensions
  nameWithType: AccessorExtensions
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.#ctor
  isExternal: false
  name: EntityEntry
  nameWithType: EntityEntry<TEntity>.EntityEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry<TEntity>.EntityEntry
  nameWithType.vb: EntityEntry(Of TEntity).EntityEntry
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry(Of TEntity).EntityEntry
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: InternalEntityEntry
  nameWithType: InternalEntityEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  commentId: N:Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  nameWithType: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Entity*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Entity
  isExternal: false
  name: Entity
  nameWithType: EntityEntry<TEntity>.Entity
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry<TEntity>.Entity
  nameWithType.vb: EntityEntry(Of TEntity).Entity
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry(Of TEntity).Entity
- uid: '{TEntity}'
  commentId: '!:TEntity'
  definition: TEntity
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: TEntity
  isExternal: false
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Property*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Property
  isExternal: false
  name: Property<TProperty>
  nameWithType: EntityEntry<TEntity>.Property<TProperty>
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry<TEntity>.Property<TProperty>
  nameWithType.vb: EntityEntry(Of TEntity).Property(Of TProperty)
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry(Of TEntity).Property(Of TProperty)
  name.vb: Property(Of TProperty)
- uid: System.Linq.Expressions.Expression{System.Func{{TEntity},{TProperty}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{``0,``1}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<TEntity, TProperty>>
  nameWithType: Expression<Func<TEntity, TProperty>>
  fullName: System.Linq.Expressions.Expression<System.Func<TEntity, TProperty>>
  nameWithType.vb: Expression(Of Func(Of TEntity, TProperty))
  fullname.vb: System.Linq.Expressions.Expression(Of System.Func(Of TEntity, TProperty))
  name.vb: Expression(Of Func(Of TEntity, TProperty))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry{{TEntity},{TProperty}}
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry{`0,``0}
  parent: Microsoft.EntityFrameworkCore.ChangeTracking
  definition: Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry`2
  name: PropertyEntry<TEntity, TProperty>
  nameWithType: PropertyEntry<TEntity, TProperty>
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry<TEntity, TProperty>
  nameWithType.vb: PropertyEntry(Of TEntity, TProperty)
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry(Of TEntity, TProperty)
  name.vb: PropertyEntry(Of TEntity, TProperty)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry`2
    name: PropertyEntry
    nameWithType: PropertyEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry`2
    name: PropertyEntry
    nameWithType: PropertyEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullname.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry`2
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry`2
  isExternal: false
  name: PropertyEntry<TEntity, TProperty>
  nameWithType: PropertyEntry<TEntity, TProperty>
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry<TEntity, TProperty>
  nameWithType.vb: PropertyEntry(Of TEntity, TProperty)
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry(Of TEntity, TProperty)
  name.vb: PropertyEntry(Of TEntity, TProperty)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry`2
    name: PropertyEntry
    nameWithType: PropertyEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry`2
    name: PropertyEntry
    nameWithType: PropertyEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Reference*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Reference
  isExternal: false
  name: Reference<TProperty>
  nameWithType: EntityEntry<TEntity>.Reference<TProperty>
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry<TEntity>.Reference<TProperty>
  nameWithType.vb: EntityEntry(Of TEntity).Reference(Of TProperty)
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry(Of TEntity).Reference(Of TProperty)
  name.vb: Reference(Of TProperty)
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry{{TEntity},{TProperty}}
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry{`0,``0}
  parent: Microsoft.EntityFrameworkCore.ChangeTracking
  definition: Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry`2
  name: ReferenceEntry<TEntity, TProperty>
  nameWithType: ReferenceEntry<TEntity, TProperty>
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry<TEntity, TProperty>
  nameWithType.vb: ReferenceEntry(Of TEntity, TProperty)
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry(Of TEntity, TProperty)
  name.vb: ReferenceEntry(Of TEntity, TProperty)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry`2
    name: ReferenceEntry
    nameWithType: ReferenceEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry`2
    name: ReferenceEntry
    nameWithType: ReferenceEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry`2
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry`2
  isExternal: false
  name: ReferenceEntry<TEntity, TProperty>
  nameWithType: ReferenceEntry<TEntity, TProperty>
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry<TEntity, TProperty>
  nameWithType.vb: ReferenceEntry(Of TEntity, TProperty)
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry(Of TEntity, TProperty)
  name.vb: ReferenceEntry(Of TEntity, TProperty)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry`2
    name: ReferenceEntry
    nameWithType: ReferenceEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry`2
    name: ReferenceEntry
    nameWithType: ReferenceEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Collection*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Collection
  isExternal: false
  name: Collection<TProperty>
  nameWithType: EntityEntry<TEntity>.Collection<TProperty>
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry<TEntity>.Collection<TProperty>
  nameWithType.vb: EntityEntry(Of TEntity).Collection(Of TProperty)
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry(Of TEntity).Collection(Of TProperty)
  name.vb: Collection(Of TProperty)
- uid: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Collections.Generic.IEnumerable{{TProperty}}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<TEntity, IEnumerable<TProperty>>>
  nameWithType: Expression<Func<TEntity, IEnumerable<TProperty>>>
  fullName: System.Linq.Expressions.Expression<System.Func<TEntity, System.Collections.Generic.IEnumerable<TProperty>>>
  nameWithType.vb: Expression(Of Func(Of TEntity, IEnumerable(Of TProperty)))
  fullname.vb: System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Collections.Generic.IEnumerable(Of TProperty)))
  name.vb: Expression(Of Func(Of TEntity, IEnumerable(Of TProperty)))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry{{TEntity},{TProperty}}
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry{`0,``0}
  parent: Microsoft.EntityFrameworkCore.ChangeTracking
  definition: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry`2
  name: CollectionEntry<TEntity, TProperty>
  nameWithType: CollectionEntry<TEntity, TProperty>
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry<TEntity, TProperty>
  nameWithType.vb: CollectionEntry(Of TEntity, TProperty)
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry(Of TEntity, TProperty)
  name.vb: CollectionEntry(Of TEntity, TProperty)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry`2
    name: CollectionEntry
    nameWithType: CollectionEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry`2
    name: CollectionEntry
    nameWithType: CollectionEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry`2
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry`2
  isExternal: false
  name: CollectionEntry<TEntity, TProperty>
  nameWithType: CollectionEntry<TEntity, TProperty>
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry<TEntity, TProperty>
  nameWithType.vb: CollectionEntry(Of TEntity, TProperty)
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry(Of TEntity, TProperty)
  name.vb: CollectionEntry(Of TEntity, TProperty)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry`2
    name: CollectionEntry
    nameWithType: CollectionEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry`2
    name: CollectionEntry
    nameWithType: CollectionEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
