### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`6
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`6
  id: Snapshot`6
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  children:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`6.#ctor(`0,`1,`2,`3,`4,`5)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`6.GetValue``1(System.Int32)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`6.Item(System.Int32)
  langs:
  - csharp
  - vb
  name: Snapshot<T0, T1, T2, T3, T4, T5>
  nameWithType: Snapshot<T0, T1, T2, T3, T4, T5>
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot<T0, T1, T2, T3, T4, T5>
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/Snapshot.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Snapshot
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/Snapshot.cs
    startLine: 4926
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public sealed class Snapshot<T0, T1, T2, T3, T4, T5> : ISnapshot'
    content.vb: >-
      Public NotInheritable Class Snapshot(Of T0, T1, T2, T3, T4, T5)
          Implements ISnapshot
    typeParameters:
    - id: T0
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: Snapshot(Of T0, T1, T2, T3, T4, T5)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot(Of T0, T1, T2, T3, T4, T5)
  name.vb: Snapshot(Of T0, T1, T2, T3, T4, T5)
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`6.#ctor(`0,`1,`2,`3,`4,`5)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`6.#ctor(`0,`1,`2,`3,`4,`5)
  id: '#ctor(`0,`1,`2,`3,`4,`5)'
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`6
  langs:
  - csharp
  - vb
  name: Snapshot(T0, T1, T2, T3, T4, T5)
  nameWithType: Snapshot<T0, T1, T2, T3, T4, T5>.Snapshot(T0, T1, T2, T3, T4, T5)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot<T0, T1, T2, T3, T4, T5>.Snapshot(T0, T1, T2, T3, T4, T5)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/Snapshot.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/Snapshot.cs
    startLine: 4936
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public Snapshot(T0 value0, T1 value1, T2 value2, T3 value3, T4 value4, T5 value5)
    content.vb: Public Sub New(value0 As T0, value1 As T1, value2 As T2, value3 As T3, value4 As T4, value5 As T5)
    parameters:
    - id: value0
      type: '{T0}'
    - id: value1
      type: '{T1}'
    - id: value2
      type: '{T2}'
    - id: value3
      type: '{T3}'
    - id: value4
      type: '{T4}'
    - id: value5
      type: '{T5}'
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`6.#ctor*
  nameWithType.vb: Snapshot(Of T0, T1, T2, T3, T4, T5).Snapshot(T0, T1, T2, T3, T4, T5)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot(Of T0, T1, T2, T3, T4, T5).Snapshot(T0, T1, T2, T3, T4, T5)
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`6.GetValue``1(System.Int32)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`6.GetValue``1(System.Int32)
  id: GetValue``1(System.Int32)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`6
  langs:
  - csharp
  - vb
  name: GetValue<T>(Int32)
  nameWithType: Snapshot<T0, T1, T2, T3, T4, T5>.GetValue<T>(Int32)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot<T0, T1, T2, T3, T4, T5>.GetValue<T>(System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/Snapshot.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetValue
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/Snapshot.cs
    startLine: 4963
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public T GetValue<T>(int index)
    content.vb: Public Function GetValue(Of T)(index As Integer) As T
    parameters:
    - id: index
      type: System.Int32
    typeParameters:
    - id: T
    return:
      type: '{T}'
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`6.GetValue*
  implements:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot.GetValue``1(System.Int32)
  nameWithType.vb: Snapshot(Of T0, T1, T2, T3, T4, T5).GetValue(Of T)(Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot(Of T0, T1, T2, T3, T4, T5).GetValue(Of T)(System.Int32)
  name.vb: GetValue(Of T)(Int32)
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`6.Item(System.Int32)
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`6.Item(System.Int32)
  id: Item(System.Int32)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`6
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: Snapshot<T0, T1, T2, T3, T4, T5>.Item[Int32]
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot<T0, T1, T2, T3, T4, T5>.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/Snapshot.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: this[]
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/Snapshot.cs
    startLine: 4970
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public object this[int index] { get; set; }
    content.vb: Public Property Item(index As Integer) As Object
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Object
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`6.Item*
  implements:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot.Item(System.Int32)
  nameWithType.vb: Snapshot(Of T0, T1, T2, T3, T4, T5).Item(Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot(Of T0, T1, T2, T3, T4, T5).Item(System.Int32)
  name.vb: Item(Int32)
references:
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  commentId: N:Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  nameWithType: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: ISnapshot
  nameWithType: ISnapshot
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`6.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`6.#ctor
  isExternal: false
  name: Snapshot
  nameWithType: Snapshot<T0, T1, T2, T3, T4, T5>.Snapshot
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot<T0, T1, T2, T3, T4, T5>.Snapshot
  nameWithType.vb: Snapshot(Of T0, T1, T2, T3, T4, T5).Snapshot
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot(Of T0, T1, T2, T3, T4, T5).Snapshot
- uid: '{T0}'
  commentId: '!:T0'
  definition: T0
  name: T0
  nameWithType: T0
  fullName: T0
- uid: '{T1}'
  commentId: '!:T1'
  definition: T1
  name: T1
  nameWithType: T1
  fullName: T1
- uid: '{T2}'
  commentId: '!:T2'
  definition: T2
  name: T2
  nameWithType: T2
  fullName: T2
- uid: '{T3}'
  commentId: '!:T3'
  definition: T3
  name: T3
  nameWithType: T3
  fullName: T3
- uid: '{T4}'
  commentId: '!:T4'
  definition: T4
  name: T4
  nameWithType: T4
  fullName: T4
- uid: '{T5}'
  commentId: '!:T5'
  definition: T5
  name: T5
  nameWithType: T5
  fullName: T5
- uid: T0
  isExternal: false
  name: T0
  nameWithType: T0
  fullName: T0
- uid: T1
  isExternal: false
  name: T1
  nameWithType: T1
  fullName: T1
- uid: T2
  isExternal: false
  name: T2
  nameWithType: T2
  fullName: T2
- uid: T3
  isExternal: false
  name: T3
  nameWithType: T3
  fullName: T3
- uid: T4
  isExternal: false
  name: T4
  nameWithType: T4
  fullName: T4
- uid: T5
  isExternal: false
  name: T5
  nameWithType: T5
  fullName: T5
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`6.GetValue*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`6.GetValue
  isExternal: false
  name: GetValue<T>
  nameWithType: Snapshot<T0, T1, T2, T3, T4, T5>.GetValue<T>
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot<T0, T1, T2, T3, T4, T5>.GetValue<T>
  nameWithType.vb: Snapshot(Of T0, T1, T2, T3, T4, T5).GetValue(Of T)
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot(Of T0, T1, T2, T3, T4, T5).GetValue(Of T)
  name.vb: GetValue(Of T)
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot.GetValue``1(System.Int32)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot.GetValue``1(System.Int32)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot
  isExternal: true
  name: GetValue<T>(Int32)
  nameWithType: ISnapshot.GetValue<T>(Int32)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot.GetValue<T>(System.Int32)
  nameWithType.vb: ISnapshot.GetValue(Of T)(Int32)
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot.GetValue(Of T)(System.Int32)
  name.vb: GetValue(Of T)(Int32)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot.GetValue``1(System.Int32)
    name: GetValue<T>
    nameWithType: ISnapshot.GetValue<T>
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot.GetValue<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot.GetValue``1(System.Int32)
    name: GetValue(Of T)
    nameWithType: ISnapshot.GetValue(Of T)
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot.GetValue(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`6.Item*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`6.Item
  isExternal: false
  name: Item
  nameWithType: Snapshot<T0, T1, T2, T3, T4, T5>.Item
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot<T0, T1, T2, T3, T4, T5>.Item
  nameWithType.vb: Snapshot(Of T0, T1, T2, T3, T4, T5).Item
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot(Of T0, T1, T2, T3, T4, T5).Item
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot.Item(System.Int32)
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot.Item(System.Int32)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot
  isExternal: true
  name: Item[Int32]
  nameWithType: ISnapshot.Item[Int32]
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot.Item[System.Int32]
  nameWithType.vb: ISnapshot.Item(Int32)
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot.Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot.Item(System.Int32)
    name: Item
    nameWithType: ISnapshot.Item
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot.Item(System.Int32)
    name: Item
    nameWithType: ISnapshot.Item
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
