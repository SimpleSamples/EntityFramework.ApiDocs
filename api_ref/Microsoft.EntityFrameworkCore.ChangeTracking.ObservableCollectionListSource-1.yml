### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.ObservableCollectionListSource`1
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableCollectionListSource`1
  id: ObservableCollectionListSource`1
  parent: Microsoft.EntityFrameworkCore.ChangeTracking
  children:
  - Microsoft.EntityFrameworkCore.ChangeTracking.ObservableCollectionListSource`1.#ctor
  - Microsoft.EntityFrameworkCore.ChangeTracking.ObservableCollectionListSource`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  - Microsoft.EntityFrameworkCore.ChangeTracking.ObservableCollectionListSource`1.#ctor(System.Collections.Generic.List{`0})
  langs:
  - csharp
  - vb
  name: ObservableCollectionListSource<T>
  nameWithType: ObservableCollectionListSource<T>
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.ObservableCollectionListSource<T>
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/ObservableCollectionListSource.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ObservableCollectionListSource
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/ObservableCollectionListSource.cs
    startLine: 27
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\n<p>\n    Extends <see cref=\"!:ObservableCollection&lt;T&gt;\"></see> and adds an explicit implementation of <see cref=\"!:IListSource\"></see>.\n</p>\n<p>\n    The method <see cref=\"!:IListSource.GetList\"></see> is implemented to return an <see cref=\"!:IBindingList\"></see>\n    implementation that stays in sync with the ObservableCollection.\n</p>\n<p>\n    This class can be used to implement navigation properties on entities for use in Windows Forms data binding.\n    For WPF data binding use an ObservableCollection rather than an instance of this class.\n</p>\n"
  example: []
  syntax:
    content: 'public class ObservableCollectionListSource<T> : ObservableCollection<T>, IListSource where T : class'
    content.vb: >-
      Public Class ObservableCollectionListSource(Of T As Class)
          Inherits ObservableCollection(Of T)
          Implements IListSource
    typeParameters:
    - id: T
      description: ''
  inheritance:
  - System.Object
  nameWithType.vb: ObservableCollectionListSource(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.ObservableCollectionListSource(Of T)
  name.vb: ObservableCollectionListSource(Of T)
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.ObservableCollectionListSource`1.#ctor
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableCollectionListSource`1.#ctor
  id: '#ctor'
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.ObservableCollectionListSource`1
  langs:
  - csharp
  - vb
  name: ObservableCollectionListSource()
  nameWithType: ObservableCollectionListSource<T>.ObservableCollectionListSource()
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.ObservableCollectionListSource<T>.ObservableCollectionListSource()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/ObservableCollectionListSource.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/ObservableCollectionListSource.cs
    startLine: 35
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.ObservableCollectionListSource%601\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public ObservableCollectionListSource()
    content.vb: Public Sub New
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.ObservableCollectionListSource`1.#ctor*
  nameWithType.vb: ObservableCollectionListSource(Of T).ObservableCollectionListSource()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.ObservableCollectionListSource(Of T).ObservableCollectionListSource()
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.ObservableCollectionListSource`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableCollectionListSource`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  id: '#ctor(System.Collections.Generic.IEnumerable{`0})'
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.ObservableCollectionListSource`1
  langs:
  - csharp
  - vb
  name: ObservableCollectionListSource(IEnumerable<T>)
  nameWithType: ObservableCollectionListSource<T>.ObservableCollectionListSource(IEnumerable<T>)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.ObservableCollectionListSource<T>.ObservableCollectionListSource(System.Collections.Generic.IEnumerable<T>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/ObservableCollectionListSource.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/ObservableCollectionListSource.cs
    startLine: 44
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.ObservableCollectionListSource%601\" data-throw-if-not-resolved=\"false\"></xref> class that\ncontains elements copied from the specified collection.\n"
  example: []
  syntax:
    content: public ObservableCollectionListSource(IEnumerable<T> collection)
    content.vb: Public Sub New(collection As IEnumerable(Of T))
    parameters:
    - id: collection
      type: System.Collections.Generic.IEnumerable{{T}}
      description: 'The collection from which the elements are copied. '
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.ObservableCollectionListSource`1.#ctor*
  nameWithType.vb: ObservableCollectionListSource(Of T).ObservableCollectionListSource(IEnumerable(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.ObservableCollectionListSource(Of T).ObservableCollectionListSource(System.Collections.Generic.IEnumerable(Of T))
  name.vb: ObservableCollectionListSource(IEnumerable(Of T))
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.ObservableCollectionListSource`1.#ctor(System.Collections.Generic.List{`0})
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableCollectionListSource`1.#ctor(System.Collections.Generic.List{`0})
  id: '#ctor(System.Collections.Generic.List{`0})'
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.ObservableCollectionListSource`1
  langs:
  - csharp
  - vb
  name: ObservableCollectionListSource(List<T>)
  nameWithType: ObservableCollectionListSource<T>.ObservableCollectionListSource(List<T>)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.ObservableCollectionListSource<T>.ObservableCollectionListSource(System.Collections.Generic.List<T>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/ObservableCollectionListSource.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/ObservableCollectionListSource.cs
    startLine: 54
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.ObservableCollectionListSource%601\" data-throw-if-not-resolved=\"false\"></xref> class that\ncontains elements copied from the specified list.\n"
  example: []
  syntax:
    content: public ObservableCollectionListSource(List<T> list)
    content.vb: Public Sub New(list As List(Of T))
    parameters:
    - id: list
      type: System.Collections.Generic.List{{T}}
      description: 'The list from which the elements are copied. '
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.ObservableCollectionListSource`1.#ctor*
  nameWithType.vb: ObservableCollectionListSource(Of T).ObservableCollectionListSource(List(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.ObservableCollectionListSource(Of T).ObservableCollectionListSource(System.Collections.Generic.List(Of T))
  name.vb: ObservableCollectionListSource(List(Of T))
references:
- uid: Microsoft.EntityFrameworkCore.ChangeTracking
  commentId: N:Microsoft.EntityFrameworkCore.ChangeTracking
  isExternal: false
  name: Microsoft.EntityFrameworkCore.ChangeTracking
  nameWithType: Microsoft.EntityFrameworkCore.ChangeTracking
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.ObservableCollectionListSource`1
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableCollectionListSource`1
  isExternal: false
  name: ObservableCollectionListSource<T>
  nameWithType: ObservableCollectionListSource<T>
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.ObservableCollectionListSource<T>
  nameWithType.vb: ObservableCollectionListSource(Of T)
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.ObservableCollectionListSource(Of T)
  name.vb: ObservableCollectionListSource(Of T)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.ObservableCollectionListSource`1
    name: ObservableCollectionListSource
    nameWithType: ObservableCollectionListSource
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.ObservableCollectionListSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.ObservableCollectionListSource`1
    name: ObservableCollectionListSource
    nameWithType: ObservableCollectionListSource
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.ObservableCollectionListSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.ObservableCollectionListSource`1.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableCollectionListSource`1.#ctor
  isExternal: false
  name: ObservableCollectionListSource
  nameWithType: ObservableCollectionListSource<T>.ObservableCollectionListSource
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.ObservableCollectionListSource<T>.ObservableCollectionListSource
  nameWithType.vb: ObservableCollectionListSource(Of T).ObservableCollectionListSource
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.ObservableCollectionListSource(Of T).ObservableCollectionListSource
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.List{{T}}
  commentId: T:System.Collections.Generic.List{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullname.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullname.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
