### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.DbSet`1
  commentId: T:Microsoft.EntityFrameworkCore.DbSet`1
  id: DbSet`1
  parent: Microsoft.EntityFrameworkCore
  children:
  - Microsoft.EntityFrameworkCore.DbSet`1.Add(`0)
  - Microsoft.EntityFrameworkCore.DbSet`1.AddAsync(`0,System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.DbSet`1.AddRange(`0[])
  - Microsoft.EntityFrameworkCore.DbSet`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  - Microsoft.EntityFrameworkCore.DbSet`1.AddRangeAsync(`0[])
  - Microsoft.EntityFrameworkCore.DbSet`1.AddRangeAsync(System.Collections.Generic.IEnumerable{`0},System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.DbSet`1.Attach(`0)
  - Microsoft.EntityFrameworkCore.DbSet`1.AttachRange(`0[])
  - Microsoft.EntityFrameworkCore.DbSet`1.AttachRange(System.Collections.Generic.IEnumerable{`0})
  - Microsoft.EntityFrameworkCore.DbSet`1.Find(System.Object[])
  - Microsoft.EntityFrameworkCore.DbSet`1.FindAsync(System.Object[])
  - Microsoft.EntityFrameworkCore.DbSet`1.FindAsync(System.Object[],System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.DbSet`1.Local
  - Microsoft.EntityFrameworkCore.DbSet`1.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{System#IServiceProvider}#Instance
  - Microsoft.EntityFrameworkCore.DbSet`1.Microsoft#EntityFrameworkCore#Query#Internal#IAsyncEnumerableAccessor{TEntity}#AsyncEnumerable
  - Microsoft.EntityFrameworkCore.DbSet`1.Remove(`0)
  - Microsoft.EntityFrameworkCore.DbSet`1.RemoveRange(`0[])
  - Microsoft.EntityFrameworkCore.DbSet`1.RemoveRange(System.Collections.Generic.IEnumerable{`0})
  - Microsoft.EntityFrameworkCore.DbSet`1.System#Collections#Generic#IEnumerable{TEntity}#GetEnumerator
  - Microsoft.EntityFrameworkCore.DbSet`1.System#Collections#IEnumerable#GetEnumerator
  - Microsoft.EntityFrameworkCore.DbSet`1.System#Linq#IQueryable#ElementType
  - Microsoft.EntityFrameworkCore.DbSet`1.System#Linq#IQueryable#Expression
  - Microsoft.EntityFrameworkCore.DbSet`1.System#Linq#IQueryable#Provider
  - Microsoft.EntityFrameworkCore.DbSet`1.Update(`0)
  - Microsoft.EntityFrameworkCore.DbSet`1.UpdateRange(`0[])
  - Microsoft.EntityFrameworkCore.DbSet`1.UpdateRange(System.Collections.Generic.IEnumerable{`0})
  langs:
  - csharp
  - vb
  name: DbSet<TEntity>
  nameWithType: DbSet<TEntity>
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DbSet
    path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
    startLine: 509
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore
  summary: "\n<p>\n    A <xref href=\"Microsoft.EntityFrameworkCore.DbSet%601\" data-throw-if-not-resolved=\"false\"></xref> can be used to query and save instances of <em>TEntity</em>.\n    LINQ queries against a <xref href=\"Microsoft.EntityFrameworkCore.DbSet%601\" data-throw-if-not-resolved=\"false\"></xref> will be translated into queries against the database.\n</p>\n<p>\n    The results of a LINQ query against a <xref href=\"Microsoft.EntityFrameworkCore.DbSet%601\" data-throw-if-not-resolved=\"false\"></xref> will contain the results\n    returned from the database and may not reflect changes made in the context that have not\n    been persisted to the database. For example, the results will not contain newly added entities\n    and may still contain entities that are marked for deletion.\n</p>\n<p>\n    Depending on the database being used, some parts of a LINQ query against a <xref href=\"Microsoft.EntityFrameworkCore.DbSet%601\" data-throw-if-not-resolved=\"false\"></xref>\n    may be evaluated in memory rather than being translated into a database query.\n</p>\n<p>\n<xref href=\"Microsoft.EntityFrameworkCore.DbSet%601\" data-throw-if-not-resolved=\"false\"></xref> objects are usually obtained from a <xref href=\"Microsoft.EntityFrameworkCore.DbSet%601\" data-throw-if-not-resolved=\"false\"></xref>\nproperty on a derived <xref href=\"Microsoft.EntityFrameworkCore.DbContext\" data-throw-if-not-resolved=\"false\"></xref> or from the <xref href=\"Microsoft.EntityFrameworkCore.DbContext.Set%60%601\" data-throw-if-not-resolved=\"false\"></xref>\nmethod.\n</p>\n"
  example: []
  syntax:
    content: 'public abstract class DbSet<TEntity> : IListSource, IQueryable<TEntity>, IEnumerable<TEntity>, IQueryable, IEnumerable, IAsyncEnumerableAccessor<TEntity>, IInfrastructure<IServiceProvider> where TEntity : class'
    content.vb: >-
      Public MustInherit Class DbSet(Of TEntity As Class)
          Inherits IListSource
          Implements IQueryable(Of TEntity), IEnumerable(Of TEntity), IQueryable, IEnumerable, IAsyncEnumerableAccessor(Of TEntity), IInfrastructure(Of IServiceProvider)
    typeParameters:
    - id: TEntity
      description: 'The type of entity being operated on by this set. '
  inheritance:
  - System.Object
  implements:
  - System.Linq.IQueryable{{TEntity}}
  - System.Collections.Generic.IEnumerable{{TEntity}}
  - System.Linq.IQueryable
  - System.Collections.IEnumerable
  - Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor{{TEntity}}
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider}
  extensionMethods:
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AnyAsync``1(System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AnyAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}},System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AllAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}},System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync``1(System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}},System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LongCountAsync``1(System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LongCountAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}},System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstAsync``1(System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}},System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstOrDefaultAsync``1(System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstOrDefaultAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}},System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastAsync``1(System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}},System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastOrDefaultAsync``1(System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastOrDefaultAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}},System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleAsync``1(System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}},System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleOrDefaultAsync``1(System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleOrDefaultAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}},System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MinAsync``1(System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MinAsync``2(System.Linq.Expressions.Expression{System.Func{{TEntity},{TResult}}},System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MaxAsync``1(System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MaxAsync``2(System.Linq.Expressions.Expression{System.Func{{TEntity},{TResult}}},System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Decimal}},System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Nullable{System.Decimal}}},System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Int32}},System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Nullable{System.Int32}}},System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Int64}},System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Nullable{System.Int64}}},System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Double}},System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Nullable{System.Double}}},System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Single}},System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Nullable{System.Single}}},System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Decimal}},System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Nullable{System.Decimal}}},System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Int32}},System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Nullable{System.Int32}}},System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Int64}},System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Nullable{System.Int64}}},System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Double}},System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Nullable{System.Double}}},System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Single}},System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Nullable{System.Single}}},System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ContainsAsync``1({TEntity},System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync``1(System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToArrayAsync``1(System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include``2(System.Linq.Expressions.Expression{System.Func{{TEntity},{TProperty}}})
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include``1(System.String)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsNoTracking``1
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsTracking``1
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Load``1
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LoadAsync``1(System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync``2(System.Func{{TEntity},{TKey}},System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync``2(System.Func{{TEntity},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}},System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync``3(System.Func{{TEntity},{TKey}},System.Func{{TEntity},{TElement}},System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync``3(System.Func{{TEntity},{TKey}},System.Func{{TEntity},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}},System.Threading.CancellationToken)
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ForEachAsync``1(System.Action{{TEntity}},System.Threading.CancellationToken)
  - System.Collections.Generic.IEnumerable{`0}.Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.OrderByOrdinal``1(System.Func{{TEntity},System.String})
  - System.Collections.Generic.IEnumerable{`0}.Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.Distinct``1(System.Func{{TEntity},{TEntity},System.Boolean})
  - System.Collections.Generic.IEnumerable{System.Object}.Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.Join(System.String)
  - System.Collections.Generic.IEnumerable{`0}.Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.StructuralSequenceEqual``1(System.Collections.Generic.IEnumerable{{TEntity}})
  - System.Collections.Generic.IEnumerable{`0}.Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.StartsWith``1(System.Collections.Generic.IEnumerable{{TEntity}})
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider}.Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService``1
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider}.Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.Extensions.Internal.QueryableExtensions.AsAsyncEnumerable``1
  - System.Collections.Generic.IEnumerable{`0}.Microsoft.EntityFrameworkCore.Specification.Tests.Extensions.NullChecked``1
  - System.Collections.Generic.IEnumerable{`0}.Microsoft.EntityFrameworkCore.Specification.Tests.Extensions.ForEach``1(System.Action{{TEntity}})
  - System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.RelationalQueryableExtensions.FromSql``1(System.String,System.Object[])
  nameWithType.vb: DbSet(Of TEntity)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity)
  name.vb: DbSet(Of TEntity)
- uid: Microsoft.EntityFrameworkCore.DbSet`1.Local
  commentId: P:Microsoft.EntityFrameworkCore.DbSet`1.Local
  id: Local
  parent: Microsoft.EntityFrameworkCore.DbSet`1
  langs:
  - csharp
  - vb
  name: Local
  nameWithType: DbSet<TEntity>.Local
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.Local
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Local
    path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
    startLine: 64
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore
  summary: "\n<p>\n    Gets an <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.LocalView%601\" data-throw-if-not-resolved=\"false\"></xref> that represents a local view of all Added, Unchanged,\n    and Modified entities in this set.\n</p>\n<p>\n    This local view will stay in sync as entities are added or removed from the context. Likewise, entities\n    added to or removed from the local view will automatically be added to or removed\n    from the context.\n</p>\n<p>\n    This property can be used for data binding by populating the set with data, for example by using the\n<xref href=\"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Load%60%601(System.Linq.IQueryable%7b%60%600%7d)\" data-throw-if-not-resolved=\"false\"></xref> extension method,\nand then binding to the local data through this property.  For WPF bind to this property\ndirectly.  For Windows Forms bind to the result of calling ToBindingList on this property.\n</p>\n"
  example: []
  syntax:
    content: public virtual LocalView<TEntity> Local { get; }
    content.vb: Public Overridable ReadOnly Property Local As LocalView(Of TEntity)
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.ChangeTracking.LocalView{{TEntity}}
  overload: Microsoft.EntityFrameworkCore.DbSet`1.Local*
  nameWithType.vb: DbSet(Of TEntity).Local
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).Local
- uid: Microsoft.EntityFrameworkCore.DbSet`1.Find(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbSet`1.Find(System.Object[])
  id: Find(System.Object[])
  parent: Microsoft.EntityFrameworkCore.DbSet`1
  langs:
  - csharp
  - vb
  name: Find(Object[])
  nameWithType: DbSet<TEntity>.Find(Object[])
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.Find(System.Object[])
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Find
    path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
    startLine: 78
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore
  summary: "\nFinds an entity with the given primary key values. If an entity with the given primary key values\nis being tracked by the context, then it is returned immediately without making a request to the\ndatabase. Otherwise, a query is made to the dataabse for an entity with the given primary key values\nand this entity, if found, is attached to the context and returned. If no entity is found, then\nnull is returned.\n"
  example: []
  syntax:
    content: public virtual TEntity Find(params object[] keyValues)
    content.vb: Public Overridable Function Find(ParamArray keyValues As Object()) As TEntity
    parameters:
    - id: keyValues
      type: System.Object[]
      description: The values of the primary key for the entity to be found.
    return:
      type: '{TEntity}'
      description: The entity found, or null.
  overload: Microsoft.EntityFrameworkCore.DbSet`1.Find*
  nameWithType.vb: DbSet(Of TEntity).Find(Object())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).Find(System.Object())
  name.vb: Find(Object())
- uid: Microsoft.EntityFrameworkCore.DbSet`1.FindAsync(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbSet`1.FindAsync(System.Object[])
  id: FindAsync(System.Object[])
  parent: Microsoft.EntityFrameworkCore.DbSet`1
  langs:
  - csharp
  - vb
  name: FindAsync(Object[])
  nameWithType: DbSet<TEntity>.FindAsync(Object[])
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.FindAsync(System.Object[])
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: FindAsync
    path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
    startLine: 92
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore
  summary: "\nFinds an entity with the given primary key values. If an entity with the given primary key values\nis being tracked by the context, then it is returned immediately without making a request to the\ndatabase. Otherwise, a query is made to the dataabse for an entity with the given primary key values\nand this entity, if found, is attached to the context and returned. If no entity is found, then\nnull is returned.\n"
  example: []
  syntax:
    content: public virtual Task<TEntity> FindAsync(params object[] keyValues)
    content.vb: Public Overridable Function FindAsync(ParamArray keyValues As Object()) As Task(Of TEntity)
    parameters:
    - id: keyValues
      type: System.Object[]
      description: The values of the primary key for the entity to be found.
    return:
      type: System.Threading.Tasks.Task{{TEntity}}
      description: The entity found, or null.
  overload: Microsoft.EntityFrameworkCore.DbSet`1.FindAsync*
  nameWithType.vb: DbSet(Of TEntity).FindAsync(Object())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).FindAsync(System.Object())
  name.vb: FindAsync(Object())
- uid: Microsoft.EntityFrameworkCore.DbSet`1.FindAsync(System.Object[],System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbSet`1.FindAsync(System.Object[],System.Threading.CancellationToken)
  id: FindAsync(System.Object[],System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.DbSet`1
  langs:
  - csharp
  - vb
  name: FindAsync(Object[], CancellationToken)
  nameWithType: DbSet<TEntity>.FindAsync(Object[], CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.FindAsync(System.Object[], System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: FindAsync
    path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
    startLine: 107
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore
  summary: "\nFinds an entity with the given primary key values. If an entity with the given primary key values\nis being tracked by the context, then it is returned immediately without making a request to the\ndatabase. Otherwise, a query is made to the dataabse for an entity with the given primary key values\nand this entity, if found, is attached to the context and returned. If no entity is found, then\nnull is returned.\n"
  example: []
  syntax:
    content: public virtual Task<TEntity> FindAsync(object[] keyValues, CancellationToken cancellationToken)
    content.vb: Public Overridable Function FindAsync(keyValues As Object(), cancellationToken As CancellationToken) As Task(Of TEntity)
    parameters:
    - id: keyValues
      type: System.Object[]
      description: The values of the primary key for the entity to be found.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for the task to complete.
    return:
      type: System.Threading.Tasks.Task{{TEntity}}
      description: The entity found, or null.
  overload: Microsoft.EntityFrameworkCore.DbSet`1.FindAsync*
  nameWithType.vb: DbSet(Of TEntity).FindAsync(Object(), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).FindAsync(System.Object(), System.Threading.CancellationToken)
  name.vb: FindAsync(Object(), CancellationToken)
- uid: Microsoft.EntityFrameworkCore.DbSet`1.Add(`0)
  commentId: M:Microsoft.EntityFrameworkCore.DbSet`1.Add(`0)
  id: Add(`0)
  parent: Microsoft.EntityFrameworkCore.DbSet`1
  langs:
  - csharp
  - vb
  name: Add(TEntity)
  nameWithType: DbSet<TEntity>.Add(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.Add(TEntity)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Add
    path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
    startLine: 122
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore
  summary: "\nBegins tracking the given entity, and any other reachable entities that are\nnot already being tracked, in the <xref href=\"Microsoft.EntityFrameworkCore.EntityState.Added\" data-throw-if-not-resolved=\"false\"></xref> state such that they will\nbe inserted into the database when <xref href=\"Microsoft.EntityFrameworkCore.DbContext.SaveChanges\" data-throw-if-not-resolved=\"false\"></xref> is called.\n"
  example: []
  syntax:
    content: public virtual EntityEntry<TEntity> Add(TEntity entity)
    content.vb: Public Overridable Function Add(entity As TEntity) As EntityEntry(Of TEntity)
    parameters:
    - id: entity
      type: '{TEntity}'
      description: 'The entity to add. '
    return:
      type: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry{{TEntity}}
      description: "\nThe <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry%601\" data-throw-if-not-resolved=\"false\"></xref> for the entity. The entry provides\naccess to change tracking information and operations for the entity.\n"
  overload: Microsoft.EntityFrameworkCore.DbSet`1.Add*
  nameWithType.vb: DbSet(Of TEntity).Add(TEntity)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).Add(TEntity)
- uid: Microsoft.EntityFrameworkCore.DbSet`1.AddAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbSet`1.AddAsync(`0,System.Threading.CancellationToken)
  id: AddAsync(`0,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.DbSet`1
  langs:
  - csharp
  - vb
  name: AddAsync(TEntity, CancellationToken)
  nameWithType: DbSet<TEntity>.AddAsync(TEntity, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.AddAsync(TEntity, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AddAsync
    path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
    startLine: 146
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore
  summary: "\n<p>\n    Begins tracking the given entity, and any other reachable entities that are\n    not already being tracked, in the <xref href=\"Microsoft.EntityFrameworkCore.EntityState.Added\" data-throw-if-not-resolved=\"false\"></xref> state such that they will\n    be inserted into the database when <xref href=\"Microsoft.EntityFrameworkCore.DbContext.SaveChanges\" data-throw-if-not-resolved=\"false\"></xref> is called.\n</p>\n<p>\n    This method is async only to allow special value generators, such as the one used by\n    'Microsoft.EntityFrameworkCore.Metadata.SqlServerValueGenerationStrategy.SequenceHiLo',\n    to access the database asynchronously. For all other cases the non async method should be used.\n</p>\n"
  example: []
  syntax:
    content: public virtual Task<EntityEntry<TEntity>> AddAsync(TEntity entity, CancellationToken cancellationToken = null)
    content.vb: Public Overridable Function AddAsync(entity As TEntity, cancellationToken As CancellationToken = Nothing) As Task(Of EntityEntry(Of TEntity))
    parameters:
    - id: entity
      type: '{TEntity}'
      description: 'The entity to add. '
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for the task to complete.
    return:
      type: System.Threading.Tasks.Task{Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry{{TEntity}}}
      description: "\nA task that represents the asynchronous Add operation. The task result contains the\n<xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry%601\" data-throw-if-not-resolved=\"false\"></xref> for the entity. The entry provides access to change tracking\ninformation and operations for the entity.\n"
  overload: Microsoft.EntityFrameworkCore.DbSet`1.AddAsync*
  nameWithType.vb: DbSet(Of TEntity).AddAsync(TEntity, CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).AddAsync(TEntity, System.Threading.CancellationToken)
- uid: Microsoft.EntityFrameworkCore.DbSet`1.Attach(`0)
  commentId: M:Microsoft.EntityFrameworkCore.DbSet`1.Attach(`0)
  id: Attach(`0)
  parent: Microsoft.EntityFrameworkCore.DbSet`1
  langs:
  - csharp
  - vb
  name: Attach(TEntity)
  nameWithType: DbSet<TEntity>.Attach(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.Attach(TEntity)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Attach
    path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
    startLine: 174
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore
  summary: "\n<p>\n    Begins tracking the given entity in the <xref href=\"Microsoft.EntityFrameworkCore.EntityState.Unchanged\" data-throw-if-not-resolved=\"false\"></xref> state \n    such that no operation will be performed when <xref href=\"Microsoft.EntityFrameworkCore.DbContext.SaveChanges\" data-throw-if-not-resolved=\"false\"></xref> \n    is called.\n</p>\n<p>\n    A recursive search of the navigation properties will be performed to find reachable entities\n    that are not already being tracked by the context. These entities will also begin to be tracked \n    by the context. If a reachable entity has its primary key value set\n    then it will be tracked in the <xref href=\"Microsoft.EntityFrameworkCore.EntityState.Unchanged\" data-throw-if-not-resolved=\"false\"></xref> state. If the primary key\n    value is not set then it will be tracked in the <xref href=\"Microsoft.EntityFrameworkCore.EntityState.Added\" data-throw-if-not-resolved=\"false\"></xref> state. \n    An entity is considered to have its primary key value set if the primary key property is set \n    to anything other than the CLR default for the property type.\n</p>\n"
  example: []
  syntax:
    content: public virtual EntityEntry<TEntity> Attach(TEntity entity)
    content.vb: Public Overridable Function Attach(entity As TEntity) As EntityEntry(Of TEntity)
    parameters:
    - id: entity
      type: '{TEntity}'
      description: 'The entity to attach. '
    return:
      type: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry{{TEntity}}
      description: "\nThe <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry\" data-throw-if-not-resolved=\"false\"></xref> for the entity. The entry provides\naccess to change tracking information and operations for the entity.\n"
  overload: Microsoft.EntityFrameworkCore.DbSet`1.Attach*
  nameWithType.vb: DbSet(Of TEntity).Attach(TEntity)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).Attach(TEntity)
- uid: Microsoft.EntityFrameworkCore.DbSet`1.Remove(`0)
  commentId: M:Microsoft.EntityFrameworkCore.DbSet`1.Remove(`0)
  id: Remove(`0)
  parent: Microsoft.EntityFrameworkCore.DbSet`1
  langs:
  - csharp
  - vb
  name: Remove(TEntity)
  nameWithType: DbSet<TEntity>.Remove(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.Remove(TEntity)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Remove
    path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
    startLine: 200
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore
  summary: "\nBegins tracking the given entity in the <xref href=\"Microsoft.EntityFrameworkCore.EntityState.Deleted\" data-throw-if-not-resolved=\"false\"></xref> state such that it will\nbe removed from the database when <xref href=\"Microsoft.EntityFrameworkCore.DbContext.SaveChanges\" data-throw-if-not-resolved=\"false\"></xref> is called.\n"
  remarks: "\n<p>\n    If the entity is already tracked in the <xref href=\"Microsoft.EntityFrameworkCore.EntityState.Added\" data-throw-if-not-resolved=\"false\"></xref> state then the context will\n    stop tracking the entity (rather than marking it as <xref href=\"Microsoft.EntityFrameworkCore.EntityState.Deleted\" data-throw-if-not-resolved=\"false\"></xref>) since the\n    entity was previously added to the context and does not exist in the database.\n</p>\n<p>\n    Any other reachable entities that are not already being tracked will be tracked in the same way that\n    they would be if <xref href=\"Microsoft.EntityFrameworkCore.DbSet%601.Attach(%600)\" data-throw-if-not-resolved=\"false\"></xref> was called before calling this method.\n    This allows any cascading actions to be applied when <xref href=\"Microsoft.EntityFrameworkCore.DbContext.SaveChanges\" data-throw-if-not-resolved=\"false\"></xref> is called.\n</p>\n"
  example: []
  syntax:
    content: public virtual EntityEntry<TEntity> Remove(TEntity entity)
    content.vb: Public Overridable Function Remove(entity As TEntity) As EntityEntry(Of TEntity)
    parameters:
    - id: entity
      type: '{TEntity}'
      description: 'The entity to remove. '
    return:
      type: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry{{TEntity}}
      description: "\nThe <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry%601\" data-throw-if-not-resolved=\"false\"></xref> for the entity. The entry provides\naccess to change tracking information and operations for the entity.\n"
  overload: Microsoft.EntityFrameworkCore.DbSet`1.Remove*
  nameWithType.vb: DbSet(Of TEntity).Remove(TEntity)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).Remove(TEntity)
- uid: Microsoft.EntityFrameworkCore.DbSet`1.Update(`0)
  commentId: M:Microsoft.EntityFrameworkCore.DbSet`1.Update(`0)
  id: Update(`0)
  parent: Microsoft.EntityFrameworkCore.DbSet`1
  langs:
  - csharp
  - vb
  name: Update(TEntity)
  nameWithType: DbSet<TEntity>.Update(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.Update(TEntity)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Update
    path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
    startLine: 230
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore
  summary: "\n<p>\n    Begins tracking the given entity in the <xref href=\"Microsoft.EntityFrameworkCore.EntityState.Modified\" data-throw-if-not-resolved=\"false\"></xref> state such that it will\n    be updated in the database when <xref href=\"Microsoft.EntityFrameworkCore.DbContext.SaveChanges\" data-throw-if-not-resolved=\"false\"></xref> is called.\n</p>\n<p>\n    All properties of the entity will be marked as modified. To mark only some properties as modified, use\n<xref href=\"Microsoft.EntityFrameworkCore.DbSet%601.Attach(%600)\" data-throw-if-not-resolved=\"false\"></xref> to begin tracking the entity in the <xref href=\"Microsoft.EntityFrameworkCore.EntityState.Unchanged\" data-throw-if-not-resolved=\"false\"></xref>\nstate and then use the returned <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry\" data-throw-if-not-resolved=\"false\"></xref> to mark the desired properties as modified.\n</p>\n<p>\n    A recursive search of the navigation properties will be performed to find reachable entities\n    that are not already being tracked by the context. These entities will also begin to be tracked \n    by the context. If a reachable entity has its primary key value set\n    then it will be tracked in the <xref href=\"Microsoft.EntityFrameworkCore.EntityState.Modified\" data-throw-if-not-resolved=\"false\"></xref> state. If the primary key\n    value is not set then it will be tracked in the <xref href=\"Microsoft.EntityFrameworkCore.EntityState.Added\" data-throw-if-not-resolved=\"false\"></xref> state. \n    An entity is considered to have its primary key value set if the primary key property is set \n    to anything other than the CLR default for the property type.\n</p>\n"
  example: []
  syntax:
    content: public virtual EntityEntry<TEntity> Update(TEntity entity)
    content.vb: Public Overridable Function Update(entity As TEntity) As EntityEntry(Of TEntity)
    parameters:
    - id: entity
      type: '{TEntity}'
      description: 'The entity to update. '
    return:
      type: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry{{TEntity}}
      description: "\nThe <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry\" data-throw-if-not-resolved=\"false\"></xref> for the entity. The entry provides\naccess to change tracking information and operations for the entity.\n"
  overload: Microsoft.EntityFrameworkCore.DbSet`1.Update*
  nameWithType.vb: DbSet(Of TEntity).Update(TEntity)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).Update(TEntity)
- uid: Microsoft.EntityFrameworkCore.DbSet`1.AddRange(`0[])
  commentId: M:Microsoft.EntityFrameworkCore.DbSet`1.AddRange(`0[])
  id: AddRange(`0[])
  parent: Microsoft.EntityFrameworkCore.DbSet`1
  langs:
  - csharp
  - vb
  name: AddRange(TEntity[])
  nameWithType: DbSet<TEntity>.AddRange(TEntity[])
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.AddRange(TEntity[])
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AddRange
    path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
    startLine: 241
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore
  summary: "\nBegins tracking the given entities, and any other reachable entities that are\nnot already being tracked, in the <xref href=\"Microsoft.EntityFrameworkCore.EntityState.Added\" data-throw-if-not-resolved=\"false\"></xref> state such that they will\nbe inserted into the database when <xref href=\"Microsoft.EntityFrameworkCore.DbContext.SaveChanges\" data-throw-if-not-resolved=\"false\"></xref> is called.\n"
  example: []
  syntax:
    content: public virtual void AddRange(params TEntity[] entities)
    content.vb: Public Overridable Sub AddRange(ParamArray entities As TEntity())
    parameters:
    - id: entities
      type: '{TEntity}[]'
      description: 'The entities to add. '
  overload: Microsoft.EntityFrameworkCore.DbSet`1.AddRange*
  nameWithType.vb: DbSet(Of TEntity).AddRange(TEntity())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).AddRange(TEntity())
  name.vb: AddRange(TEntity())
- uid: Microsoft.EntityFrameworkCore.DbSet`1.AddRangeAsync(`0[])
  commentId: M:Microsoft.EntityFrameworkCore.DbSet`1.AddRangeAsync(`0[])
  id: AddRangeAsync(`0[])
  parent: Microsoft.EntityFrameworkCore.DbSet`1
  langs:
  - csharp
  - vb
  name: AddRangeAsync(TEntity[])
  nameWithType: DbSet<TEntity>.AddRangeAsync(TEntity[])
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.AddRangeAsync(TEntity[])
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AddRangeAsync
    path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
    startLine: 260
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore
  summary: "\n<p>\n    Begins tracking the given entities, and any other reachable entities that are\n    not already being tracked, in the <xref href=\"Microsoft.EntityFrameworkCore.EntityState.Added\" data-throw-if-not-resolved=\"false\"></xref> state such that they will\n    be inserted into the database when <xref href=\"Microsoft.EntityFrameworkCore.DbContext.SaveChanges\" data-throw-if-not-resolved=\"false\"></xref> is called.\n</p>\n<p>\n    This method is async only to allow special value generators, such as the one used by\n    'Microsoft.EntityFrameworkCore.Metadata.SqlServerValueGenerationStrategy.SequenceHiLo',\n    to access the database asynchronously. For all other cases the non async method should be used.\n</p>\n"
  example: []
  syntax:
    content: public virtual Task AddRangeAsync(params TEntity[] entities)
    content.vb: Public Overridable Function AddRangeAsync(ParamArray entities As TEntity()) As Task
    parameters:
    - id: entities
      type: '{TEntity}[]'
      description: 'The entities to add. '
    return:
      type: System.Threading.Tasks.Task
      description: 'A task that represents the asynchronous operation. '
  overload: Microsoft.EntityFrameworkCore.DbSet`1.AddRangeAsync*
  nameWithType.vb: DbSet(Of TEntity).AddRangeAsync(TEntity())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).AddRangeAsync(TEntity())
  name.vb: AddRangeAsync(TEntity())
- uid: Microsoft.EntityFrameworkCore.DbSet`1.AttachRange(`0[])
  commentId: M:Microsoft.EntityFrameworkCore.DbSet`1.AttachRange(`0[])
  id: AttachRange(`0[])
  parent: Microsoft.EntityFrameworkCore.DbSet`1
  langs:
  - csharp
  - vb
  name: AttachRange(TEntity[])
  nameWithType: DbSet<TEntity>.AttachRange(TEntity[])
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.AttachRange(TEntity[])
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AttachRange
    path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
    startLine: 282
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore
  summary: "\n<p>\n    Begins tracking the given entities in the <xref href=\"Microsoft.EntityFrameworkCore.EntityState.Unchanged\" data-throw-if-not-resolved=\"false\"></xref> state \n    such that no operation will be performed when <xref href=\"Microsoft.EntityFrameworkCore.DbContext.SaveChanges\" data-throw-if-not-resolved=\"false\"></xref> \n    is called.\n</p>\n<p>\n    A recursive search of the navigation properties will be performed to find reachable entities\n    that are not already being tracked by the context. These entities will also begin to be tracked \n    by the context. If a reachable entity has its primary key value set\n    then it will be tracked in the <xref href=\"Microsoft.EntityFrameworkCore.EntityState.Unchanged\" data-throw-if-not-resolved=\"false\"></xref> state. If the primary key\n    value is not set then it will be tracked in the <xref href=\"Microsoft.EntityFrameworkCore.EntityState.Added\" data-throw-if-not-resolved=\"false\"></xref> state. \n    An entity is considered to have its primary key value set if the primary key property is set \n    to anything other than the CLR default for the property type.\n</p>\n"
  example: []
  syntax:
    content: public virtual void AttachRange(params TEntity[] entities)
    content.vb: Public Overridable Sub AttachRange(ParamArray entities As TEntity())
    parameters:
    - id: entities
      type: '{TEntity}[]'
      description: 'The entities to attach. '
  overload: Microsoft.EntityFrameworkCore.DbSet`1.AttachRange*
  nameWithType.vb: DbSet(Of TEntity).AttachRange(TEntity())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).AttachRange(TEntity())
  name.vb: AttachRange(TEntity())
- uid: Microsoft.EntityFrameworkCore.DbSet`1.RemoveRange(`0[])
  commentId: M:Microsoft.EntityFrameworkCore.DbSet`1.RemoveRange(`0[])
  id: RemoveRange(`0[])
  parent: Microsoft.EntityFrameworkCore.DbSet`1
  langs:
  - csharp
  - vb
  name: RemoveRange(TEntity[])
  nameWithType: DbSet<TEntity>.RemoveRange(TEntity[])
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.RemoveRange(TEntity[])
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: RemoveRange
    path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
    startLine: 304
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore
  summary: "\nBegins tracking the given entity in the <xref href=\"Microsoft.EntityFrameworkCore.EntityState.Deleted\" data-throw-if-not-resolved=\"false\"></xref> state such that it will\nbe removed from the database when <xref href=\"Microsoft.EntityFrameworkCore.DbContext.SaveChanges\" data-throw-if-not-resolved=\"false\"></xref> is called.\n"
  remarks: "\n<p>\n    If any of the entities are already tracked in the <xref href=\"Microsoft.EntityFrameworkCore.EntityState.Added\" data-throw-if-not-resolved=\"false\"></xref> state then the context will\n    stop tracking those entities (rather than marking them as <xref href=\"Microsoft.EntityFrameworkCore.EntityState.Deleted\" data-throw-if-not-resolved=\"false\"></xref>) since those\n    entities were previously added to the context and do not exist in the database.\n</p>\n<p>\n    Any other reachable entities that are not already being tracked will be tracked in the same way that\n    they would be if <xref href=\"Microsoft.EntityFrameworkCore.DbSet%601.AttachRange(%600%5b%5d)\" data-throw-if-not-resolved=\"false\"></xref> was called before calling this method.\n    This allows any cascading actions to be applied when <xref href=\"Microsoft.EntityFrameworkCore.DbContext.SaveChanges\" data-throw-if-not-resolved=\"false\"></xref> is called.\n</p>\n"
  example: []
  syntax:
    content: public virtual void RemoveRange(params TEntity[] entities)
    content.vb: Public Overridable Sub RemoveRange(ParamArray entities As TEntity())
    parameters:
    - id: entities
      type: '{TEntity}[]'
      description: 'The entities to remove. '
  overload: Microsoft.EntityFrameworkCore.DbSet`1.RemoveRange*
  nameWithType.vb: DbSet(Of TEntity).RemoveRange(TEntity())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).RemoveRange(TEntity())
  name.vb: RemoveRange(TEntity())
- uid: Microsoft.EntityFrameworkCore.DbSet`1.UpdateRange(`0[])
  commentId: M:Microsoft.EntityFrameworkCore.DbSet`1.UpdateRange(`0[])
  id: UpdateRange(`0[])
  parent: Microsoft.EntityFrameworkCore.DbSet`1
  langs:
  - csharp
  - vb
  name: UpdateRange(TEntity[])
  nameWithType: DbSet<TEntity>.UpdateRange(TEntity[])
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.UpdateRange(TEntity[])
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: UpdateRange
    path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
    startLine: 330
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore
  summary: "\n<p>\n    Begins tracking the given entities in the <xref href=\"Microsoft.EntityFrameworkCore.EntityState.Modified\" data-throw-if-not-resolved=\"false\"></xref> state such that they will\n    be updated in the database when <xref href=\"Microsoft.EntityFrameworkCore.DbContext.SaveChanges\" data-throw-if-not-resolved=\"false\"></xref> is called.\n</p>\n<p>\n    All properties of each entity will be marked as modified. To mark only some properties as modified, use\n<xref href=\"Microsoft.EntityFrameworkCore.DbSet%601.Attach(%600)\" data-throw-if-not-resolved=\"false\"></xref> to begin tracking each entity in the <xref href=\"Microsoft.EntityFrameworkCore.EntityState.Unchanged\" data-throw-if-not-resolved=\"false\"></xref>\nstate and then use the returned <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry\" data-throw-if-not-resolved=\"false\"></xref> to mark the desired properties as modified.\n</p>\n<p>\n    A recursive search of the navigation properties will be performed to find reachable entities\n    that are not already being tracked by the context. These entities will also begin to be tracked \n    by the context. If a reachable entity has its primary key value set\n    then it will be tracked in the <xref href=\"Microsoft.EntityFrameworkCore.EntityState.Modified\" data-throw-if-not-resolved=\"false\"></xref> state. If the primary key\n    value is not set then it will be tracked in the <xref href=\"Microsoft.EntityFrameworkCore.EntityState.Added\" data-throw-if-not-resolved=\"false\"></xref> state. \n    An entity is considered to have its primary key value set if the primary key property is set \n    to anything other than the CLR default for the property type.\n</p>\n"
  example: []
  syntax:
    content: public virtual void UpdateRange(params TEntity[] entities)
    content.vb: Public Overridable Sub UpdateRange(ParamArray entities As TEntity())
    parameters:
    - id: entities
      type: '{TEntity}[]'
      description: 'The entities to update. '
  overload: Microsoft.EntityFrameworkCore.DbSet`1.UpdateRange*
  nameWithType.vb: DbSet(Of TEntity).UpdateRange(TEntity())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).UpdateRange(TEntity())
  name.vb: UpdateRange(TEntity())
- uid: Microsoft.EntityFrameworkCore.DbSet`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  commentId: M:Microsoft.EntityFrameworkCore.DbSet`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  id: AddRange(System.Collections.Generic.IEnumerable{`0})
  parent: Microsoft.EntityFrameworkCore.DbSet`1
  langs:
  - csharp
  - vb
  name: AddRange(IEnumerable<TEntity>)
  nameWithType: DbSet<TEntity>.AddRange(IEnumerable<TEntity>)
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.AddRange(System.Collections.Generic.IEnumerable<TEntity>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AddRange
    path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
    startLine: 341
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore
  summary: "\nBegins tracking the given entities, and any other reachable entities that are\nnot already being tracked, in the <xref href=\"Microsoft.EntityFrameworkCore.EntityState.Added\" data-throw-if-not-resolved=\"false\"></xref> state such that they will\nbe inserted into the database when <xref href=\"Microsoft.EntityFrameworkCore.DbContext.SaveChanges\" data-throw-if-not-resolved=\"false\"></xref> is called.\n"
  example: []
  syntax:
    content: public virtual void AddRange(IEnumerable<TEntity> entities)
    content.vb: Public Overridable Sub AddRange(entities As IEnumerable(Of TEntity))
    parameters:
    - id: entities
      type: System.Collections.Generic.IEnumerable{{TEntity}}
      description: 'The entities to add. '
  overload: Microsoft.EntityFrameworkCore.DbSet`1.AddRange*
  nameWithType.vb: DbSet(Of TEntity).AddRange(IEnumerable(Of TEntity))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).AddRange(System.Collections.Generic.IEnumerable(Of TEntity))
  name.vb: AddRange(IEnumerable(Of TEntity))
- uid: Microsoft.EntityFrameworkCore.DbSet`1.AddRangeAsync(System.Collections.Generic.IEnumerable{`0},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbSet`1.AddRangeAsync(System.Collections.Generic.IEnumerable{`0},System.Threading.CancellationToken)
  id: AddRangeAsync(System.Collections.Generic.IEnumerable{`0},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.DbSet`1
  langs:
  - csharp
  - vb
  name: AddRangeAsync(IEnumerable<TEntity>, CancellationToken)
  nameWithType: DbSet<TEntity>.AddRangeAsync(IEnumerable<TEntity>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.AddRangeAsync(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AddRangeAsync
    path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
    startLine: 361
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore
  summary: "\n<p>\n    Begins tracking the given entities, and any other reachable entities that are\n    not already being tracked, in the <xref href=\"Microsoft.EntityFrameworkCore.EntityState.Added\" data-throw-if-not-resolved=\"false\"></xref> state such that they will\n    be inserted into the database when <xref href=\"Microsoft.EntityFrameworkCore.DbContext.SaveChanges\" data-throw-if-not-resolved=\"false\"></xref> is called.\n</p>\n<p>\n    This method is async only to allow special value generators, such as the one used by\n    'Microsoft.EntityFrameworkCore.Metadata.SqlServerValueGenerationStrategy.SequenceHiLo',\n    to access the database asynchronously. For all other cases the non async method should be used.\n</p>\n"
  example: []
  syntax:
    content: public virtual Task AddRangeAsync(IEnumerable<TEntity> entities, CancellationToken cancellationToken = null)
    content.vb: Public Overridable Function AddRangeAsync(entities As IEnumerable(Of TEntity), cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: entities
      type: System.Collections.Generic.IEnumerable{{TEntity}}
      description: 'The entities to add. '
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for the task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: 'A task that represents the asynchronous operation. '
  overload: Microsoft.EntityFrameworkCore.DbSet`1.AddRangeAsync*
  nameWithType.vb: DbSet(Of TEntity).AddRangeAsync(IEnumerable(Of TEntity), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).AddRangeAsync(System.Collections.Generic.IEnumerable(Of TEntity), System.Threading.CancellationToken)
  name.vb: AddRangeAsync(IEnumerable(Of TEntity), CancellationToken)
- uid: Microsoft.EntityFrameworkCore.DbSet`1.AttachRange(System.Collections.Generic.IEnumerable{`0})
  commentId: M:Microsoft.EntityFrameworkCore.DbSet`1.AttachRange(System.Collections.Generic.IEnumerable{`0})
  id: AttachRange(System.Collections.Generic.IEnumerable{`0})
  parent: Microsoft.EntityFrameworkCore.DbSet`1
  langs:
  - csharp
  - vb
  name: AttachRange(IEnumerable<TEntity>)
  nameWithType: DbSet<TEntity>.AttachRange(IEnumerable<TEntity>)
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.AttachRange(System.Collections.Generic.IEnumerable<TEntity>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AttachRange
    path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
    startLine: 385
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore
  summary: "\n<p>\n    Begins tracking the given entities in the <xref href=\"Microsoft.EntityFrameworkCore.EntityState.Unchanged\" data-throw-if-not-resolved=\"false\"></xref> state \n    such that no operation will be performed when <xref href=\"Microsoft.EntityFrameworkCore.DbContext.SaveChanges\" data-throw-if-not-resolved=\"false\"></xref> \n    is called.\n</p>\n<p>\n    A recursive search of the navigation properties will be performed to find reachable entities\n    that are not already being tracked by the context. These entities will also begin to be tracked \n    by the context. If a reachable entity has its primary key value set\n    then it will be tracked in the <xref href=\"Microsoft.EntityFrameworkCore.EntityState.Unchanged\" data-throw-if-not-resolved=\"false\"></xref> state. If the primary key\n    value is not set then it will be tracked in the <xref href=\"Microsoft.EntityFrameworkCore.EntityState.Added\" data-throw-if-not-resolved=\"false\"></xref> state. \n    An entity is considered to have its primary key value set if the primary key property is set \n    to anything other than the CLR default for the property type.\n</p>\n"
  example: []
  syntax:
    content: public virtual void AttachRange(IEnumerable<TEntity> entities)
    content.vb: Public Overridable Sub AttachRange(entities As IEnumerable(Of TEntity))
    parameters:
    - id: entities
      type: System.Collections.Generic.IEnumerable{{TEntity}}
      description: 'The entities to attach. '
  overload: Microsoft.EntityFrameworkCore.DbSet`1.AttachRange*
  nameWithType.vb: DbSet(Of TEntity).AttachRange(IEnumerable(Of TEntity))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).AttachRange(System.Collections.Generic.IEnumerable(Of TEntity))
  name.vb: AttachRange(IEnumerable(Of TEntity))
- uid: Microsoft.EntityFrameworkCore.DbSet`1.RemoveRange(System.Collections.Generic.IEnumerable{`0})
  commentId: M:Microsoft.EntityFrameworkCore.DbSet`1.RemoveRange(System.Collections.Generic.IEnumerable{`0})
  id: RemoveRange(System.Collections.Generic.IEnumerable{`0})
  parent: Microsoft.EntityFrameworkCore.DbSet`1
  langs:
  - csharp
  - vb
  name: RemoveRange(IEnumerable<TEntity>)
  nameWithType: DbSet<TEntity>.RemoveRange(IEnumerable<TEntity>)
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.RemoveRange(System.Collections.Generic.IEnumerable<TEntity>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: RemoveRange
    path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
    startLine: 407
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore
  summary: "\nBegins tracking the given entity in the <xref href=\"Microsoft.EntityFrameworkCore.EntityState.Deleted\" data-throw-if-not-resolved=\"false\"></xref> state such that it will\nbe removed from the database when <xref href=\"Microsoft.EntityFrameworkCore.DbContext.SaveChanges\" data-throw-if-not-resolved=\"false\"></xref> is called.\n"
  remarks: "\n<p>\n    If any of the entities are already tracked in the <xref href=\"Microsoft.EntityFrameworkCore.EntityState.Added\" data-throw-if-not-resolved=\"false\"></xref> state then the context will\n    stop tracking those entities (rather than marking them as <xref href=\"Microsoft.EntityFrameworkCore.EntityState.Deleted\" data-throw-if-not-resolved=\"false\"></xref>) since those\n    entities were previously added to the context and do not exist in the database.\n</p>\n<p>\n    Any other reachable entities that are not already being tracked will be tracked in the same way that\n    they would be if <xref href=\"Microsoft.EntityFrameworkCore.DbSet%601.AttachRange(System.Collections.Generic.IEnumerable%7b%600%7d)\" data-throw-if-not-resolved=\"false\"></xref> was called before calling this method.\n    This allows any cascading actions to be applied when <xref href=\"Microsoft.EntityFrameworkCore.DbContext.SaveChanges\" data-throw-if-not-resolved=\"false\"></xref> is called.\n</p>\n"
  example: []
  syntax:
    content: public virtual void RemoveRange(IEnumerable<TEntity> entities)
    content.vb: Public Overridable Sub RemoveRange(entities As IEnumerable(Of TEntity))
    parameters:
    - id: entities
      type: System.Collections.Generic.IEnumerable{{TEntity}}
      description: 'The entities to remove. '
  overload: Microsoft.EntityFrameworkCore.DbSet`1.RemoveRange*
  nameWithType.vb: DbSet(Of TEntity).RemoveRange(IEnumerable(Of TEntity))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).RemoveRange(System.Collections.Generic.IEnumerable(Of TEntity))
  name.vb: RemoveRange(IEnumerable(Of TEntity))
- uid: Microsoft.EntityFrameworkCore.DbSet`1.UpdateRange(System.Collections.Generic.IEnumerable{`0})
  commentId: M:Microsoft.EntityFrameworkCore.DbSet`1.UpdateRange(System.Collections.Generic.IEnumerable{`0})
  id: UpdateRange(System.Collections.Generic.IEnumerable{`0})
  parent: Microsoft.EntityFrameworkCore.DbSet`1
  langs:
  - csharp
  - vb
  name: UpdateRange(IEnumerable<TEntity>)
  nameWithType: DbSet<TEntity>.UpdateRange(IEnumerable<TEntity>)
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.UpdateRange(System.Collections.Generic.IEnumerable<TEntity>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: UpdateRange
    path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
    startLine: 433
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore
  summary: "\n<p>\n    Begins tracking the given entities in the <xref href=\"Microsoft.EntityFrameworkCore.EntityState.Modified\" data-throw-if-not-resolved=\"false\"></xref> state such that they will\n    be updated in the database when <xref href=\"Microsoft.EntityFrameworkCore.DbContext.SaveChanges\" data-throw-if-not-resolved=\"false\"></xref> is called.\n</p>\n<p>\n    All properties of each entity will be marked as modified. To mark only some properties as modified, use\n<xref href=\"Microsoft.EntityFrameworkCore.DbSet%601.Attach(%600)\" data-throw-if-not-resolved=\"false\"></xref> to begin tracking each entity in the <xref href=\"Microsoft.EntityFrameworkCore.EntityState.Unchanged\" data-throw-if-not-resolved=\"false\"></xref>\nstate and then use the returned <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry\" data-throw-if-not-resolved=\"false\"></xref> to mark the desired properties as modified.\n</p>\n<p>\n    A recursive search of the navigation properties will be performed to find reachable entities\n    that are not already being tracked by the context. These entities will also begin to be tracked \n    by the context. If a reachable entity has its primary key value set\n    then it will be tracked in the <xref href=\"Microsoft.EntityFrameworkCore.EntityState.Modified\" data-throw-if-not-resolved=\"false\"></xref> state. If the primary key\n    value is not set then it will be tracked in the <xref href=\"Microsoft.EntityFrameworkCore.EntityState.Added\" data-throw-if-not-resolved=\"false\"></xref> state. \n    An entity is considered to have its primary key value set if the primary key property is set \n    to anything other than the CLR default for the property type.\n</p>\n"
  example: []
  syntax:
    content: public virtual void UpdateRange(IEnumerable<TEntity> entities)
    content.vb: Public Overridable Sub UpdateRange(entities As IEnumerable(Of TEntity))
    parameters:
    - id: entities
      type: System.Collections.Generic.IEnumerable{{TEntity}}
      description: 'The entities to update. '
  overload: Microsoft.EntityFrameworkCore.DbSet`1.UpdateRange*
  nameWithType.vb: DbSet(Of TEntity).UpdateRange(IEnumerable(Of TEntity))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).UpdateRange(System.Collections.Generic.IEnumerable(Of TEntity))
  name.vb: UpdateRange(IEnumerable(Of TEntity))
- uid: Microsoft.EntityFrameworkCore.DbSet`1.System#Collections#Generic#IEnumerable{TEntity}#GetEnumerator
  commentId: M:Microsoft.EntityFrameworkCore.DbSet`1.System#Collections#Generic#IEnumerable{TEntity}#GetEnumerator
  id: System#Collections#Generic#IEnumerable{TEntity}#GetEnumerator
  isEii: true
  parent: Microsoft.EntityFrameworkCore.DbSet`1
  langs:
  - csharp
  - vb
  name: IEnumerable<TEntity>.GetEnumerator()
  nameWithType: DbSet<TEntity>.IEnumerable<TEntity>.GetEnumerator()
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.System.Collections.Generic.IEnumerable<TEntity>.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: System.Collections.Generic.IEnumerable<TEntity>.GetEnumerator
    path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
    startLine: 443
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore
  summary: "\nReturns an <xref href=\"System.Collections.Generic.IEnumerator%601\" data-throw-if-not-resolved=\"false\"></xref> which when enumerated will execute a query against the database\nto load all entities from the database.\n"
  example: []
  syntax:
    content: IEnumerator<TEntity> IEnumerable<TEntity>.GetEnumerator()
    content.vb: Function System.Collections.Generic.IEnumerable<TEntity>.GetEnumerator As IEnumerator(Of TEntity) Implements IEnumerable(Of TEntity).GetEnumerator
    return:
      type: System.Collections.Generic.IEnumerator{{TEntity}}
      description: 'The query results. '
  overload: Microsoft.EntityFrameworkCore.DbSet`1.System#Collections#Generic#IEnumerable{TEntity}#GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{{TEntity}}.GetEnumerator
  nameWithType.vb: DbSet(Of TEntity).System.Collections.Generic.IEnumerable<TEntity>.GetEnumerator()
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).System.Collections.Generic.IEnumerable<TEntity>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<TEntity>.GetEnumerator()
- uid: Microsoft.EntityFrameworkCore.DbSet`1.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Microsoft.EntityFrameworkCore.DbSet`1.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: Microsoft.EntityFrameworkCore.DbSet`1
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: DbSet<TEntity>.IEnumerable.GetEnumerator()
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: System.Collections.IEnumerable.GetEnumerator
    path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
    startLine: 453
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore
  summary: "\nReturns an <xref href=\"System.Collections.IEnumerator\" data-throw-if-not-resolved=\"false\"></xref> which when enumerated will execute a query against the database\nto load all entities from the database.\n"
  example: []
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
    return:
      type: System.Collections.IEnumerator
      description: 'The query results. '
  overload: Microsoft.EntityFrameworkCore.DbSet`1.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: DbSet(Of TEntity).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
- uid: Microsoft.EntityFrameworkCore.DbSet`1.Microsoft#EntityFrameworkCore#Query#Internal#IAsyncEnumerableAccessor{TEntity}#AsyncEnumerable
  commentId: P:Microsoft.EntityFrameworkCore.DbSet`1.Microsoft#EntityFrameworkCore#Query#Internal#IAsyncEnumerableAccessor{TEntity}#AsyncEnumerable
  id: Microsoft#EntityFrameworkCore#Query#Internal#IAsyncEnumerableAccessor{TEntity}#AsyncEnumerable
  isEii: true
  parent: Microsoft.EntityFrameworkCore.DbSet`1
  langs:
  - csharp
  - vb
  name: IAsyncEnumerableAccessor<TEntity>.AsyncEnumerable
  nameWithType: DbSet<TEntity>.IAsyncEnumerableAccessor<TEntity>.AsyncEnumerable
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor<TEntity>.AsyncEnumerable
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor<TEntity>.AsyncEnumerable
    path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
    startLine: 463
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore
  summary: "\nReturns an <see cref=\"!:IAsyncEnumerable&lt;T&gt;\"></see> which when enumerated will asynchronously execute the query against\nthe database.\n"
  example: []
  syntax:
    content: IAsyncEnumerable<TEntity> IAsyncEnumerableAccessor<TEntity>.AsyncEnumerable { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor<TEntity>.AsyncEnumerable As IAsyncEnumerable(Of TEntity) Implements IAsyncEnumerableAccessor(Of TEntity).AsyncEnumerable
    parameters: []
    return:
      type: IAsyncEnumerable{{TEntity}}
      description: 'The query results. '
  overload: Microsoft.EntityFrameworkCore.DbSet`1.Microsoft#EntityFrameworkCore#Query#Internal#IAsyncEnumerableAccessor{TEntity}#AsyncEnumerable*
  implements:
  - Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor{{TEntity}}.AsyncEnumerable
  nameWithType.vb: DbSet(Of TEntity).Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor<TEntity>.AsyncEnumerable
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor<TEntity>.AsyncEnumerable
  name.vb: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor<TEntity>.AsyncEnumerable
- uid: Microsoft.EntityFrameworkCore.DbSet`1.System#Linq#IQueryable#ElementType
  commentId: P:Microsoft.EntityFrameworkCore.DbSet`1.System#Linq#IQueryable#ElementType
  id: System#Linq#IQueryable#ElementType
  isEii: true
  parent: Microsoft.EntityFrameworkCore.DbSet`1
  langs:
  - csharp
  - vb
  name: IQueryable.ElementType
  nameWithType: DbSet<TEntity>.IQueryable.ElementType
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.System.Linq.IQueryable.ElementType
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: System.Linq.IQueryable.ElementType
    path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
    startLine: 471
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore
  summary: "\nGets the IQueryable element type.\n"
  example: []
  syntax:
    content: Type IQueryable.ElementType { get; }
    content.vb: ReadOnly WriteOnly Property System.Linq.IQueryable.ElementType As Type Implements IQueryable.ElementType
    parameters: []
    return:
      type: System.Type
  overload: Microsoft.EntityFrameworkCore.DbSet`1.System#Linq#IQueryable#ElementType*
  implements:
  - System.Linq.IQueryable.ElementType
  nameWithType.vb: DbSet(Of TEntity).System.Linq.IQueryable.ElementType
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).System.Linq.IQueryable.ElementType
  name.vb: System.Linq.IQueryable.ElementType
- uid: Microsoft.EntityFrameworkCore.DbSet`1.System#Linq#IQueryable#Expression
  commentId: P:Microsoft.EntityFrameworkCore.DbSet`1.System#Linq#IQueryable#Expression
  id: System#Linq#IQueryable#Expression
  isEii: true
  parent: Microsoft.EntityFrameworkCore.DbSet`1
  langs:
  - csharp
  - vb
  name: IQueryable.Expression
  nameWithType: DbSet<TEntity>.IQueryable.Expression
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.System.Linq.IQueryable.Expression
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: System.Linq.IQueryable.Expression
    path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
    startLine: 479
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore
  summary: "\nGets the IQueryable LINQ Expression.\n"
  example: []
  syntax:
    content: Expression IQueryable.Expression { get; }
    content.vb: ReadOnly WriteOnly Property System.Linq.IQueryable.Expression As Expression Implements IQueryable.Expression
    parameters: []
    return:
      type: System.Linq.Expressions.Expression
  overload: Microsoft.EntityFrameworkCore.DbSet`1.System#Linq#IQueryable#Expression*
  implements:
  - System.Linq.IQueryable.Expression
  nameWithType.vb: DbSet(Of TEntity).System.Linq.IQueryable.Expression
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).System.Linq.IQueryable.Expression
  name.vb: System.Linq.IQueryable.Expression
- uid: Microsoft.EntityFrameworkCore.DbSet`1.System#Linq#IQueryable#Provider
  commentId: P:Microsoft.EntityFrameworkCore.DbSet`1.System#Linq#IQueryable#Provider
  id: System#Linq#IQueryable#Provider
  isEii: true
  parent: Microsoft.EntityFrameworkCore.DbSet`1
  langs:
  - csharp
  - vb
  name: IQueryable.Provider
  nameWithType: DbSet<TEntity>.IQueryable.Provider
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.System.Linq.IQueryable.Provider
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: System.Linq.IQueryable.Provider
    path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
    startLine: 487
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore
  summary: "\nGets the IQueryable provider.\n"
  example: []
  syntax:
    content: IQueryProvider IQueryable.Provider { get; }
    content.vb: ReadOnly WriteOnly Property System.Linq.IQueryable.Provider As IQueryProvider Implements IQueryable.Provider
    parameters: []
    return:
      type: System.Linq.IQueryProvider
  overload: Microsoft.EntityFrameworkCore.DbSet`1.System#Linq#IQueryable#Provider*
  implements:
  - System.Linq.IQueryable.Provider
  nameWithType.vb: DbSet(Of TEntity).System.Linq.IQueryable.Provider
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).System.Linq.IQueryable.Provider
  name.vb: System.Linq.IQueryable.Provider
- uid: Microsoft.EntityFrameworkCore.DbSet`1.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{System#IServiceProvider}#Instance
  commentId: P:Microsoft.EntityFrameworkCore.DbSet`1.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{System#IServiceProvider}#Instance
  id: Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{System#IServiceProvider}#Instance
  isEii: true
  parent: Microsoft.EntityFrameworkCore.DbSet`1
  langs:
  - csharp
  - vb
  name: IInfrastructure<IServiceProvider>.Instance
  nameWithType: DbSet<TEntity>.IInfrastructure<IServiceProvider>.Instance
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.Instance
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.Instance
    path: src/Microsoft.EntityFrameworkCore/DbSet`.cs
    startLine: 501
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore
  summary: "\n<p>\n    Gets the scoped <xref href=\"System.IServiceProvider\" data-throw-if-not-resolved=\"false\"></xref> being used to resolve services.\n</p>\n<p>\n    This property is intended for use by extension methods that need to make use of services\n    not directly exposed in the public API surface.\n</p>\n"
  example: []
  syntax:
    content: IServiceProvider IInfrastructure<IServiceProvider>.Instance { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.Instance As IServiceProvider Implements IInfrastructure(Of IServiceProvider).Instance
    parameters: []
    return:
      type: System.IServiceProvider
  overload: Microsoft.EntityFrameworkCore.DbSet`1.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{System#IServiceProvider}#Instance*
  implements:
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider}.Instance
  nameWithType.vb: DbSet(Of TEntity).Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.Instance
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.Instance
  name.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.Instance
references:
- uid: Microsoft.EntityFrameworkCore.DbSet`1
  commentId: T:Microsoft.EntityFrameworkCore.DbSet`1
  isExternal: false
  name: DbSet<TEntity>
  nameWithType: DbSet<TEntity>
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>
  nameWithType.vb: DbSet(Of TEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity)
  name.vb: DbSet(Of TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext
  commentId: T:Microsoft.EntityFrameworkCore.DbContext
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: DbContext
  nameWithType: DbContext
  fullName: Microsoft.EntityFrameworkCore.DbContext
- uid: Microsoft.EntityFrameworkCore.DbContext.Set``1
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Set``1
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: false
  name: Set<TEntity>()
  nameWithType: DbContext.Set<TEntity>()
  fullName: Microsoft.EntityFrameworkCore.DbContext.Set<TEntity>()
  nameWithType.vb: DbContext.Set(Of TEntity)()
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.Set(Of TEntity)()
  name.vb: Set(Of TEntity)()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Set``1
    name: Set<TEntity>
    nameWithType: DbContext.Set<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Set<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Set``1
    name: Set(Of TEntity)
    nameWithType: DbContext.Set(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Set(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: false
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Linq.IQueryable{{TEntity}}
  commentId: T:System.Linq.IQueryable{`0}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<TEntity>
  nameWithType: IQueryable<TEntity>
  fullName: System.Linq.IQueryable<TEntity>
  nameWithType.vb: IQueryable(Of TEntity)
  fullname.vb: System.Linq.IQueryable(Of TEntity)
  name.vb: IQueryable(Of TEntity)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{TEntity}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TEntity>
  nameWithType: IEnumerable<TEntity>
  fullName: System.Collections.Generic.IEnumerable<TEntity>
  nameWithType.vb: IEnumerable(Of TEntity)
  fullname.vb: System.Collections.Generic.IEnumerable(Of TEntity)
  name.vb: IEnumerable(Of TEntity)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable
  commentId: T:System.Linq.IQueryable
  parent: System.Linq
  isExternal: true
  name: IQueryable
  nameWithType: IQueryable
  fullName: System.Linq.IQueryable
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor{{TEntity}}
  commentId: T:Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor{`0}
  parent: Microsoft.EntityFrameworkCore.Query.Internal
  definition: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor`1
  name: IAsyncEnumerableAccessor<TEntity>
  nameWithType: IAsyncEnumerableAccessor<TEntity>
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor<TEntity>
  nameWithType.vb: IAsyncEnumerableAccessor(Of TEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor(Of TEntity)
  name.vb: IAsyncEnumerableAccessor(Of TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor`1
    name: IAsyncEnumerableAccessor
    nameWithType: IAsyncEnumerableAccessor
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor`1
    name: IAsyncEnumerableAccessor
    nameWithType: IAsyncEnumerableAccessor
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider}
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider}
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  definition: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  name: IInfrastructure<IServiceProvider>
  nameWithType: IInfrastructure<IServiceProvider>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>
  nameWithType.vb: IInfrastructure(Of IServiceProvider)
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of System.IServiceProvider)
  name.vb: IInfrastructure(Of IServiceProvider)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AnyAsync``1(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AnyAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AnyAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  name: AnyAsync<TEntity>(CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.AnyAsync<TEntity>(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AnyAsync<TEntity>(System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.AnyAsync(Of TEntity)(CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AnyAsync(Of TEntity)(System.Threading.CancellationToken)
  name.vb: AnyAsync(Of TEntity)(CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AnyAsync``1(System.Threading.CancellationToken)
    name: AnyAsync<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.AnyAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AnyAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AnyAsync``1(System.Threading.CancellationToken)
    name: AnyAsync(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.AnyAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AnyAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AnyAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AnyAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AnyAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  name: AnyAsync<TEntity>(Expression<Func<TEntity, Boolean>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.AnyAsync<TEntity>(Expression<Func<TEntity, Boolean>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AnyAsync<TEntity>(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.AnyAsync(Of TEntity)(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AnyAsync(Of TEntity)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Boolean)), System.Threading.CancellationToken)
  name.vb: AnyAsync(Of TEntity)(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AnyAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
    name: AnyAsync<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.AnyAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AnyAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AnyAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
    name: AnyAsync(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.AnyAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AnyAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AllAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AllAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AllAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  name: AllAsync<TEntity>(Expression<Func<TEntity, Boolean>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.AllAsync<TEntity>(Expression<Func<TEntity, Boolean>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AllAsync<TEntity>(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.AllAsync(Of TEntity)(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AllAsync(Of TEntity)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Boolean)), System.Threading.CancellationToken)
  name.vb: AllAsync(Of TEntity)(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AllAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
    name: AllAsync<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.AllAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AllAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AllAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
    name: AllAsync(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.AllAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AllAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync``1(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  name: CountAsync<TEntity>(CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.CountAsync<TEntity>(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync<TEntity>(System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.CountAsync(Of TEntity)(CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync(Of TEntity)(System.Threading.CancellationToken)
  name.vb: CountAsync(Of TEntity)(CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync``1(System.Threading.CancellationToken)
    name: CountAsync<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.CountAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync``1(System.Threading.CancellationToken)
    name: CountAsync(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.CountAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  name: CountAsync<TEntity>(Expression<Func<TEntity, Boolean>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.CountAsync<TEntity>(Expression<Func<TEntity, Boolean>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync<TEntity>(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.CountAsync(Of TEntity)(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync(Of TEntity)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Boolean)), System.Threading.CancellationToken)
  name.vb: CountAsync(Of TEntity)(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
    name: CountAsync<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.CountAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
    name: CountAsync(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.CountAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LongCountAsync``1(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LongCountAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LongCountAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  name: LongCountAsync<TEntity>(CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.LongCountAsync<TEntity>(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LongCountAsync<TEntity>(System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.LongCountAsync(Of TEntity)(CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LongCountAsync(Of TEntity)(System.Threading.CancellationToken)
  name.vb: LongCountAsync(Of TEntity)(CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LongCountAsync``1(System.Threading.CancellationToken)
    name: LongCountAsync<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.LongCountAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LongCountAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LongCountAsync``1(System.Threading.CancellationToken)
    name: LongCountAsync(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.LongCountAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LongCountAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LongCountAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LongCountAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LongCountAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  name: LongCountAsync<TEntity>(Expression<Func<TEntity, Boolean>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.LongCountAsync<TEntity>(Expression<Func<TEntity, Boolean>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LongCountAsync<TEntity>(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.LongCountAsync(Of TEntity)(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LongCountAsync(Of TEntity)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Boolean)), System.Threading.CancellationToken)
  name.vb: LongCountAsync(Of TEntity)(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LongCountAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
    name: LongCountAsync<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.LongCountAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LongCountAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LongCountAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
    name: LongCountAsync(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.LongCountAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LongCountAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstAsync``1(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  name: FirstAsync<TEntity>(CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.FirstAsync<TEntity>(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstAsync<TEntity>(System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.FirstAsync(Of TEntity)(CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstAsync(Of TEntity)(System.Threading.CancellationToken)
  name.vb: FirstAsync(Of TEntity)(CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstAsync``1(System.Threading.CancellationToken)
    name: FirstAsync<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.FirstAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstAsync``1(System.Threading.CancellationToken)
    name: FirstAsync(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.FirstAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  name: FirstAsync<TEntity>(Expression<Func<TEntity, Boolean>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.FirstAsync<TEntity>(Expression<Func<TEntity, Boolean>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstAsync<TEntity>(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.FirstAsync(Of TEntity)(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstAsync(Of TEntity)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Boolean)), System.Threading.CancellationToken)
  name.vb: FirstAsync(Of TEntity)(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
    name: FirstAsync<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.FirstAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
    name: FirstAsync(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.FirstAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstOrDefaultAsync``1(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  name: FirstOrDefaultAsync<TEntity>(CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.FirstOrDefaultAsync<TEntity>(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstOrDefaultAsync<TEntity>(System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.FirstOrDefaultAsync(Of TEntity)(CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstOrDefaultAsync(Of TEntity)(System.Threading.CancellationToken)
  name.vb: FirstOrDefaultAsync(Of TEntity)(CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstOrDefaultAsync``1(System.Threading.CancellationToken)
    name: FirstOrDefaultAsync<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.FirstOrDefaultAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstOrDefaultAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstOrDefaultAsync``1(System.Threading.CancellationToken)
    name: FirstOrDefaultAsync(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.FirstOrDefaultAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstOrDefaultAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstOrDefaultAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  name: FirstOrDefaultAsync<TEntity>(Expression<Func<TEntity, Boolean>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.FirstOrDefaultAsync<TEntity>(Expression<Func<TEntity, Boolean>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstOrDefaultAsync<TEntity>(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.FirstOrDefaultAsync(Of TEntity)(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstOrDefaultAsync(Of TEntity)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Boolean)), System.Threading.CancellationToken)
  name.vb: FirstOrDefaultAsync(Of TEntity)(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstOrDefaultAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
    name: FirstOrDefaultAsync<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.FirstOrDefaultAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstOrDefaultAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstOrDefaultAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
    name: FirstOrDefaultAsync(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.FirstOrDefaultAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstOrDefaultAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastAsync``1(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  name: LastAsync<TEntity>(CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.LastAsync<TEntity>(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastAsync<TEntity>(System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.LastAsync(Of TEntity)(CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastAsync(Of TEntity)(System.Threading.CancellationToken)
  name.vb: LastAsync(Of TEntity)(CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastAsync``1(System.Threading.CancellationToken)
    name: LastAsync<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.LastAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastAsync``1(System.Threading.CancellationToken)
    name: LastAsync(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.LastAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  name: LastAsync<TEntity>(Expression<Func<TEntity, Boolean>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.LastAsync<TEntity>(Expression<Func<TEntity, Boolean>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastAsync<TEntity>(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.LastAsync(Of TEntity)(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastAsync(Of TEntity)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Boolean)), System.Threading.CancellationToken)
  name.vb: LastAsync(Of TEntity)(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
    name: LastAsync<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.LastAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
    name: LastAsync(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.LastAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastOrDefaultAsync``1(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  name: LastOrDefaultAsync<TEntity>(CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.LastOrDefaultAsync<TEntity>(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastOrDefaultAsync<TEntity>(System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.LastOrDefaultAsync(Of TEntity)(CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastOrDefaultAsync(Of TEntity)(System.Threading.CancellationToken)
  name.vb: LastOrDefaultAsync(Of TEntity)(CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastOrDefaultAsync``1(System.Threading.CancellationToken)
    name: LastOrDefaultAsync<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.LastOrDefaultAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastOrDefaultAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastOrDefaultAsync``1(System.Threading.CancellationToken)
    name: LastOrDefaultAsync(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.LastOrDefaultAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastOrDefaultAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastOrDefaultAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  name: LastOrDefaultAsync<TEntity>(Expression<Func<TEntity, Boolean>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.LastOrDefaultAsync<TEntity>(Expression<Func<TEntity, Boolean>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastOrDefaultAsync<TEntity>(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.LastOrDefaultAsync(Of TEntity)(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastOrDefaultAsync(Of TEntity)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Boolean)), System.Threading.CancellationToken)
  name.vb: LastOrDefaultAsync(Of TEntity)(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastOrDefaultAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
    name: LastOrDefaultAsync<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.LastOrDefaultAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastOrDefaultAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastOrDefaultAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
    name: LastOrDefaultAsync(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.LastOrDefaultAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastOrDefaultAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleAsync``1(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  name: SingleAsync<TEntity>(CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.SingleAsync<TEntity>(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleAsync<TEntity>(System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.SingleAsync(Of TEntity)(CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleAsync(Of TEntity)(System.Threading.CancellationToken)
  name.vb: SingleAsync(Of TEntity)(CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleAsync``1(System.Threading.CancellationToken)
    name: SingleAsync<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.SingleAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleAsync``1(System.Threading.CancellationToken)
    name: SingleAsync(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.SingleAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  name: SingleAsync<TEntity>(Expression<Func<TEntity, Boolean>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.SingleAsync<TEntity>(Expression<Func<TEntity, Boolean>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleAsync<TEntity>(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.SingleAsync(Of TEntity)(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleAsync(Of TEntity)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Boolean)), System.Threading.CancellationToken)
  name.vb: SingleAsync(Of TEntity)(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
    name: SingleAsync<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.SingleAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
    name: SingleAsync(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.SingleAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleOrDefaultAsync``1(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  name: SingleOrDefaultAsync<TEntity>(CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.SingleOrDefaultAsync<TEntity>(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleOrDefaultAsync<TEntity>(System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.SingleOrDefaultAsync(Of TEntity)(CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleOrDefaultAsync(Of TEntity)(System.Threading.CancellationToken)
  name.vb: SingleOrDefaultAsync(Of TEntity)(CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleOrDefaultAsync``1(System.Threading.CancellationToken)
    name: SingleOrDefaultAsync<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.SingleOrDefaultAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleOrDefaultAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleOrDefaultAsync``1(System.Threading.CancellationToken)
    name: SingleOrDefaultAsync(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.SingleOrDefaultAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleOrDefaultAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleOrDefaultAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  name: SingleOrDefaultAsync<TEntity>(Expression<Func<TEntity, Boolean>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.SingleOrDefaultAsync<TEntity>(Expression<Func<TEntity, Boolean>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleOrDefaultAsync<TEntity>(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.SingleOrDefaultAsync(Of TEntity)(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleOrDefaultAsync(Of TEntity)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Boolean)), System.Threading.CancellationToken)
  name.vb: SingleOrDefaultAsync(Of TEntity)(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleOrDefaultAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
    name: SingleOrDefaultAsync<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.SingleOrDefaultAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleOrDefaultAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleOrDefaultAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
    name: SingleOrDefaultAsync(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.SingleOrDefaultAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleOrDefaultAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MinAsync``1(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MinAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MinAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  name: MinAsync<TEntity>(CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.MinAsync<TEntity>(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MinAsync<TEntity>(System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.MinAsync(Of TEntity)(CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MinAsync(Of TEntity)(System.Threading.CancellationToken)
  name.vb: MinAsync(Of TEntity)(CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MinAsync``1(System.Threading.CancellationToken)
    name: MinAsync<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.MinAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MinAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MinAsync``1(System.Threading.CancellationToken)
    name: MinAsync(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.MinAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MinAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MinAsync``2(System.Linq.Expressions.Expression{System.Func{{TEntity},{TResult}}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MinAsync``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MinAsync``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Threading.CancellationToken)
  name: MinAsync<TEntity, TResult>(Expression<Func<TEntity, TResult>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.MinAsync<TEntity, TResult>(Expression<Func<TEntity, TResult>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MinAsync<TEntity, TResult>(System.Linq.Expressions.Expression<System.Func<TEntity, TResult>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.MinAsync(Of TEntity, TResult)(Expression(Of Func(Of TEntity, TResult)), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MinAsync(Of TEntity, TResult)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, TResult)), System.Threading.CancellationToken)
  name.vb: MinAsync(Of TEntity, TResult)(Expression(Of Func(Of TEntity, TResult)), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MinAsync``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Threading.CancellationToken)
    name: MinAsync<TEntity, TResult>
    nameWithType: EntityFrameworkQueryableExtensions.MinAsync<TEntity, TResult>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MinAsync<TEntity, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MinAsync``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Threading.CancellationToken)
    name: MinAsync(Of TEntity, TResult)
    nameWithType: EntityFrameworkQueryableExtensions.MinAsync(Of TEntity, TResult)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MinAsync(Of TEntity, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MaxAsync``1(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MaxAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MaxAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  name: MaxAsync<TEntity>(CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.MaxAsync<TEntity>(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MaxAsync<TEntity>(System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.MaxAsync(Of TEntity)(CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MaxAsync(Of TEntity)(System.Threading.CancellationToken)
  name.vb: MaxAsync(Of TEntity)(CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MaxAsync``1(System.Threading.CancellationToken)
    name: MaxAsync<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.MaxAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MaxAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MaxAsync``1(System.Threading.CancellationToken)
    name: MaxAsync(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.MaxAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MaxAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MaxAsync``2(System.Linq.Expressions.Expression{System.Func{{TEntity},{TResult}}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MaxAsync``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MaxAsync``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Threading.CancellationToken)
  name: MaxAsync<TEntity, TResult>(Expression<Func<TEntity, TResult>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.MaxAsync<TEntity, TResult>(Expression<Func<TEntity, TResult>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MaxAsync<TEntity, TResult>(System.Linq.Expressions.Expression<System.Func<TEntity, TResult>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.MaxAsync(Of TEntity, TResult)(Expression(Of Func(Of TEntity, TResult)), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MaxAsync(Of TEntity, TResult)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, TResult)), System.Threading.CancellationToken)
  name.vb: MaxAsync(Of TEntity, TResult)(Expression(Of Func(Of TEntity, TResult)), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MaxAsync``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Threading.CancellationToken)
    name: MaxAsync<TEntity, TResult>
    nameWithType: EntityFrameworkQueryableExtensions.MaxAsync<TEntity, TResult>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MaxAsync<TEntity, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MaxAsync``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Threading.CancellationToken)
    name: MaxAsync(Of TEntity, TResult)
    nameWithType: EntityFrameworkQueryableExtensions.MaxAsync(Of TEntity, TResult)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MaxAsync(Of TEntity, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Decimal}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}},System.Threading.CancellationToken)
  name: SumAsync<TEntity>(Expression<Func<TEntity, Decimal>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.SumAsync<TEntity>(Expression<Func<TEntity, Decimal>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync<TEntity>(System.Linq.Expressions.Expression<System.Func<TEntity, System.Decimal>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.SumAsync(Of TEntity)(Expression(Of Func(Of TEntity, Decimal)), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(Of TEntity)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Decimal)), System.Threading.CancellationToken)
  name.vb: SumAsync(Of TEntity)(Expression(Of Func(Of TEntity, Decimal)), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}},System.Threading.CancellationToken)
    name: SumAsync<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.SumAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}},System.Threading.CancellationToken)
    name: SumAsync(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.SumAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Nullable{System.Decimal}}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}},System.Threading.CancellationToken)
  name: SumAsync<TEntity>(Expression<Func<TEntity, Nullable<Decimal>>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.SumAsync<TEntity>(Expression<Func<TEntity, Nullable<Decimal>>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync<TEntity>(System.Linq.Expressions.Expression<System.Func<TEntity, System.Nullable<System.Decimal>>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.SumAsync(Of TEntity)(Expression(Of Func(Of TEntity, Nullable(Of Decimal))), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(Of TEntity)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Nullable(Of System.Decimal))), System.Threading.CancellationToken)
  name.vb: SumAsync(Of TEntity)(Expression(Of Func(Of TEntity, Nullable(Of Decimal))), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}},System.Threading.CancellationToken)
    name: SumAsync<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.SumAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}},System.Threading.CancellationToken)
    name: SumAsync(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.SumAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Int32}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}},System.Threading.CancellationToken)
  name: SumAsync<TEntity>(Expression<Func<TEntity, Int32>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.SumAsync<TEntity>(Expression<Func<TEntity, Int32>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync<TEntity>(System.Linq.Expressions.Expression<System.Func<TEntity, System.Int32>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.SumAsync(Of TEntity)(Expression(Of Func(Of TEntity, Int32)), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(Of TEntity)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Int32)), System.Threading.CancellationToken)
  name.vb: SumAsync(Of TEntity)(Expression(Of Func(Of TEntity, Int32)), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Int32}},System.Threading.CancellationToken)
    name: SumAsync<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.SumAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Int32}},System.Threading.CancellationToken)
    name: SumAsync(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.SumAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Nullable{System.Int32}}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}},System.Threading.CancellationToken)
  name: SumAsync<TEntity>(Expression<Func<TEntity, Nullable<Int32>>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.SumAsync<TEntity>(Expression<Func<TEntity, Nullable<Int32>>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync<TEntity>(System.Linq.Expressions.Expression<System.Func<TEntity, System.Nullable<System.Int32>>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.SumAsync(Of TEntity)(Expression(Of Func(Of TEntity, Nullable(Of Int32))), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(Of TEntity)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Nullable(Of System.Int32))), System.Threading.CancellationToken)
  name.vb: SumAsync(Of TEntity)(Expression(Of Func(Of TEntity, Nullable(Of Int32))), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}},System.Threading.CancellationToken)
    name: SumAsync<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.SumAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}},System.Threading.CancellationToken)
    name: SumAsync(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.SumAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Int64}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}},System.Threading.CancellationToken)
  name: SumAsync<TEntity>(Expression<Func<TEntity, Int64>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.SumAsync<TEntity>(Expression<Func<TEntity, Int64>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync<TEntity>(System.Linq.Expressions.Expression<System.Func<TEntity, System.Int64>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.SumAsync(Of TEntity)(Expression(Of Func(Of TEntity, Int64)), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(Of TEntity)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Int64)), System.Threading.CancellationToken)
  name.vb: SumAsync(Of TEntity)(Expression(Of Func(Of TEntity, Int64)), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Int64}},System.Threading.CancellationToken)
    name: SumAsync<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.SumAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Int64}},System.Threading.CancellationToken)
    name: SumAsync(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.SumAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Nullable{System.Int64}}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}},System.Threading.CancellationToken)
  name: SumAsync<TEntity>(Expression<Func<TEntity, Nullable<Int64>>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.SumAsync<TEntity>(Expression<Func<TEntity, Nullable<Int64>>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync<TEntity>(System.Linq.Expressions.Expression<System.Func<TEntity, System.Nullable<System.Int64>>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.SumAsync(Of TEntity)(Expression(Of Func(Of TEntity, Nullable(Of Int64))), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(Of TEntity)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Nullable(Of System.Int64))), System.Threading.CancellationToken)
  name.vb: SumAsync(Of TEntity)(Expression(Of Func(Of TEntity, Nullable(Of Int64))), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}},System.Threading.CancellationToken)
    name: SumAsync<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.SumAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}},System.Threading.CancellationToken)
    name: SumAsync(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.SumAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Double}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}},System.Threading.CancellationToken)
  name: SumAsync<TEntity>(Expression<Func<TEntity, Double>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.SumAsync<TEntity>(Expression<Func<TEntity, Double>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync<TEntity>(System.Linq.Expressions.Expression<System.Func<TEntity, System.Double>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.SumAsync(Of TEntity)(Expression(Of Func(Of TEntity, Double)), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(Of TEntity)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Double)), System.Threading.CancellationToken)
  name.vb: SumAsync(Of TEntity)(Expression(Of Func(Of TEntity, Double)), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Double}},System.Threading.CancellationToken)
    name: SumAsync<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.SumAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Double}},System.Threading.CancellationToken)
    name: SumAsync(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.SumAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Nullable{System.Double}}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}},System.Threading.CancellationToken)
  name: SumAsync<TEntity>(Expression<Func<TEntity, Nullable<Double>>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.SumAsync<TEntity>(Expression<Func<TEntity, Nullable<Double>>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync<TEntity>(System.Linq.Expressions.Expression<System.Func<TEntity, System.Nullable<System.Double>>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.SumAsync(Of TEntity)(Expression(Of Func(Of TEntity, Nullable(Of Double))), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(Of TEntity)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Nullable(Of System.Double))), System.Threading.CancellationToken)
  name.vb: SumAsync(Of TEntity)(Expression(Of Func(Of TEntity, Nullable(Of Double))), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}},System.Threading.CancellationToken)
    name: SumAsync<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.SumAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}},System.Threading.CancellationToken)
    name: SumAsync(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.SumAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Single}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}},System.Threading.CancellationToken)
  name: SumAsync<TEntity>(Expression<Func<TEntity, Single>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.SumAsync<TEntity>(Expression<Func<TEntity, Single>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync<TEntity>(System.Linq.Expressions.Expression<System.Func<TEntity, System.Single>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.SumAsync(Of TEntity)(Expression(Of Func(Of TEntity, Single)), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(Of TEntity)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Single)), System.Threading.CancellationToken)
  name.vb: SumAsync(Of TEntity)(Expression(Of Func(Of TEntity, Single)), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Single}},System.Threading.CancellationToken)
    name: SumAsync<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.SumAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Single}},System.Threading.CancellationToken)
    name: SumAsync(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.SumAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Nullable{System.Single}}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}},System.Threading.CancellationToken)
  name: SumAsync<TEntity>(Expression<Func<TEntity, Nullable<Single>>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.SumAsync<TEntity>(Expression<Func<TEntity, Nullable<Single>>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync<TEntity>(System.Linq.Expressions.Expression<System.Func<TEntity, System.Nullable<System.Single>>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.SumAsync(Of TEntity)(Expression(Of Func(Of TEntity, Nullable(Of Single))), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(Of TEntity)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Nullable(Of System.Single))), System.Threading.CancellationToken)
  name.vb: SumAsync(Of TEntity)(Expression(Of Func(Of TEntity, Nullable(Of Single))), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}},System.Threading.CancellationToken)
    name: SumAsync<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.SumAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}},System.Threading.CancellationToken)
    name: SumAsync(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.SumAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Decimal}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}},System.Threading.CancellationToken)
  name: AverageAsync<TEntity>(Expression<Func<TEntity, Decimal>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.AverageAsync<TEntity>(Expression<Func<TEntity, Decimal>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync<TEntity>(System.Linq.Expressions.Expression<System.Func<TEntity, System.Decimal>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.AverageAsync(Of TEntity)(Expression(Of Func(Of TEntity, Decimal)), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(Of TEntity)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Decimal)), System.Threading.CancellationToken)
  name.vb: AverageAsync(Of TEntity)(Expression(Of Func(Of TEntity, Decimal)), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}},System.Threading.CancellationToken)
    name: AverageAsync<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.AverageAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}},System.Threading.CancellationToken)
    name: AverageAsync(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.AverageAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Nullable{System.Decimal}}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}},System.Threading.CancellationToken)
  name: AverageAsync<TEntity>(Expression<Func<TEntity, Nullable<Decimal>>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.AverageAsync<TEntity>(Expression<Func<TEntity, Nullable<Decimal>>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync<TEntity>(System.Linq.Expressions.Expression<System.Func<TEntity, System.Nullable<System.Decimal>>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.AverageAsync(Of TEntity)(Expression(Of Func(Of TEntity, Nullable(Of Decimal))), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(Of TEntity)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Nullable(Of System.Decimal))), System.Threading.CancellationToken)
  name.vb: AverageAsync(Of TEntity)(Expression(Of Func(Of TEntity, Nullable(Of Decimal))), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}},System.Threading.CancellationToken)
    name: AverageAsync<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.AverageAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}},System.Threading.CancellationToken)
    name: AverageAsync(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.AverageAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Int32}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}},System.Threading.CancellationToken)
  name: AverageAsync<TEntity>(Expression<Func<TEntity, Int32>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.AverageAsync<TEntity>(Expression<Func<TEntity, Int32>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync<TEntity>(System.Linq.Expressions.Expression<System.Func<TEntity, System.Int32>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.AverageAsync(Of TEntity)(Expression(Of Func(Of TEntity, Int32)), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(Of TEntity)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Int32)), System.Threading.CancellationToken)
  name.vb: AverageAsync(Of TEntity)(Expression(Of Func(Of TEntity, Int32)), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Int32}},System.Threading.CancellationToken)
    name: AverageAsync<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.AverageAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Int32}},System.Threading.CancellationToken)
    name: AverageAsync(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.AverageAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Nullable{System.Int32}}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}},System.Threading.CancellationToken)
  name: AverageAsync<TEntity>(Expression<Func<TEntity, Nullable<Int32>>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.AverageAsync<TEntity>(Expression<Func<TEntity, Nullable<Int32>>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync<TEntity>(System.Linq.Expressions.Expression<System.Func<TEntity, System.Nullable<System.Int32>>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.AverageAsync(Of TEntity)(Expression(Of Func(Of TEntity, Nullable(Of Int32))), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(Of TEntity)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Nullable(Of System.Int32))), System.Threading.CancellationToken)
  name.vb: AverageAsync(Of TEntity)(Expression(Of Func(Of TEntity, Nullable(Of Int32))), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}},System.Threading.CancellationToken)
    name: AverageAsync<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.AverageAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}},System.Threading.CancellationToken)
    name: AverageAsync(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.AverageAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Int64}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}},System.Threading.CancellationToken)
  name: AverageAsync<TEntity>(Expression<Func<TEntity, Int64>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.AverageAsync<TEntity>(Expression<Func<TEntity, Int64>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync<TEntity>(System.Linq.Expressions.Expression<System.Func<TEntity, System.Int64>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.AverageAsync(Of TEntity)(Expression(Of Func(Of TEntity, Int64)), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(Of TEntity)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Int64)), System.Threading.CancellationToken)
  name.vb: AverageAsync(Of TEntity)(Expression(Of Func(Of TEntity, Int64)), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Int64}},System.Threading.CancellationToken)
    name: AverageAsync<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.AverageAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Int64}},System.Threading.CancellationToken)
    name: AverageAsync(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.AverageAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Nullable{System.Int64}}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}},System.Threading.CancellationToken)
  name: AverageAsync<TEntity>(Expression<Func<TEntity, Nullable<Int64>>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.AverageAsync<TEntity>(Expression<Func<TEntity, Nullable<Int64>>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync<TEntity>(System.Linq.Expressions.Expression<System.Func<TEntity, System.Nullable<System.Int64>>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.AverageAsync(Of TEntity)(Expression(Of Func(Of TEntity, Nullable(Of Int64))), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(Of TEntity)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Nullable(Of System.Int64))), System.Threading.CancellationToken)
  name.vb: AverageAsync(Of TEntity)(Expression(Of Func(Of TEntity, Nullable(Of Int64))), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}},System.Threading.CancellationToken)
    name: AverageAsync<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.AverageAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}},System.Threading.CancellationToken)
    name: AverageAsync(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.AverageAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Double}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}},System.Threading.CancellationToken)
  name: AverageAsync<TEntity>(Expression<Func<TEntity, Double>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.AverageAsync<TEntity>(Expression<Func<TEntity, Double>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync<TEntity>(System.Linq.Expressions.Expression<System.Func<TEntity, System.Double>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.AverageAsync(Of TEntity)(Expression(Of Func(Of TEntity, Double)), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(Of TEntity)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Double)), System.Threading.CancellationToken)
  name.vb: AverageAsync(Of TEntity)(Expression(Of Func(Of TEntity, Double)), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Double}},System.Threading.CancellationToken)
    name: AverageAsync<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.AverageAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Double}},System.Threading.CancellationToken)
    name: AverageAsync(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.AverageAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Nullable{System.Double}}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}},System.Threading.CancellationToken)
  name: AverageAsync<TEntity>(Expression<Func<TEntity, Nullable<Double>>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.AverageAsync<TEntity>(Expression<Func<TEntity, Nullable<Double>>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync<TEntity>(System.Linq.Expressions.Expression<System.Func<TEntity, System.Nullable<System.Double>>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.AverageAsync(Of TEntity)(Expression(Of Func(Of TEntity, Nullable(Of Double))), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(Of TEntity)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Nullable(Of System.Double))), System.Threading.CancellationToken)
  name.vb: AverageAsync(Of TEntity)(Expression(Of Func(Of TEntity, Nullable(Of Double))), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}},System.Threading.CancellationToken)
    name: AverageAsync<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.AverageAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}},System.Threading.CancellationToken)
    name: AverageAsync(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.AverageAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Single}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}},System.Threading.CancellationToken)
  name: AverageAsync<TEntity>(Expression<Func<TEntity, Single>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.AverageAsync<TEntity>(Expression<Func<TEntity, Single>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync<TEntity>(System.Linq.Expressions.Expression<System.Func<TEntity, System.Single>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.AverageAsync(Of TEntity)(Expression(Of Func(Of TEntity, Single)), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(Of TEntity)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Single)), System.Threading.CancellationToken)
  name.vb: AverageAsync(Of TEntity)(Expression(Of Func(Of TEntity, Single)), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Single}},System.Threading.CancellationToken)
    name: AverageAsync<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.AverageAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Single}},System.Threading.CancellationToken)
    name: AverageAsync(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.AverageAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Nullable{System.Single}}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}},System.Threading.CancellationToken)
  name: AverageAsync<TEntity>(Expression<Func<TEntity, Nullable<Single>>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.AverageAsync<TEntity>(Expression<Func<TEntity, Nullable<Single>>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync<TEntity>(System.Linq.Expressions.Expression<System.Func<TEntity, System.Nullable<System.Single>>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.AverageAsync(Of TEntity)(Expression(Of Func(Of TEntity, Nullable(Of Single))), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(Of TEntity)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Nullable(Of System.Single))), System.Threading.CancellationToken)
  name.vb: AverageAsync(Of TEntity)(Expression(Of Func(Of TEntity, Nullable(Of Single))), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}},System.Threading.CancellationToken)
    name: AverageAsync<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.AverageAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}},System.Threading.CancellationToken)
    name: AverageAsync(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.AverageAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ContainsAsync``1({TEntity},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ContainsAsync``1(System.Linq.IQueryable{``0},``0,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ContainsAsync``1(System.Linq.IQueryable{``0},``0,System.Threading.CancellationToken)
  name: ContainsAsync<TEntity>(TEntity, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.ContainsAsync<TEntity>(TEntity, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ContainsAsync<TEntity>(TEntity, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.ContainsAsync(Of TEntity)(TEntity, CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ContainsAsync(Of TEntity)(TEntity, System.Threading.CancellationToken)
  name.vb: ContainsAsync(Of TEntity)(TEntity, CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ContainsAsync``1(``0,System.Threading.CancellationToken)
    name: ContainsAsync<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.ContainsAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ContainsAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ContainsAsync``1(``0,System.Threading.CancellationToken)
    name: ContainsAsync(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.ContainsAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ContainsAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync``1(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  name: ToListAsync<TEntity>(CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.ToListAsync<TEntity>(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync<TEntity>(System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.ToListAsync(Of TEntity)(CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync(Of TEntity)(System.Threading.CancellationToken)
  name.vb: ToListAsync(Of TEntity)(CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync``1(System.Threading.CancellationToken)
    name: ToListAsync<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.ToListAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync``1(System.Threading.CancellationToken)
    name: ToListAsync(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.ToListAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToArrayAsync``1(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToArrayAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToArrayAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  name: ToArrayAsync<TEntity>(CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.ToArrayAsync<TEntity>(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToArrayAsync<TEntity>(System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.ToArrayAsync(Of TEntity)(CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToArrayAsync(Of TEntity)(System.Threading.CancellationToken)
  name.vb: ToArrayAsync(Of TEntity)(CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToArrayAsync``1(System.Threading.CancellationToken)
    name: ToArrayAsync<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.ToArrayAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToArrayAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToArrayAsync``1(System.Threading.CancellationToken)
    name: ToArrayAsync(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.ToArrayAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToArrayAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include``2(System.Linq.Expressions.Expression{System.Func{{TEntity},{TProperty}}})
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name: Include<TEntity, TProperty>(Expression<Func<TEntity, TProperty>>)
  nameWithType: EntityFrameworkQueryableExtensions.Include<TEntity, TProperty>(Expression<Func<TEntity, TProperty>>)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include<TEntity, TProperty>(System.Linq.Expressions.Expression<System.Func<TEntity, TProperty>>)
  nameWithType.vb: EntityFrameworkQueryableExtensions.Include(Of TEntity, TProperty)(Expression(Of Func(Of TEntity, TProperty)))
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include(Of TEntity, TProperty)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, TProperty)))
  name.vb: Include(Of TEntity, TProperty)(Expression(Of Func(Of TEntity, TProperty)))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})
    name: Include<TEntity, TProperty>
    nameWithType: EntityFrameworkQueryableExtensions.Include<TEntity, TProperty>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include<TEntity, TProperty>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})
    name: Include(Of TEntity, TProperty)
    nameWithType: EntityFrameworkQueryableExtensions.Include(Of TEntity, TProperty)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include(Of TEntity, TProperty)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include``1(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include``1(System.Linq.IQueryable{``0},System.String)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include``1(System.Linq.IQueryable{``0},System.String)
  name: Include<TEntity>(String)
  nameWithType: EntityFrameworkQueryableExtensions.Include<TEntity>(String)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include<TEntity>(System.String)
  nameWithType.vb: EntityFrameworkQueryableExtensions.Include(Of TEntity)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include(Of TEntity)(System.String)
  name.vb: Include(Of TEntity)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include``1(System.String)
    name: Include<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.Include<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include``1(System.String)
    name: Include(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.Include(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsNoTracking``1
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsNoTracking``1(System.Linq.IQueryable{``0})
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsNoTracking``1(System.Linq.IQueryable{``0})
  name: AsNoTracking<TEntity>()
  nameWithType: EntityFrameworkQueryableExtensions.AsNoTracking<TEntity>()
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsNoTracking<TEntity>()
  nameWithType.vb: EntityFrameworkQueryableExtensions.AsNoTracking(Of TEntity)()
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsNoTracking(Of TEntity)()
  name.vb: AsNoTracking(Of TEntity)()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsNoTracking``1
    name: AsNoTracking<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.AsNoTracking<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsNoTracking<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsNoTracking``1
    name: AsNoTracking(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.AsNoTracking(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsNoTracking(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsTracking``1
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsTracking``1(System.Linq.IQueryable{``0})
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsTracking``1(System.Linq.IQueryable{``0})
  name: AsTracking<TEntity>()
  nameWithType: EntityFrameworkQueryableExtensions.AsTracking<TEntity>()
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsTracking<TEntity>()
  nameWithType.vb: EntityFrameworkQueryableExtensions.AsTracking(Of TEntity)()
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsTracking(Of TEntity)()
  name.vb: AsTracking(Of TEntity)()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsTracking``1
    name: AsTracking<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.AsTracking<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsTracking<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsTracking``1
    name: AsTracking(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.AsTracking(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsTracking(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Load``1
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Load``1(System.Linq.IQueryable{``0})
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Load``1(System.Linq.IQueryable{``0})
  name: Load<TEntity>()
  nameWithType: EntityFrameworkQueryableExtensions.Load<TEntity>()
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Load<TEntity>()
  nameWithType.vb: EntityFrameworkQueryableExtensions.Load(Of TEntity)()
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Load(Of TEntity)()
  name.vb: Load(Of TEntity)()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Load``1
    name: Load<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.Load<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Load<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Load``1
    name: Load(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.Load(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Load(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LoadAsync``1(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LoadAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LoadAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  name: LoadAsync<TEntity>(CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.LoadAsync<TEntity>(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LoadAsync<TEntity>(System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.LoadAsync(Of TEntity)(CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LoadAsync(Of TEntity)(System.Threading.CancellationToken)
  name.vb: LoadAsync(Of TEntity)(CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LoadAsync``1(System.Threading.CancellationToken)
    name: LoadAsync<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.LoadAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LoadAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LoadAsync``1(System.Threading.CancellationToken)
    name: LoadAsync(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.LoadAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LoadAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync``2(System.Func{{TEntity},{TKey}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync``2(System.Linq.IQueryable{``0},System.Func{``0,``1},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync``2(System.Linq.IQueryable{``0},System.Func{``0,``1},System.Threading.CancellationToken)
  name: ToDictionaryAsync<TEntity, TKey>(Func<TEntity, TKey>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.ToDictionaryAsync<TEntity, TKey>(Func<TEntity, TKey>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync<TEntity, TKey>(System.Func<TEntity, TKey>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.ToDictionaryAsync(Of TEntity, TKey)(Func(Of TEntity, TKey), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync(Of TEntity, TKey)(System.Func(Of TEntity, TKey), System.Threading.CancellationToken)
  name.vb: ToDictionaryAsync(Of TEntity, TKey)(Func(Of TEntity, TKey), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync``2(System.Func{``0,``1},System.Threading.CancellationToken)
    name: ToDictionaryAsync<TEntity, TKey>
    nameWithType: EntityFrameworkQueryableExtensions.ToDictionaryAsync<TEntity, TKey>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync<TEntity, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync``2(System.Func{``0,``1},System.Threading.CancellationToken)
    name: ToDictionaryAsync(Of TEntity, TKey)
    nameWithType: EntityFrameworkQueryableExtensions.ToDictionaryAsync(Of TEntity, TKey)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync(Of TEntity, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync``2(System.Func{{TEntity},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync``2(System.Linq.IQueryable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync``2(System.Linq.IQueryable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1},System.Threading.CancellationToken)
  name: ToDictionaryAsync<TEntity, TKey>(Func<TEntity, TKey>, IEqualityComparer<TKey>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.ToDictionaryAsync<TEntity, TKey>(Func<TEntity, TKey>, IEqualityComparer<TKey>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync<TEntity, TKey>(System.Func<TEntity, TKey>, System.Collections.Generic.IEqualityComparer<TKey>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.ToDictionaryAsync(Of TEntity, TKey)(Func(Of TEntity, TKey), IEqualityComparer(Of TKey), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync(Of TEntity, TKey)(System.Func(Of TEntity, TKey), System.Collections.Generic.IEqualityComparer(Of TKey), System.Threading.CancellationToken)
  name.vb: ToDictionaryAsync(Of TEntity, TKey)(Func(Of TEntity, TKey), IEqualityComparer(Of TKey), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1},System.Threading.CancellationToken)
    name: ToDictionaryAsync<TEntity, TKey>
    nameWithType: EntityFrameworkQueryableExtensions.ToDictionaryAsync<TEntity, TKey>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync<TEntity, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1},System.Threading.CancellationToken)
    name: ToDictionaryAsync(Of TEntity, TKey)
    nameWithType: EntityFrameworkQueryableExtensions.ToDictionaryAsync(Of TEntity, TKey)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync(Of TEntity, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync``3(System.Func{{TEntity},{TKey}},System.Func{{TEntity},{TElement}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync``3(System.Linq.IQueryable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync``3(System.Linq.IQueryable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Threading.CancellationToken)
  name: ToDictionaryAsync<TEntity, TKey, TElement>(Func<TEntity, TKey>, Func<TEntity, TElement>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.ToDictionaryAsync<TEntity, TKey, TElement>(Func<TEntity, TKey>, Func<TEntity, TElement>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync<TEntity, TKey, TElement>(System.Func<TEntity, TKey>, System.Func<TEntity, TElement>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.ToDictionaryAsync(Of TEntity, TKey, TElement)(Func(Of TEntity, TKey), Func(Of TEntity, TElement), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync(Of TEntity, TKey, TElement)(System.Func(Of TEntity, TKey), System.Func(Of TEntity, TElement), System.Threading.CancellationToken)
  name.vb: ToDictionaryAsync(Of TEntity, TKey, TElement)(Func(Of TEntity, TKey), Func(Of TEntity, TElement), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync``3(System.Func{``0,``1},System.Func{``0,``2},System.Threading.CancellationToken)
    name: ToDictionaryAsync<TEntity, TKey, TElement>
    nameWithType: EntityFrameworkQueryableExtensions.ToDictionaryAsync<TEntity, TKey, TElement>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync<TEntity, TKey, TElement>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync``3(System.Func{``0,``1},System.Func{``0,``2},System.Threading.CancellationToken)
    name: ToDictionaryAsync(Of TEntity, TKey, TElement)
    nameWithType: EntityFrameworkQueryableExtensions.ToDictionaryAsync(Of TEntity, TKey, TElement)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync(Of TEntity, TKey, TElement)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync``3(System.Func{{TEntity},{TKey}},System.Func{{TEntity},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync``3(System.Linq.IQueryable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync``3(System.Linq.IQueryable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Threading.CancellationToken)
  name: ToDictionaryAsync<TEntity, TKey, TElement>(Func<TEntity, TKey>, Func<TEntity, TElement>, IEqualityComparer<TKey>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.ToDictionaryAsync<TEntity, TKey, TElement>(Func<TEntity, TKey>, Func<TEntity, TElement>, IEqualityComparer<TKey>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync<TEntity, TKey, TElement>(System.Func<TEntity, TKey>, System.Func<TEntity, TElement>, System.Collections.Generic.IEqualityComparer<TKey>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.ToDictionaryAsync(Of TEntity, TKey, TElement)(Func(Of TEntity, TKey), Func(Of TEntity, TElement), IEqualityComparer(Of TKey), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync(Of TEntity, TKey, TElement)(System.Func(Of TEntity, TKey), System.Func(Of TEntity, TElement), System.Collections.Generic.IEqualityComparer(Of TKey), System.Threading.CancellationToken)
  name.vb: ToDictionaryAsync(Of TEntity, TKey, TElement)(Func(Of TEntity, TKey), Func(Of TEntity, TElement), IEqualityComparer(Of TKey), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Threading.CancellationToken)
    name: ToDictionaryAsync<TEntity, TKey, TElement>
    nameWithType: EntityFrameworkQueryableExtensions.ToDictionaryAsync<TEntity, TKey, TElement>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync<TEntity, TKey, TElement>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Threading.CancellationToken)
    name: ToDictionaryAsync(Of TEntity, TKey, TElement)
    nameWithType: EntityFrameworkQueryableExtensions.ToDictionaryAsync(Of TEntity, TKey, TElement)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync(Of TEntity, TKey, TElement)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ForEachAsync``1(System.Action{{TEntity}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ForEachAsync``1(System.Linq.IQueryable{``0},System.Action{``0},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ForEachAsync``1(System.Linq.IQueryable{``0},System.Action{``0},System.Threading.CancellationToken)
  name: ForEachAsync<TEntity>(Action<TEntity>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.ForEachAsync<TEntity>(Action<TEntity>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ForEachAsync<TEntity>(System.Action<TEntity>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.ForEachAsync(Of TEntity)(Action(Of TEntity), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ForEachAsync(Of TEntity)(System.Action(Of TEntity), System.Threading.CancellationToken)
  name.vb: ForEachAsync(Of TEntity)(Action(Of TEntity), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ForEachAsync``1(System.Action{``0},System.Threading.CancellationToken)
    name: ForEachAsync<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.ForEachAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ForEachAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ForEachAsync``1(System.Action{``0},System.Threading.CancellationToken)
    name: ForEachAsync(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.ForEachAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ForEachAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{`0}.Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.OrderByOrdinal``1(System.Func{{TEntity},System.String})
  commentId: M:Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.OrderByOrdinal``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String})
  parent: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions
  definition: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.OrderByOrdinal``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String})
  name: OrderByOrdinal<TEntity>(Func<TEntity, String>)
  nameWithType: EnumerableExtensions.OrderByOrdinal<TEntity>(Func<TEntity, String>)
  fullName: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.OrderByOrdinal<TEntity>(System.Func<TEntity, System.String>)
  nameWithType.vb: EnumerableExtensions.OrderByOrdinal(Of TEntity)(Func(Of TEntity, String))
  fullname.vb: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.OrderByOrdinal(Of TEntity)(System.Func(Of TEntity, System.String))
  name.vb: OrderByOrdinal(Of TEntity)(Func(Of TEntity, String))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.OrderByOrdinal``1(System.Func{``0,System.String})
    name: OrderByOrdinal<TEntity>
    nameWithType: EnumerableExtensions.OrderByOrdinal<TEntity>
    fullName: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.OrderByOrdinal<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.OrderByOrdinal``1(System.Func{``0,System.String})
    name: OrderByOrdinal(Of TEntity)
    nameWithType: EnumerableExtensions.OrderByOrdinal(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.OrderByOrdinal(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{`0}.Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.Distinct``1(System.Func{{TEntity},{TEntity},System.Boolean})
  commentId: M:Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,System.Boolean})
  parent: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions
  definition: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,System.Boolean})
  name: Distinct<TEntity>(Func<TEntity, TEntity, Boolean>)
  nameWithType: EnumerableExtensions.Distinct<TEntity>(Func<TEntity, TEntity, Boolean>)
  fullName: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.Distinct<TEntity>(System.Func<TEntity, TEntity, System.Boolean>)
  nameWithType.vb: EnumerableExtensions.Distinct(Of TEntity)(Func(Of TEntity, TEntity, Boolean))
  fullname.vb: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.Distinct(Of TEntity)(System.Func(Of TEntity, TEntity, System.Boolean))
  name.vb: Distinct(Of TEntity)(Func(Of TEntity, TEntity, Boolean))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.Distinct``1(System.Func{``0,``0,System.Boolean})
    name: Distinct<TEntity>
    nameWithType: EnumerableExtensions.Distinct<TEntity>
    fullName: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.Distinct<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.Distinct``1(System.Func{``0,``0,System.Boolean})
    name: Distinct(Of TEntity)
    nameWithType: EnumerableExtensions.Distinct(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.Distinct(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Object}.Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.Join(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.Join(System.Collections.Generic.IEnumerable{System.Object},System.String)
  parent: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions
  definition: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.Join(System.Collections.Generic.IEnumerable{System.Object},System.String)
  name: Join(String)
  nameWithType: EnumerableExtensions.Join(String)
  fullName: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.Join(System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.Join(System.String)
    name: Join
    nameWithType: EnumerableExtensions.Join
    fullName: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.Join
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.Join(System.String)
    name: Join
    nameWithType: EnumerableExtensions.Join
    fullName: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.Join
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{`0}.Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.StructuralSequenceEqual``1(System.Collections.Generic.IEnumerable{{TEntity}})
  commentId: M:Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.StructuralSequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  parent: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions
  definition: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.StructuralSequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: StructuralSequenceEqual<TEntity>(IEnumerable<TEntity>)
  nameWithType: EnumerableExtensions.StructuralSequenceEqual<TEntity>(IEnumerable<TEntity>)
  fullName: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.StructuralSequenceEqual<TEntity>(System.Collections.Generic.IEnumerable<TEntity>)
  nameWithType.vb: EnumerableExtensions.StructuralSequenceEqual(Of TEntity)(IEnumerable(Of TEntity))
  fullname.vb: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.StructuralSequenceEqual(Of TEntity)(System.Collections.Generic.IEnumerable(Of TEntity))
  name.vb: StructuralSequenceEqual(Of TEntity)(IEnumerable(Of TEntity))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.StructuralSequenceEqual``1(System.Collections.Generic.IEnumerable{``0})
    name: StructuralSequenceEqual<TEntity>
    nameWithType: EnumerableExtensions.StructuralSequenceEqual<TEntity>
    fullName: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.StructuralSequenceEqual<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.StructuralSequenceEqual``1(System.Collections.Generic.IEnumerable{``0})
    name: StructuralSequenceEqual(Of TEntity)
    nameWithType: EnumerableExtensions.StructuralSequenceEqual(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.StructuralSequenceEqual(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{`0}.Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.StartsWith``1(System.Collections.Generic.IEnumerable{{TEntity}})
  commentId: M:Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.StartsWith``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  parent: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions
  definition: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.StartsWith``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: StartsWith<TEntity>(IEnumerable<TEntity>)
  nameWithType: EnumerableExtensions.StartsWith<TEntity>(IEnumerable<TEntity>)
  fullName: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.StartsWith<TEntity>(System.Collections.Generic.IEnumerable<TEntity>)
  nameWithType.vb: EnumerableExtensions.StartsWith(Of TEntity)(IEnumerable(Of TEntity))
  fullname.vb: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.StartsWith(Of TEntity)(System.Collections.Generic.IEnumerable(Of TEntity))
  name.vb: StartsWith(Of TEntity)(IEnumerable(Of TEntity))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.StartsWith``1(System.Collections.Generic.IEnumerable{``0})
    name: StartsWith<TEntity>
    nameWithType: EnumerableExtensions.StartsWith<TEntity>
    fullName: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.StartsWith<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.StartsWith``1(System.Collections.Generic.IEnumerable{``0})
    name: StartsWith(Of TEntity)
    nameWithType: EnumerableExtensions.StartsWith(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.StartsWith(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider}.Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService``1
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider})
  parent: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions
  definition: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider})
  name: GetService<TService>()
  nameWithType: AccessorExtensions.GetService<TService>()
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService<TService>()
  nameWithType.vb: AccessorExtensions.GetService(Of TService)()
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService(Of TService)()
  name.vb: GetService(Of TService)()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService``1
    name: GetService<TService>
    nameWithType: AccessorExtensions.GetService<TService>
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService<TService>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService``1
    name: GetService(Of TService)
    nameWithType: AccessorExtensions.GetService(Of TService)
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService(Of TService)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider}.Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
  parent: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions
  definition: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
  name: GetInfrastructure<IServiceProvider>()
  nameWithType: AccessorExtensions.GetInfrastructure<IServiceProvider>()
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure<System.IServiceProvider>()
  nameWithType.vb: AccessorExtensions.GetInfrastructure(Of IServiceProvider)()
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure(Of System.IServiceProvider)()
  name.vb: GetInfrastructure(Of IServiceProvider)()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1
    name: GetInfrastructure<IServiceProvider>
    nameWithType: AccessorExtensions.GetInfrastructure<IServiceProvider>
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure<System.IServiceProvider>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1
    name: GetInfrastructure(Of IServiceProvider)
    nameWithType: AccessorExtensions.GetInfrastructure(Of IServiceProvider)
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure(Of System.IServiceProvider)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.Extensions.Internal.QueryableExtensions.AsAsyncEnumerable``1
  commentId: M:Microsoft.EntityFrameworkCore.Extensions.Internal.QueryableExtensions.AsAsyncEnumerable``1(System.Linq.IQueryable{``0})
  parent: Microsoft.EntityFrameworkCore.Extensions.Internal.QueryableExtensions
  definition: Microsoft.EntityFrameworkCore.Extensions.Internal.QueryableExtensions.AsAsyncEnumerable``1(System.Linq.IQueryable{``0})
  name: AsAsyncEnumerable<TEntity>()
  nameWithType: QueryableExtensions.AsAsyncEnumerable<TEntity>()
  fullName: Microsoft.EntityFrameworkCore.Extensions.Internal.QueryableExtensions.AsAsyncEnumerable<TEntity>()
  nameWithType.vb: QueryableExtensions.AsAsyncEnumerable(Of TEntity)()
  fullname.vb: Microsoft.EntityFrameworkCore.Extensions.Internal.QueryableExtensions.AsAsyncEnumerable(Of TEntity)()
  name.vb: AsAsyncEnumerable(Of TEntity)()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Extensions.Internal.QueryableExtensions.AsAsyncEnumerable``1
    name: AsAsyncEnumerable<TEntity>
    nameWithType: QueryableExtensions.AsAsyncEnumerable<TEntity>
    fullName: Microsoft.EntityFrameworkCore.Extensions.Internal.QueryableExtensions.AsAsyncEnumerable<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Extensions.Internal.QueryableExtensions.AsAsyncEnumerable``1
    name: AsAsyncEnumerable(Of TEntity)
    nameWithType: QueryableExtensions.AsAsyncEnumerable(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.Extensions.Internal.QueryableExtensions.AsAsyncEnumerable(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{`0}.Microsoft.EntityFrameworkCore.Specification.Tests.Extensions.NullChecked``1
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.Extensions.NullChecked``1(System.Collections.Generic.IEnumerable{``0})
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.Extensions
  definition: Microsoft.EntityFrameworkCore.Specification.Tests.Extensions.NullChecked``1(System.Collections.Generic.IEnumerable{``0})
  name: NullChecked<TEntity>()
  nameWithType: Extensions.NullChecked<TEntity>()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.Extensions.NullChecked<TEntity>()
  nameWithType.vb: Extensions.NullChecked(Of TEntity)()
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.Extensions.NullChecked(Of TEntity)()
  name.vb: NullChecked(Of TEntity)()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.Extensions.NullChecked``1
    name: NullChecked<TEntity>
    nameWithType: Extensions.NullChecked<TEntity>
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.Extensions.NullChecked<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.Extensions.NullChecked``1
    name: NullChecked(Of TEntity)
    nameWithType: Extensions.NullChecked(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.Extensions.NullChecked(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{`0}.Microsoft.EntityFrameworkCore.Specification.Tests.Extensions.ForEach``1(System.Action{{TEntity}})
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.Extensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.Extensions
  definition: Microsoft.EntityFrameworkCore.Specification.Tests.Extensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
  name: ForEach<TEntity>(Action<TEntity>)
  nameWithType: Extensions.ForEach<TEntity>(Action<TEntity>)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.Extensions.ForEach<TEntity>(System.Action<TEntity>)
  nameWithType.vb: Extensions.ForEach(Of TEntity)(Action(Of TEntity))
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.Extensions.ForEach(Of TEntity)(System.Action(Of TEntity))
  name.vb: ForEach(Of TEntity)(Action(Of TEntity))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.Extensions.ForEach``1(System.Action{``0})
    name: ForEach<TEntity>
    nameWithType: Extensions.ForEach<TEntity>
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.Extensions.ForEach<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.Extensions.ForEach``1(System.Action{``0})
    name: ForEach(Of TEntity)
    nameWithType: Extensions.ForEach(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.Extensions.ForEach(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.EntityFrameworkCore.RelationalQueryableExtensions.FromSql``1(System.String,System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.RelationalQueryableExtensions.FromSql``1(System.Linq.IQueryable{``0},System.String,System.Object[])
  parent: Microsoft.EntityFrameworkCore.RelationalQueryableExtensions
  definition: Microsoft.EntityFrameworkCore.RelationalQueryableExtensions.FromSql``1(System.Linq.IQueryable{``0},System.String,System.Object[])
  name: FromSql<TEntity>(String, Object[])
  nameWithType: RelationalQueryableExtensions.FromSql<TEntity>(String, Object[])
  fullName: Microsoft.EntityFrameworkCore.RelationalQueryableExtensions.FromSql<TEntity>(System.String, System.Object[])
  nameWithType.vb: RelationalQueryableExtensions.FromSql(Of TEntity)(String, Object())
  fullname.vb: Microsoft.EntityFrameworkCore.RelationalQueryableExtensions.FromSql(Of TEntity)(System.String, System.Object())
  name.vb: FromSql(Of TEntity)(String, Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalQueryableExtensions.FromSql``1(System.String,System.Object[])
    name: FromSql<TEntity>
    nameWithType: RelationalQueryableExtensions.FromSql<TEntity>
    fullName: Microsoft.EntityFrameworkCore.RelationalQueryableExtensions.FromSql<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalQueryableExtensions.FromSql``1(System.String,System.Object[])
    name: FromSql(Of TEntity)
    nameWithType: RelationalQueryableExtensions.FromSql(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.RelationalQueryableExtensions.FromSql(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Linq.IQueryable`1
  commentId: T:System.Linq.IQueryable`1
  isExternal: true
  name: IQueryable<T>
  nameWithType: IQueryable<T>
  fullName: System.Linq.IQueryable<T>
  nameWithType.vb: IQueryable(Of T)
  fullname.vb: System.Linq.IQueryable(Of T)
  name.vb: IQueryable(Of T)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq
  commentId: N:System.Linq
  isExternal: false
  name: System.Linq
  nameWithType: System.Linq
  fullName: System.Linq
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor`1
  commentId: T:Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor`1
  isExternal: false
  name: IAsyncEnumerableAccessor<T>
  nameWithType: IAsyncEnumerableAccessor<T>
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor<T>
  nameWithType.vb: IAsyncEnumerableAccessor(Of T)
  fullname.vb: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor(Of T)
  name.vb: IAsyncEnumerableAccessor(Of T)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor`1
    name: IAsyncEnumerableAccessor
    nameWithType: IAsyncEnumerableAccessor
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor`1
    name: IAsyncEnumerableAccessor
    nameWithType: IAsyncEnumerableAccessor
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Query.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Query.Internal
  fullName: Microsoft.EntityFrameworkCore.Query.Internal
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  isExternal: false
  name: IInfrastructure<T>
  nameWithType: IInfrastructure<T>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<T>
  nameWithType.vb: IInfrastructure(Of T)
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of T)
  name.vb: IInfrastructure(Of T)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure
  commentId: N:Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Infrastructure
  nameWithType: Microsoft.EntityFrameworkCore.Infrastructure
  fullName: Microsoft.EntityFrameworkCore.Infrastructure
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AnyAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AnyAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  isExternal: true
  name: AnyAsync<TSource>(IQueryable<TSource>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.AnyAsync<TSource>(IQueryable<TSource>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AnyAsync<TSource>(System.Linq.IQueryable<TSource>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.AnyAsync(Of TSource)(IQueryable(Of TSource), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AnyAsync(Of TSource)(System.Linq.IQueryable(Of TSource), System.Threading.CancellationToken)
  name.vb: AnyAsync(Of TSource)(IQueryable(Of TSource), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AnyAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
    name: AnyAsync<TSource>
    nameWithType: EntityFrameworkQueryableExtensions.AnyAsync<TSource>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AnyAsync<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AnyAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
    name: AnyAsync(Of TSource)
    nameWithType: EntityFrameworkQueryableExtensions.AnyAsync(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AnyAsync(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  commentId: T:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: EntityFrameworkQueryableExtensions
  nameWithType: EntityFrameworkQueryableExtensions
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AnyAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AnyAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  isExternal: true
  name: AnyAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.AnyAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AnyAsync<TSource>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.AnyAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AnyAsync(Of TSource)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)), System.Threading.CancellationToken)
  name.vb: AnyAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AnyAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
    name: AnyAsync<TSource>
    nameWithType: EntityFrameworkQueryableExtensions.AnyAsync<TSource>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AnyAsync<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AnyAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
    name: AnyAsync(Of TSource)
    nameWithType: EntityFrameworkQueryableExtensions.AnyAsync(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AnyAsync(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AllAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AllAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  isExternal: true
  name: AllAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.AllAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AllAsync<TSource>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.AllAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AllAsync(Of TSource)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)), System.Threading.CancellationToken)
  name.vb: AllAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AllAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
    name: AllAsync<TSource>
    nameWithType: EntityFrameworkQueryableExtensions.AllAsync<TSource>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AllAsync<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AllAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
    name: AllAsync(Of TSource)
    nameWithType: EntityFrameworkQueryableExtensions.AllAsync(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AllAsync(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  isExternal: true
  name: CountAsync<TSource>(IQueryable<TSource>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.CountAsync<TSource>(IQueryable<TSource>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync<TSource>(System.Linq.IQueryable<TSource>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.CountAsync(Of TSource)(IQueryable(Of TSource), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync(Of TSource)(System.Linq.IQueryable(Of TSource), System.Threading.CancellationToken)
  name.vb: CountAsync(Of TSource)(IQueryable(Of TSource), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
    name: CountAsync<TSource>
    nameWithType: EntityFrameworkQueryableExtensions.CountAsync<TSource>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
    name: CountAsync(Of TSource)
    nameWithType: EntityFrameworkQueryableExtensions.CountAsync(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  isExternal: true
  name: CountAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.CountAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync<TSource>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.CountAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync(Of TSource)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)), System.Threading.CancellationToken)
  name.vb: CountAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
    name: CountAsync<TSource>
    nameWithType: EntityFrameworkQueryableExtensions.CountAsync<TSource>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
    name: CountAsync(Of TSource)
    nameWithType: EntityFrameworkQueryableExtensions.CountAsync(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LongCountAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LongCountAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  isExternal: true
  name: LongCountAsync<TSource>(IQueryable<TSource>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.LongCountAsync<TSource>(IQueryable<TSource>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LongCountAsync<TSource>(System.Linq.IQueryable<TSource>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.LongCountAsync(Of TSource)(IQueryable(Of TSource), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LongCountAsync(Of TSource)(System.Linq.IQueryable(Of TSource), System.Threading.CancellationToken)
  name.vb: LongCountAsync(Of TSource)(IQueryable(Of TSource), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LongCountAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
    name: LongCountAsync<TSource>
    nameWithType: EntityFrameworkQueryableExtensions.LongCountAsync<TSource>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LongCountAsync<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LongCountAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
    name: LongCountAsync(Of TSource)
    nameWithType: EntityFrameworkQueryableExtensions.LongCountAsync(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LongCountAsync(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LongCountAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LongCountAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  isExternal: true
  name: LongCountAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.LongCountAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LongCountAsync<TSource>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.LongCountAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LongCountAsync(Of TSource)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)), System.Threading.CancellationToken)
  name.vb: LongCountAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LongCountAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
    name: LongCountAsync<TSource>
    nameWithType: EntityFrameworkQueryableExtensions.LongCountAsync<TSource>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LongCountAsync<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LongCountAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
    name: LongCountAsync(Of TSource)
    nameWithType: EntityFrameworkQueryableExtensions.LongCountAsync(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LongCountAsync(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  isExternal: true
  name: FirstAsync<TSource>(IQueryable<TSource>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.FirstAsync<TSource>(IQueryable<TSource>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstAsync<TSource>(System.Linq.IQueryable<TSource>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.FirstAsync(Of TSource)(IQueryable(Of TSource), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstAsync(Of TSource)(System.Linq.IQueryable(Of TSource), System.Threading.CancellationToken)
  name.vb: FirstAsync(Of TSource)(IQueryable(Of TSource), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
    name: FirstAsync<TSource>
    nameWithType: EntityFrameworkQueryableExtensions.FirstAsync<TSource>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstAsync<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
    name: FirstAsync(Of TSource)
    nameWithType: EntityFrameworkQueryableExtensions.FirstAsync(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstAsync(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  isExternal: true
  name: FirstAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.FirstAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstAsync<TSource>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.FirstAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstAsync(Of TSource)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)), System.Threading.CancellationToken)
  name.vb: FirstAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
    name: FirstAsync<TSource>
    nameWithType: EntityFrameworkQueryableExtensions.FirstAsync<TSource>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstAsync<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
    name: FirstAsync(Of TSource)
    nameWithType: EntityFrameworkQueryableExtensions.FirstAsync(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstAsync(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  isExternal: true
  name: FirstOrDefaultAsync<TSource>(IQueryable<TSource>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.FirstOrDefaultAsync<TSource>(IQueryable<TSource>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstOrDefaultAsync<TSource>(System.Linq.IQueryable<TSource>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.FirstOrDefaultAsync(Of TSource)(IQueryable(Of TSource), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstOrDefaultAsync(Of TSource)(System.Linq.IQueryable(Of TSource), System.Threading.CancellationToken)
  name.vb: FirstOrDefaultAsync(Of TSource)(IQueryable(Of TSource), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
    name: FirstOrDefaultAsync<TSource>
    nameWithType: EntityFrameworkQueryableExtensions.FirstOrDefaultAsync<TSource>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstOrDefaultAsync<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
    name: FirstOrDefaultAsync(Of TSource)
    nameWithType: EntityFrameworkQueryableExtensions.FirstOrDefaultAsync(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstOrDefaultAsync(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  isExternal: true
  name: FirstOrDefaultAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.FirstOrDefaultAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstOrDefaultAsync<TSource>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.FirstOrDefaultAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstOrDefaultAsync(Of TSource)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)), System.Threading.CancellationToken)
  name.vb: FirstOrDefaultAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
    name: FirstOrDefaultAsync<TSource>
    nameWithType: EntityFrameworkQueryableExtensions.FirstOrDefaultAsync<TSource>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstOrDefaultAsync<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
    name: FirstOrDefaultAsync(Of TSource)
    nameWithType: EntityFrameworkQueryableExtensions.FirstOrDefaultAsync(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstOrDefaultAsync(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  isExternal: true
  name: LastAsync<TSource>(IQueryable<TSource>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.LastAsync<TSource>(IQueryable<TSource>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastAsync<TSource>(System.Linq.IQueryable<TSource>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.LastAsync(Of TSource)(IQueryable(Of TSource), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastAsync(Of TSource)(System.Linq.IQueryable(Of TSource), System.Threading.CancellationToken)
  name.vb: LastAsync(Of TSource)(IQueryable(Of TSource), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
    name: LastAsync<TSource>
    nameWithType: EntityFrameworkQueryableExtensions.LastAsync<TSource>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastAsync<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
    name: LastAsync(Of TSource)
    nameWithType: EntityFrameworkQueryableExtensions.LastAsync(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastAsync(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  isExternal: true
  name: LastAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.LastAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastAsync<TSource>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.LastAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastAsync(Of TSource)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)), System.Threading.CancellationToken)
  name.vb: LastAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
    name: LastAsync<TSource>
    nameWithType: EntityFrameworkQueryableExtensions.LastAsync<TSource>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastAsync<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
    name: LastAsync(Of TSource)
    nameWithType: EntityFrameworkQueryableExtensions.LastAsync(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastAsync(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  isExternal: true
  name: LastOrDefaultAsync<TSource>(IQueryable<TSource>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.LastOrDefaultAsync<TSource>(IQueryable<TSource>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastOrDefaultAsync<TSource>(System.Linq.IQueryable<TSource>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.LastOrDefaultAsync(Of TSource)(IQueryable(Of TSource), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastOrDefaultAsync(Of TSource)(System.Linq.IQueryable(Of TSource), System.Threading.CancellationToken)
  name.vb: LastOrDefaultAsync(Of TSource)(IQueryable(Of TSource), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
    name: LastOrDefaultAsync<TSource>
    nameWithType: EntityFrameworkQueryableExtensions.LastOrDefaultAsync<TSource>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastOrDefaultAsync<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
    name: LastOrDefaultAsync(Of TSource)
    nameWithType: EntityFrameworkQueryableExtensions.LastOrDefaultAsync(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastOrDefaultAsync(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  isExternal: true
  name: LastOrDefaultAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.LastOrDefaultAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastOrDefaultAsync<TSource>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.LastOrDefaultAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastOrDefaultAsync(Of TSource)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)), System.Threading.CancellationToken)
  name.vb: LastOrDefaultAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
    name: LastOrDefaultAsync<TSource>
    nameWithType: EntityFrameworkQueryableExtensions.LastOrDefaultAsync<TSource>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastOrDefaultAsync<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
    name: LastOrDefaultAsync(Of TSource)
    nameWithType: EntityFrameworkQueryableExtensions.LastOrDefaultAsync(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastOrDefaultAsync(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  isExternal: true
  name: SingleAsync<TSource>(IQueryable<TSource>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.SingleAsync<TSource>(IQueryable<TSource>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleAsync<TSource>(System.Linq.IQueryable<TSource>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.SingleAsync(Of TSource)(IQueryable(Of TSource), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleAsync(Of TSource)(System.Linq.IQueryable(Of TSource), System.Threading.CancellationToken)
  name.vb: SingleAsync(Of TSource)(IQueryable(Of TSource), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
    name: SingleAsync<TSource>
    nameWithType: EntityFrameworkQueryableExtensions.SingleAsync<TSource>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleAsync<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
    name: SingleAsync(Of TSource)
    nameWithType: EntityFrameworkQueryableExtensions.SingleAsync(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleAsync(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  isExternal: true
  name: SingleAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.SingleAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleAsync<TSource>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.SingleAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleAsync(Of TSource)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)), System.Threading.CancellationToken)
  name.vb: SingleAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
    name: SingleAsync<TSource>
    nameWithType: EntityFrameworkQueryableExtensions.SingleAsync<TSource>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleAsync<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
    name: SingleAsync(Of TSource)
    nameWithType: EntityFrameworkQueryableExtensions.SingleAsync(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleAsync(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  isExternal: true
  name: SingleOrDefaultAsync<TSource>(IQueryable<TSource>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.SingleOrDefaultAsync<TSource>(IQueryable<TSource>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleOrDefaultAsync<TSource>(System.Linq.IQueryable<TSource>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.SingleOrDefaultAsync(Of TSource)(IQueryable(Of TSource), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleOrDefaultAsync(Of TSource)(System.Linq.IQueryable(Of TSource), System.Threading.CancellationToken)
  name.vb: SingleOrDefaultAsync(Of TSource)(IQueryable(Of TSource), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
    name: SingleOrDefaultAsync<TSource>
    nameWithType: EntityFrameworkQueryableExtensions.SingleOrDefaultAsync<TSource>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleOrDefaultAsync<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
    name: SingleOrDefaultAsync(Of TSource)
    nameWithType: EntityFrameworkQueryableExtensions.SingleOrDefaultAsync(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleOrDefaultAsync(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  isExternal: true
  name: SingleOrDefaultAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.SingleOrDefaultAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleOrDefaultAsync<TSource>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.SingleOrDefaultAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleOrDefaultAsync(Of TSource)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)), System.Threading.CancellationToken)
  name.vb: SingleOrDefaultAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
    name: SingleOrDefaultAsync<TSource>
    nameWithType: EntityFrameworkQueryableExtensions.SingleOrDefaultAsync<TSource>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleOrDefaultAsync<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
    name: SingleOrDefaultAsync(Of TSource)
    nameWithType: EntityFrameworkQueryableExtensions.SingleOrDefaultAsync(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleOrDefaultAsync(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MinAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MinAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  isExternal: true
  name: MinAsync<TSource>(IQueryable<TSource>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.MinAsync<TSource>(IQueryable<TSource>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MinAsync<TSource>(System.Linq.IQueryable<TSource>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.MinAsync(Of TSource)(IQueryable(Of TSource), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MinAsync(Of TSource)(System.Linq.IQueryable(Of TSource), System.Threading.CancellationToken)
  name.vb: MinAsync(Of TSource)(IQueryable(Of TSource), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MinAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
    name: MinAsync<TSource>
    nameWithType: EntityFrameworkQueryableExtensions.MinAsync<TSource>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MinAsync<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MinAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
    name: MinAsync(Of TSource)
    nameWithType: EntityFrameworkQueryableExtensions.MinAsync(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MinAsync(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MinAsync``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MinAsync``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Threading.CancellationToken)
  isExternal: true
  name: MinAsync<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, TResult>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.MinAsync<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, TResult>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MinAsync<TSource, TResult>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, TResult>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.MinAsync(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, TResult)), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MinAsync(Of TSource, TResult)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TResult)), System.Threading.CancellationToken)
  name.vb: MinAsync(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, TResult)), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MinAsync``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Threading.CancellationToken)
    name: MinAsync<TSource, TResult>
    nameWithType: EntityFrameworkQueryableExtensions.MinAsync<TSource, TResult>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MinAsync<TSource, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MinAsync``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Threading.CancellationToken)
    name: MinAsync(Of TSource, TResult)
    nameWithType: EntityFrameworkQueryableExtensions.MinAsync(Of TSource, TResult)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MinAsync(Of TSource, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MaxAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MaxAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  isExternal: true
  name: MaxAsync<TSource>(IQueryable<TSource>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.MaxAsync<TSource>(IQueryable<TSource>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MaxAsync<TSource>(System.Linq.IQueryable<TSource>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.MaxAsync(Of TSource)(IQueryable(Of TSource), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MaxAsync(Of TSource)(System.Linq.IQueryable(Of TSource), System.Threading.CancellationToken)
  name.vb: MaxAsync(Of TSource)(IQueryable(Of TSource), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MaxAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
    name: MaxAsync<TSource>
    nameWithType: EntityFrameworkQueryableExtensions.MaxAsync<TSource>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MaxAsync<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MaxAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
    name: MaxAsync(Of TSource)
    nameWithType: EntityFrameworkQueryableExtensions.MaxAsync(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MaxAsync(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MaxAsync``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MaxAsync``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Threading.CancellationToken)
  isExternal: true
  name: MaxAsync<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, TResult>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.MaxAsync<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, TResult>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MaxAsync<TSource, TResult>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, TResult>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.MaxAsync(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, TResult)), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MaxAsync(Of TSource, TResult)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TResult)), System.Threading.CancellationToken)
  name.vb: MaxAsync(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, TResult)), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MaxAsync``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Threading.CancellationToken)
    name: MaxAsync<TSource, TResult>
    nameWithType: EntityFrameworkQueryableExtensions.MaxAsync<TSource, TResult>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MaxAsync<TSource, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MaxAsync``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Threading.CancellationToken)
    name: MaxAsync(Of TSource, TResult)
    nameWithType: EntityFrameworkQueryableExtensions.MaxAsync(Of TSource, TResult)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MaxAsync(Of TSource, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}},System.Threading.CancellationToken)
  isExternal: true
  name: SumAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Decimal>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.SumAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Decimal>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync<TSource>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Decimal>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.SumAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Decimal)), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(Of TSource)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Decimal)), System.Threading.CancellationToken)
  name.vb: SumAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Decimal)), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}},System.Threading.CancellationToken)
    name: SumAsync<TSource>
    nameWithType: EntityFrameworkQueryableExtensions.SumAsync<TSource>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}},System.Threading.CancellationToken)
    name: SumAsync(Of TSource)
    nameWithType: EntityFrameworkQueryableExtensions.SumAsync(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}},System.Threading.CancellationToken)
  isExternal: true
  name: SumAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Nullable<Decimal>>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.SumAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Nullable<Decimal>>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync<TSource>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Nullable<System.Decimal>>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.SumAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Decimal))), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(Of TSource)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Nullable(Of System.Decimal))), System.Threading.CancellationToken)
  name.vb: SumAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Decimal))), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}},System.Threading.CancellationToken)
    name: SumAsync<TSource>
    nameWithType: EntityFrameworkQueryableExtensions.SumAsync<TSource>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}},System.Threading.CancellationToken)
    name: SumAsync(Of TSource)
    nameWithType: EntityFrameworkQueryableExtensions.SumAsync(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}},System.Threading.CancellationToken)
  isExternal: true
  name: SumAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Int32>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.SumAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Int32>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync<TSource>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Int32>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.SumAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Int32)), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(Of TSource)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Int32)), System.Threading.CancellationToken)
  name.vb: SumAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Int32)), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}},System.Threading.CancellationToken)
    name: SumAsync<TSource>
    nameWithType: EntityFrameworkQueryableExtensions.SumAsync<TSource>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}},System.Threading.CancellationToken)
    name: SumAsync(Of TSource)
    nameWithType: EntityFrameworkQueryableExtensions.SumAsync(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}},System.Threading.CancellationToken)
  isExternal: true
  name: SumAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Nullable<Int32>>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.SumAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Nullable<Int32>>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync<TSource>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Nullable<System.Int32>>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.SumAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Int32))), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(Of TSource)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Nullable(Of System.Int32))), System.Threading.CancellationToken)
  name.vb: SumAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Int32))), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}},System.Threading.CancellationToken)
    name: SumAsync<TSource>
    nameWithType: EntityFrameworkQueryableExtensions.SumAsync<TSource>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}},System.Threading.CancellationToken)
    name: SumAsync(Of TSource)
    nameWithType: EntityFrameworkQueryableExtensions.SumAsync(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}},System.Threading.CancellationToken)
  isExternal: true
  name: SumAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Int64>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.SumAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Int64>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync<TSource>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Int64>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.SumAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Int64)), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(Of TSource)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Int64)), System.Threading.CancellationToken)
  name.vb: SumAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Int64)), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}},System.Threading.CancellationToken)
    name: SumAsync<TSource>
    nameWithType: EntityFrameworkQueryableExtensions.SumAsync<TSource>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}},System.Threading.CancellationToken)
    name: SumAsync(Of TSource)
    nameWithType: EntityFrameworkQueryableExtensions.SumAsync(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}},System.Threading.CancellationToken)
  isExternal: true
  name: SumAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Nullable<Int64>>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.SumAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Nullable<Int64>>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync<TSource>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Nullable<System.Int64>>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.SumAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Int64))), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(Of TSource)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Nullable(Of System.Int64))), System.Threading.CancellationToken)
  name.vb: SumAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Int64))), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}},System.Threading.CancellationToken)
    name: SumAsync<TSource>
    nameWithType: EntityFrameworkQueryableExtensions.SumAsync<TSource>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}},System.Threading.CancellationToken)
    name: SumAsync(Of TSource)
    nameWithType: EntityFrameworkQueryableExtensions.SumAsync(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}},System.Threading.CancellationToken)
  isExternal: true
  name: SumAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Double>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.SumAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Double>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync<TSource>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Double>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.SumAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Double)), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(Of TSource)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Double)), System.Threading.CancellationToken)
  name.vb: SumAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Double)), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}},System.Threading.CancellationToken)
    name: SumAsync<TSource>
    nameWithType: EntityFrameworkQueryableExtensions.SumAsync<TSource>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}},System.Threading.CancellationToken)
    name: SumAsync(Of TSource)
    nameWithType: EntityFrameworkQueryableExtensions.SumAsync(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}},System.Threading.CancellationToken)
  isExternal: true
  name: SumAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Nullable<Double>>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.SumAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Nullable<Double>>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync<TSource>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Nullable<System.Double>>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.SumAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Double))), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(Of TSource)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Nullable(Of System.Double))), System.Threading.CancellationToken)
  name.vb: SumAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Double))), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}},System.Threading.CancellationToken)
    name: SumAsync<TSource>
    nameWithType: EntityFrameworkQueryableExtensions.SumAsync<TSource>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}},System.Threading.CancellationToken)
    name: SumAsync(Of TSource)
    nameWithType: EntityFrameworkQueryableExtensions.SumAsync(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}},System.Threading.CancellationToken)
  isExternal: true
  name: SumAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Single>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.SumAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Single>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync<TSource>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Single>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.SumAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Single)), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(Of TSource)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Single)), System.Threading.CancellationToken)
  name.vb: SumAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Single)), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}},System.Threading.CancellationToken)
    name: SumAsync<TSource>
    nameWithType: EntityFrameworkQueryableExtensions.SumAsync<TSource>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}},System.Threading.CancellationToken)
    name: SumAsync(Of TSource)
    nameWithType: EntityFrameworkQueryableExtensions.SumAsync(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}},System.Threading.CancellationToken)
  isExternal: true
  name: SumAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Nullable<Single>>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.SumAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Nullable<Single>>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync<TSource>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Nullable<System.Single>>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.SumAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Single))), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(Of TSource)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Nullable(Of System.Single))), System.Threading.CancellationToken)
  name.vb: SumAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Single))), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}},System.Threading.CancellationToken)
    name: SumAsync<TSource>
    nameWithType: EntityFrameworkQueryableExtensions.SumAsync<TSource>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}},System.Threading.CancellationToken)
    name: SumAsync(Of TSource)
    nameWithType: EntityFrameworkQueryableExtensions.SumAsync(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}},System.Threading.CancellationToken)
  isExternal: true
  name: AverageAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Decimal>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.AverageAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Decimal>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync<TSource>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Decimal>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.AverageAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Decimal)), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(Of TSource)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Decimal)), System.Threading.CancellationToken)
  name.vb: AverageAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Decimal)), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}},System.Threading.CancellationToken)
    name: AverageAsync<TSource>
    nameWithType: EntityFrameworkQueryableExtensions.AverageAsync<TSource>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}},System.Threading.CancellationToken)
    name: AverageAsync(Of TSource)
    nameWithType: EntityFrameworkQueryableExtensions.AverageAsync(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}},System.Threading.CancellationToken)
  isExternal: true
  name: AverageAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Nullable<Decimal>>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.AverageAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Nullable<Decimal>>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync<TSource>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Nullable<System.Decimal>>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.AverageAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Decimal))), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(Of TSource)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Nullable(Of System.Decimal))), System.Threading.CancellationToken)
  name.vb: AverageAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Decimal))), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}},System.Threading.CancellationToken)
    name: AverageAsync<TSource>
    nameWithType: EntityFrameworkQueryableExtensions.AverageAsync<TSource>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}},System.Threading.CancellationToken)
    name: AverageAsync(Of TSource)
    nameWithType: EntityFrameworkQueryableExtensions.AverageAsync(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}},System.Threading.CancellationToken)
  isExternal: true
  name: AverageAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Int32>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.AverageAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Int32>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync<TSource>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Int32>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.AverageAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Int32)), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(Of TSource)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Int32)), System.Threading.CancellationToken)
  name.vb: AverageAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Int32)), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}},System.Threading.CancellationToken)
    name: AverageAsync<TSource>
    nameWithType: EntityFrameworkQueryableExtensions.AverageAsync<TSource>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}},System.Threading.CancellationToken)
    name: AverageAsync(Of TSource)
    nameWithType: EntityFrameworkQueryableExtensions.AverageAsync(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}},System.Threading.CancellationToken)
  isExternal: true
  name: AverageAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Nullable<Int32>>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.AverageAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Nullable<Int32>>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync<TSource>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Nullable<System.Int32>>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.AverageAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Int32))), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(Of TSource)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Nullable(Of System.Int32))), System.Threading.CancellationToken)
  name.vb: AverageAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Int32))), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}},System.Threading.CancellationToken)
    name: AverageAsync<TSource>
    nameWithType: EntityFrameworkQueryableExtensions.AverageAsync<TSource>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}},System.Threading.CancellationToken)
    name: AverageAsync(Of TSource)
    nameWithType: EntityFrameworkQueryableExtensions.AverageAsync(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}},System.Threading.CancellationToken)
  isExternal: true
  name: AverageAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Int64>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.AverageAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Int64>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync<TSource>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Int64>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.AverageAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Int64)), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(Of TSource)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Int64)), System.Threading.CancellationToken)
  name.vb: AverageAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Int64)), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}},System.Threading.CancellationToken)
    name: AverageAsync<TSource>
    nameWithType: EntityFrameworkQueryableExtensions.AverageAsync<TSource>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}},System.Threading.CancellationToken)
    name: AverageAsync(Of TSource)
    nameWithType: EntityFrameworkQueryableExtensions.AverageAsync(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}},System.Threading.CancellationToken)
  isExternal: true
  name: AverageAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Nullable<Int64>>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.AverageAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Nullable<Int64>>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync<TSource>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Nullable<System.Int64>>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.AverageAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Int64))), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(Of TSource)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Nullable(Of System.Int64))), System.Threading.CancellationToken)
  name.vb: AverageAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Int64))), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}},System.Threading.CancellationToken)
    name: AverageAsync<TSource>
    nameWithType: EntityFrameworkQueryableExtensions.AverageAsync<TSource>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}},System.Threading.CancellationToken)
    name: AverageAsync(Of TSource)
    nameWithType: EntityFrameworkQueryableExtensions.AverageAsync(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}},System.Threading.CancellationToken)
  isExternal: true
  name: AverageAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Double>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.AverageAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Double>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync<TSource>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Double>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.AverageAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Double)), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(Of TSource)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Double)), System.Threading.CancellationToken)
  name.vb: AverageAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Double)), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}},System.Threading.CancellationToken)
    name: AverageAsync<TSource>
    nameWithType: EntityFrameworkQueryableExtensions.AverageAsync<TSource>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}},System.Threading.CancellationToken)
    name: AverageAsync(Of TSource)
    nameWithType: EntityFrameworkQueryableExtensions.AverageAsync(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}},System.Threading.CancellationToken)
  isExternal: true
  name: AverageAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Nullable<Double>>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.AverageAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Nullable<Double>>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync<TSource>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Nullable<System.Double>>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.AverageAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Double))), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(Of TSource)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Nullable(Of System.Double))), System.Threading.CancellationToken)
  name.vb: AverageAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Double))), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}},System.Threading.CancellationToken)
    name: AverageAsync<TSource>
    nameWithType: EntityFrameworkQueryableExtensions.AverageAsync<TSource>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}},System.Threading.CancellationToken)
    name: AverageAsync(Of TSource)
    nameWithType: EntityFrameworkQueryableExtensions.AverageAsync(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}},System.Threading.CancellationToken)
  isExternal: true
  name: AverageAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Single>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.AverageAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Single>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync<TSource>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Single>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.AverageAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Single)), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(Of TSource)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Single)), System.Threading.CancellationToken)
  name.vb: AverageAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Single)), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}},System.Threading.CancellationToken)
    name: AverageAsync<TSource>
    nameWithType: EntityFrameworkQueryableExtensions.AverageAsync<TSource>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}},System.Threading.CancellationToken)
    name: AverageAsync(Of TSource)
    nameWithType: EntityFrameworkQueryableExtensions.AverageAsync(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}},System.Threading.CancellationToken)
  isExternal: true
  name: AverageAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Nullable<Single>>>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.AverageAsync<TSource>(IQueryable<TSource>, Expression<Func<TSource, Nullable<Single>>>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync<TSource>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Nullable<System.Single>>>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.AverageAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Single))), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(Of TSource)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Nullable(Of System.Single))), System.Threading.CancellationToken)
  name.vb: AverageAsync(Of TSource)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Single))), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}},System.Threading.CancellationToken)
    name: AverageAsync<TSource>
    nameWithType: EntityFrameworkQueryableExtensions.AverageAsync<TSource>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}},System.Threading.CancellationToken)
    name: AverageAsync(Of TSource)
    nameWithType: EntityFrameworkQueryableExtensions.AverageAsync(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ContainsAsync``1(System.Linq.IQueryable{``0},``0,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ContainsAsync``1(System.Linq.IQueryable{``0},``0,System.Threading.CancellationToken)
  isExternal: true
  name: ContainsAsync<TSource>(IQueryable<TSource>, TSource, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.ContainsAsync<TSource>(IQueryable<TSource>, TSource, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ContainsAsync<TSource>(System.Linq.IQueryable<TSource>, TSource, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.ContainsAsync(Of TSource)(IQueryable(Of TSource), TSource, CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ContainsAsync(Of TSource)(System.Linq.IQueryable(Of TSource), TSource, System.Threading.CancellationToken)
  name.vb: ContainsAsync(Of TSource)(IQueryable(Of TSource), TSource, CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ContainsAsync``1(System.Linq.IQueryable{``0},``0,System.Threading.CancellationToken)
    name: ContainsAsync<TSource>
    nameWithType: EntityFrameworkQueryableExtensions.ContainsAsync<TSource>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ContainsAsync<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ContainsAsync``1(System.Linq.IQueryable{``0},``0,System.Threading.CancellationToken)
    name: ContainsAsync(Of TSource)
    nameWithType: EntityFrameworkQueryableExtensions.ContainsAsync(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ContainsAsync(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  isExternal: true
  name: ToListAsync<TSource>(IQueryable<TSource>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.ToListAsync<TSource>(IQueryable<TSource>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync<TSource>(System.Linq.IQueryable<TSource>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.ToListAsync(Of TSource)(IQueryable(Of TSource), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync(Of TSource)(System.Linq.IQueryable(Of TSource), System.Threading.CancellationToken)
  name.vb: ToListAsync(Of TSource)(IQueryable(Of TSource), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
    name: ToListAsync<TSource>
    nameWithType: EntityFrameworkQueryableExtensions.ToListAsync<TSource>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
    name: ToListAsync(Of TSource)
    nameWithType: EntityFrameworkQueryableExtensions.ToListAsync(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToArrayAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToArrayAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  isExternal: true
  name: ToArrayAsync<TSource>(IQueryable<TSource>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.ToArrayAsync<TSource>(IQueryable<TSource>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToArrayAsync<TSource>(System.Linq.IQueryable<TSource>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.ToArrayAsync(Of TSource)(IQueryable(Of TSource), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToArrayAsync(Of TSource)(System.Linq.IQueryable(Of TSource), System.Threading.CancellationToken)
  name.vb: ToArrayAsync(Of TSource)(IQueryable(Of TSource), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToArrayAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
    name: ToArrayAsync<TSource>
    nameWithType: EntityFrameworkQueryableExtensions.ToArrayAsync<TSource>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToArrayAsync<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToArrayAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
    name: ToArrayAsync(Of TSource)
    nameWithType: EntityFrameworkQueryableExtensions.ToArrayAsync(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToArrayAsync(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  isExternal: true
  name: Include<TEntity, TProperty>(IQueryable<TEntity>, Expression<Func<TEntity, TProperty>>)
  nameWithType: EntityFrameworkQueryableExtensions.Include<TEntity, TProperty>(IQueryable<TEntity>, Expression<Func<TEntity, TProperty>>)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include<TEntity, TProperty>(System.Linq.IQueryable<TEntity>, System.Linq.Expressions.Expression<System.Func<TEntity, TProperty>>)
  nameWithType.vb: EntityFrameworkQueryableExtensions.Include(Of TEntity, TProperty)(IQueryable(Of TEntity), Expression(Of Func(Of TEntity, TProperty)))
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include(Of TEntity, TProperty)(System.Linq.IQueryable(Of TEntity), System.Linq.Expressions.Expression(Of System.Func(Of TEntity, TProperty)))
  name.vb: Include(Of TEntity, TProperty)(IQueryable(Of TEntity), Expression(Of Func(Of TEntity, TProperty)))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
    name: Include<TEntity, TProperty>
    nameWithType: EntityFrameworkQueryableExtensions.Include<TEntity, TProperty>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include<TEntity, TProperty>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
    name: Include(Of TEntity, TProperty)
    nameWithType: EntityFrameworkQueryableExtensions.Include(Of TEntity, TProperty)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include(Of TEntity, TProperty)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include``1(System.Linq.IQueryable{``0},System.String)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include``1(System.Linq.IQueryable{``0},System.String)
  isExternal: true
  name: Include<TEntity>(IQueryable<TEntity>, String)
  nameWithType: EntityFrameworkQueryableExtensions.Include<TEntity>(IQueryable<TEntity>, String)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include<TEntity>(System.Linq.IQueryable<TEntity>, System.String)
  nameWithType.vb: EntityFrameworkQueryableExtensions.Include(Of TEntity)(IQueryable(Of TEntity), String)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include(Of TEntity)(System.Linq.IQueryable(Of TEntity), System.String)
  name.vb: Include(Of TEntity)(IQueryable(Of TEntity), String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include``1(System.Linq.IQueryable{``0},System.String)
    name: Include<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.Include<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include``1(System.Linq.IQueryable{``0},System.String)
    name: Include(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.Include(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsNoTracking``1(System.Linq.IQueryable{``0})
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsNoTracking``1(System.Linq.IQueryable{``0})
  isExternal: true
  name: AsNoTracking<TEntity>(IQueryable<TEntity>)
  nameWithType: EntityFrameworkQueryableExtensions.AsNoTracking<TEntity>(IQueryable<TEntity>)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsNoTracking<TEntity>(System.Linq.IQueryable<TEntity>)
  nameWithType.vb: EntityFrameworkQueryableExtensions.AsNoTracking(Of TEntity)(IQueryable(Of TEntity))
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsNoTracking(Of TEntity)(System.Linq.IQueryable(Of TEntity))
  name.vb: AsNoTracking(Of TEntity)(IQueryable(Of TEntity))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsNoTracking``1(System.Linq.IQueryable{``0})
    name: AsNoTracking<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.AsNoTracking<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsNoTracking<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsNoTracking``1(System.Linq.IQueryable{``0})
    name: AsNoTracking(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.AsNoTracking(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsNoTracking(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsTracking``1(System.Linq.IQueryable{``0})
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsTracking``1(System.Linq.IQueryable{``0})
  isExternal: true
  name: AsTracking<TEntity>(IQueryable<TEntity>)
  nameWithType: EntityFrameworkQueryableExtensions.AsTracking<TEntity>(IQueryable<TEntity>)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsTracking<TEntity>(System.Linq.IQueryable<TEntity>)
  nameWithType.vb: EntityFrameworkQueryableExtensions.AsTracking(Of TEntity)(IQueryable(Of TEntity))
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsTracking(Of TEntity)(System.Linq.IQueryable(Of TEntity))
  name.vb: AsTracking(Of TEntity)(IQueryable(Of TEntity))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsTracking``1(System.Linq.IQueryable{``0})
    name: AsTracking<TEntity>
    nameWithType: EntityFrameworkQueryableExtensions.AsTracking<TEntity>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsTracking<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsTracking``1(System.Linq.IQueryable{``0})
    name: AsTracking(Of TEntity)
    nameWithType: EntityFrameworkQueryableExtensions.AsTracking(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsTracking(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Load``1(System.Linq.IQueryable{``0})
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Load``1(System.Linq.IQueryable{``0})
  isExternal: true
  name: Load<TSource>(IQueryable<TSource>)
  nameWithType: EntityFrameworkQueryableExtensions.Load<TSource>(IQueryable<TSource>)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Load<TSource>(System.Linq.IQueryable<TSource>)
  nameWithType.vb: EntityFrameworkQueryableExtensions.Load(Of TSource)(IQueryable(Of TSource))
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Load(Of TSource)(System.Linq.IQueryable(Of TSource))
  name.vb: Load(Of TSource)(IQueryable(Of TSource))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Load``1(System.Linq.IQueryable{``0})
    name: Load<TSource>
    nameWithType: EntityFrameworkQueryableExtensions.Load<TSource>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Load<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Load``1(System.Linq.IQueryable{``0})
    name: Load(Of TSource)
    nameWithType: EntityFrameworkQueryableExtensions.Load(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Load(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LoadAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LoadAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
  isExternal: true
  name: LoadAsync<TSource>(IQueryable<TSource>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.LoadAsync<TSource>(IQueryable<TSource>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LoadAsync<TSource>(System.Linq.IQueryable<TSource>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.LoadAsync(Of TSource)(IQueryable(Of TSource), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LoadAsync(Of TSource)(System.Linq.IQueryable(Of TSource), System.Threading.CancellationToken)
  name.vb: LoadAsync(Of TSource)(IQueryable(Of TSource), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LoadAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
    name: LoadAsync<TSource>
    nameWithType: EntityFrameworkQueryableExtensions.LoadAsync<TSource>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LoadAsync<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LoadAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)
    name: LoadAsync(Of TSource)
    nameWithType: EntityFrameworkQueryableExtensions.LoadAsync(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LoadAsync(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync``2(System.Linq.IQueryable{``0},System.Func{``0,``1},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync``2(System.Linq.IQueryable{``0},System.Func{``0,``1},System.Threading.CancellationToken)
  isExternal: true
  name: ToDictionaryAsync<TSource, TKey>(IQueryable<TSource>, Func<TSource, TKey>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.ToDictionaryAsync<TSource, TKey>(IQueryable<TSource>, Func<TSource, TKey>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync<TSource, TKey>(System.Linq.IQueryable<TSource>, System.Func<TSource, TKey>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.ToDictionaryAsync(Of TSource, TKey)(IQueryable(Of TSource), Func(Of TSource, TKey), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync(Of TSource, TKey)(System.Linq.IQueryable(Of TSource), System.Func(Of TSource, TKey), System.Threading.CancellationToken)
  name.vb: ToDictionaryAsync(Of TSource, TKey)(IQueryable(Of TSource), Func(Of TSource, TKey), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync``2(System.Linq.IQueryable{``0},System.Func{``0,``1},System.Threading.CancellationToken)
    name: ToDictionaryAsync<TSource, TKey>
    nameWithType: EntityFrameworkQueryableExtensions.ToDictionaryAsync<TSource, TKey>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync<TSource, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync``2(System.Linq.IQueryable{``0},System.Func{``0,``1},System.Threading.CancellationToken)
    name: ToDictionaryAsync(Of TSource, TKey)
    nameWithType: EntityFrameworkQueryableExtensions.ToDictionaryAsync(Of TSource, TKey)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync(Of TSource, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync``2(System.Linq.IQueryable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync``2(System.Linq.IQueryable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1},System.Threading.CancellationToken)
  isExternal: true
  name: ToDictionaryAsync<TSource, TKey>(IQueryable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.ToDictionaryAsync<TSource, TKey>(IQueryable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync<TSource, TKey>(System.Linq.IQueryable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.ToDictionaryAsync(Of TSource, TKey)(IQueryable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync(Of TSource, TKey)(System.Linq.IQueryable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IEqualityComparer(Of TKey), System.Threading.CancellationToken)
  name.vb: ToDictionaryAsync(Of TSource, TKey)(IQueryable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync``2(System.Linq.IQueryable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1},System.Threading.CancellationToken)
    name: ToDictionaryAsync<TSource, TKey>
    nameWithType: EntityFrameworkQueryableExtensions.ToDictionaryAsync<TSource, TKey>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync<TSource, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync``2(System.Linq.IQueryable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1},System.Threading.CancellationToken)
    name: ToDictionaryAsync(Of TSource, TKey)
    nameWithType: EntityFrameworkQueryableExtensions.ToDictionaryAsync(Of TSource, TKey)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync(Of TSource, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync``3(System.Linq.IQueryable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync``3(System.Linq.IQueryable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Threading.CancellationToken)
  isExternal: true
  name: ToDictionaryAsync<TSource, TKey, TElement>(IQueryable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.ToDictionaryAsync<TSource, TKey, TElement>(IQueryable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync<TSource, TKey, TElement>(System.Linq.IQueryable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.ToDictionaryAsync(Of TSource, TKey, TElement)(IQueryable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync(Of TSource, TKey, TElement)(System.Linq.IQueryable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Threading.CancellationToken)
  name.vb: ToDictionaryAsync(Of TSource, TKey, TElement)(IQueryable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync``3(System.Linq.IQueryable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Threading.CancellationToken)
    name: ToDictionaryAsync<TSource, TKey, TElement>
    nameWithType: EntityFrameworkQueryableExtensions.ToDictionaryAsync<TSource, TKey, TElement>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync<TSource, TKey, TElement>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync``3(System.Linq.IQueryable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Threading.CancellationToken)
    name: ToDictionaryAsync(Of TSource, TKey, TElement)
    nameWithType: EntityFrameworkQueryableExtensions.ToDictionaryAsync(Of TSource, TKey, TElement)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync(Of TSource, TKey, TElement)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync``3(System.Linq.IQueryable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync``3(System.Linq.IQueryable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Threading.CancellationToken)
  isExternal: true
  name: ToDictionaryAsync<TSource, TKey, TElement>(IQueryable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.ToDictionaryAsync<TSource, TKey, TElement>(IQueryable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync<TSource, TKey, TElement>(System.Linq.IQueryable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Collections.Generic.IEqualityComparer<TKey>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.ToDictionaryAsync(Of TSource, TKey, TElement)(IQueryable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync(Of TSource, TKey, TElement)(System.Linq.IQueryable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Collections.Generic.IEqualityComparer(Of TKey), System.Threading.CancellationToken)
  name.vb: ToDictionaryAsync(Of TSource, TKey, TElement)(IQueryable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync``3(System.Linq.IQueryable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Threading.CancellationToken)
    name: ToDictionaryAsync<TSource, TKey, TElement>
    nameWithType: EntityFrameworkQueryableExtensions.ToDictionaryAsync<TSource, TKey, TElement>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync<TSource, TKey, TElement>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync``3(System.Linq.IQueryable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Threading.CancellationToken)
    name: ToDictionaryAsync(Of TSource, TKey, TElement)
    nameWithType: EntityFrameworkQueryableExtensions.ToDictionaryAsync(Of TSource, TKey, TElement)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync(Of TSource, TKey, TElement)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ForEachAsync``1(System.Linq.IQueryable{``0},System.Action{``0},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ForEachAsync``1(System.Linq.IQueryable{``0},System.Action{``0},System.Threading.CancellationToken)
  isExternal: true
  name: ForEachAsync<T>(IQueryable<T>, Action<T>, CancellationToken)
  nameWithType: EntityFrameworkQueryableExtensions.ForEachAsync<T>(IQueryable<T>, Action<T>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ForEachAsync<T>(System.Linq.IQueryable<T>, System.Action<T>, System.Threading.CancellationToken)
  nameWithType.vb: EntityFrameworkQueryableExtensions.ForEachAsync(Of T)(IQueryable(Of T), Action(Of T), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ForEachAsync(Of T)(System.Linq.IQueryable(Of T), System.Action(Of T), System.Threading.CancellationToken)
  name.vb: ForEachAsync(Of T)(IQueryable(Of T), Action(Of T), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ForEachAsync``1(System.Linq.IQueryable{``0},System.Action{``0},System.Threading.CancellationToken)
    name: ForEachAsync<T>
    nameWithType: EntityFrameworkQueryableExtensions.ForEachAsync<T>
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ForEachAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ForEachAsync``1(System.Linq.IQueryable{``0},System.Action{``0},System.Threading.CancellationToken)
    name: ForEachAsync(Of T)
    nameWithType: EntityFrameworkQueryableExtensions.ForEachAsync(Of T)
    fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ForEachAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.OrderByOrdinal``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String})
  commentId: M:Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.OrderByOrdinal``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String})
  isExternal: true
  name: OrderByOrdinal<TSource>(IEnumerable<TSource>, Func<TSource, String>)
  nameWithType: EnumerableExtensions.OrderByOrdinal<TSource>(IEnumerable<TSource>, Func<TSource, String>)
  fullName: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.OrderByOrdinal<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.String>)
  nameWithType.vb: EnumerableExtensions.OrderByOrdinal(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, String))
  fullname.vb: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.OrderByOrdinal(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.String))
  name.vb: OrderByOrdinal(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, String))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.OrderByOrdinal``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String})
    name: OrderByOrdinal<TSource>
    nameWithType: EnumerableExtensions.OrderByOrdinal<TSource>
    fullName: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.OrderByOrdinal<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.OrderByOrdinal``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String})
    name: OrderByOrdinal(Of TSource)
    nameWithType: EnumerableExtensions.OrderByOrdinal(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.OrderByOrdinal(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions
  parent: Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: EnumerableExtensions
  nameWithType: EnumerableExtensions
  fullName: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions
- uid: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,System.Boolean})
  commentId: M:Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,System.Boolean})
  isExternal: true
  name: Distinct<T>(IEnumerable<T>, Func<T, T, Boolean>)
  nameWithType: EnumerableExtensions.Distinct<T>(IEnumerable<T>, Func<T, T, Boolean>)
  fullName: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.Distinct<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, System.Boolean>)
  nameWithType.vb: EnumerableExtensions.Distinct(Of T)(IEnumerable(Of T), Func(Of T, T, Boolean))
  fullname.vb: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.Distinct(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, T, System.Boolean))
  name.vb: Distinct(Of T)(IEnumerable(Of T), Func(Of T, T, Boolean))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,System.Boolean})
    name: Distinct<T>
    nameWithType: EnumerableExtensions.Distinct<T>
    fullName: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.Distinct<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,System.Boolean})
    name: Distinct(Of T)
    nameWithType: EnumerableExtensions.Distinct(Of T)
    fullName: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.Distinct(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.Join(System.Collections.Generic.IEnumerable{System.Object},System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.Join(System.Collections.Generic.IEnumerable{System.Object},System.String)
  isExternal: true
  name: Join(IEnumerable<Object>, String)
  nameWithType: EnumerableExtensions.Join(IEnumerable<Object>, String)
  fullName: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.Join(System.Collections.Generic.IEnumerable<System.Object>, System.String)
  nameWithType.vb: EnumerableExtensions.Join(IEnumerable(Of Object), String)
  fullname.vb: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.Join(System.Collections.Generic.IEnumerable(Of System.Object), System.String)
  name.vb: Join(IEnumerable(Of Object), String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.Join(System.Collections.Generic.IEnumerable{System.Object},System.String)
    name: Join
    nameWithType: EnumerableExtensions.Join
    fullName: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.Join
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.Join(System.Collections.Generic.IEnumerable{System.Object},System.String)
    name: Join
    nameWithType: EnumerableExtensions.Join
    fullName: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.Join
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.StructuralSequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  commentId: M:Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.StructuralSequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: StructuralSequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  nameWithType: EnumerableExtensions.StructuralSequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  fullName: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.StructuralSequenceEqual<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)
  nameWithType.vb: EnumerableExtensions.StructuralSequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  fullname.vb: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.StructuralSequenceEqual(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: StructuralSequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.StructuralSequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: StructuralSequenceEqual<TSource>
    nameWithType: EnumerableExtensions.StructuralSequenceEqual<TSource>
    fullName: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.StructuralSequenceEqual<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.StructuralSequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: StructuralSequenceEqual(Of TSource)
    nameWithType: EnumerableExtensions.StructuralSequenceEqual(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.StructuralSequenceEqual(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.StartsWith``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  commentId: M:Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.StartsWith``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: StartsWith<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  nameWithType: EnumerableExtensions.StartsWith<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  fullName: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.StartsWith<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)
  nameWithType.vb: EnumerableExtensions.StartsWith(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  fullname.vb: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.StartsWith(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: StartsWith(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.StartsWith``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: StartsWith<TSource>
    nameWithType: EnumerableExtensions.StartsWith<TSource>
    fullName: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.StartsWith<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.StartsWith``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: StartsWith(Of TSource)
    nameWithType: EnumerableExtensions.StartsWith(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.StartsWith(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider})
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider})
  isExternal: true
  name: GetService<TService>(IInfrastructure<IServiceProvider>)
  nameWithType: AccessorExtensions.GetService<TService>(IInfrastructure<IServiceProvider>)
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService<TService>(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>)
  nameWithType.vb: AccessorExtensions.GetService(Of TService)(IInfrastructure(Of IServiceProvider))
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService(Of TService)(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of System.IServiceProvider))
  name.vb: GetService(Of TService)(IInfrastructure(Of IServiceProvider))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider})
    name: GetService<TService>
    nameWithType: AccessorExtensions.GetService<TService>
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService<TService>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider})
    name: GetService(Of TService)
    nameWithType: AccessorExtensions.GetService(Of TService)
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService(Of TService)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: AccessorExtensions
  nameWithType: AccessorExtensions
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions
- uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
  isExternal: false
  name: GetInfrastructure<T>(IInfrastructure<T>)
  nameWithType: AccessorExtensions.GetInfrastructure<T>(IInfrastructure<T>)
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure<T>(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<T>)
  nameWithType.vb: AccessorExtensions.GetInfrastructure(Of T)(IInfrastructure(Of T))
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure(Of T)(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of T))
  name.vb: GetInfrastructure(Of T)(IInfrastructure(Of T))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
    name: GetInfrastructure<T>
    nameWithType: AccessorExtensions.GetInfrastructure<T>
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
    name: GetInfrastructure(Of T)
    nameWithType: AccessorExtensions.GetInfrastructure(Of T)
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Extensions.Internal.QueryableExtensions.AsAsyncEnumerable``1(System.Linq.IQueryable{``0})
  commentId: M:Microsoft.EntityFrameworkCore.Extensions.Internal.QueryableExtensions.AsAsyncEnumerable``1(System.Linq.IQueryable{``0})
  isExternal: true
  name: AsAsyncEnumerable<TSource>(IQueryable<TSource>)
  nameWithType: QueryableExtensions.AsAsyncEnumerable<TSource>(IQueryable<TSource>)
  fullName: Microsoft.EntityFrameworkCore.Extensions.Internal.QueryableExtensions.AsAsyncEnumerable<TSource>(System.Linq.IQueryable<TSource>)
  nameWithType.vb: QueryableExtensions.AsAsyncEnumerable(Of TSource)(IQueryable(Of TSource))
  fullname.vb: Microsoft.EntityFrameworkCore.Extensions.Internal.QueryableExtensions.AsAsyncEnumerable(Of TSource)(System.Linq.IQueryable(Of TSource))
  name.vb: AsAsyncEnumerable(Of TSource)(IQueryable(Of TSource))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Extensions.Internal.QueryableExtensions.AsAsyncEnumerable``1(System.Linq.IQueryable{``0})
    name: AsAsyncEnumerable<TSource>
    nameWithType: QueryableExtensions.AsAsyncEnumerable<TSource>
    fullName: Microsoft.EntityFrameworkCore.Extensions.Internal.QueryableExtensions.AsAsyncEnumerable<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Extensions.Internal.QueryableExtensions.AsAsyncEnumerable``1(System.Linq.IQueryable{``0})
    name: AsAsyncEnumerable(Of TSource)
    nameWithType: QueryableExtensions.AsAsyncEnumerable(Of TSource)
    fullName: Microsoft.EntityFrameworkCore.Extensions.Internal.QueryableExtensions.AsAsyncEnumerable(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Extensions.Internal.QueryableExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Extensions.Internal.QueryableExtensions
  parent: Microsoft.EntityFrameworkCore.Extensions.Internal
  isExternal: false
  name: QueryableExtensions
  nameWithType: QueryableExtensions
  fullName: Microsoft.EntityFrameworkCore.Extensions.Internal.QueryableExtensions
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.Extensions.NullChecked``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.Extensions.NullChecked``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: NullChecked<T>(IEnumerable<T>)
  nameWithType: Extensions.NullChecked<T>(IEnumerable<T>)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.Extensions.NullChecked<T>(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: Extensions.NullChecked(Of T)(IEnumerable(Of T))
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.Extensions.NullChecked(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: NullChecked(Of T)(IEnumerable(Of T))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.Extensions.NullChecked``1(System.Collections.Generic.IEnumerable{``0})
    name: NullChecked<T>
    nameWithType: Extensions.NullChecked<T>
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.Extensions.NullChecked<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.Extensions.NullChecked``1(System.Collections.Generic.IEnumerable{``0})
    name: NullChecked(Of T)
    nameWithType: Extensions.NullChecked(Of T)
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.Extensions.NullChecked(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.Extensions
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.Extensions
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: Extensions
  nameWithType: Extensions
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.Extensions
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.Extensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.Extensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
  isExternal: true
  name: ForEach<T>(IEnumerable<T>, Action<T>)
  nameWithType: Extensions.ForEach<T>(IEnumerable<T>, Action<T>)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.Extensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)
  nameWithType.vb: Extensions.ForEach(Of T)(IEnumerable(Of T), Action(Of T))
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.Extensions.ForEach(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Action(Of T))
  name.vb: ForEach(Of T)(IEnumerable(Of T), Action(Of T))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.Extensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
    name: ForEach<T>
    nameWithType: Extensions.ForEach<T>
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.Extensions.ForEach<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.Extensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
    name: ForEach(Of T)
    nameWithType: Extensions.ForEach(Of T)
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.Extensions.ForEach(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.RelationalQueryableExtensions.FromSql``1(System.Linq.IQueryable{``0},System.String,System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.RelationalQueryableExtensions.FromSql``1(System.Linq.IQueryable{``0},System.String,System.Object[])
  isExternal: true
  name: FromSql<TEntity>(IQueryable<TEntity>, String, Object[])
  nameWithType: RelationalQueryableExtensions.FromSql<TEntity>(IQueryable<TEntity>, String, Object[])
  fullName: Microsoft.EntityFrameworkCore.RelationalQueryableExtensions.FromSql<TEntity>(System.Linq.IQueryable<TEntity>, System.String, System.Object[])
  nameWithType.vb: RelationalQueryableExtensions.FromSql(Of TEntity)(IQueryable(Of TEntity), String, Object())
  fullname.vb: Microsoft.EntityFrameworkCore.RelationalQueryableExtensions.FromSql(Of TEntity)(System.Linq.IQueryable(Of TEntity), System.String, System.Object())
  name.vb: FromSql(Of TEntity)(IQueryable(Of TEntity), String, Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalQueryableExtensions.FromSql``1(System.Linq.IQueryable{``0},System.String,System.Object[])
    name: FromSql<TEntity>
    nameWithType: RelationalQueryableExtensions.FromSql<TEntity>
    fullName: Microsoft.EntityFrameworkCore.RelationalQueryableExtensions.FromSql<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalQueryableExtensions.FromSql``1(System.Linq.IQueryable{``0},System.String,System.Object[])
    name: FromSql(Of TEntity)
    nameWithType: RelationalQueryableExtensions.FromSql(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.RelationalQueryableExtensions.FromSql(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.RelationalQueryableExtensions
  commentId: T:Microsoft.EntityFrameworkCore.RelationalQueryableExtensions
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: RelationalQueryableExtensions
  nameWithType: RelationalQueryableExtensions
  fullName: Microsoft.EntityFrameworkCore.RelationalQueryableExtensions
- uid: Microsoft.EntityFrameworkCore.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Internal
  fullName: Microsoft.EntityFrameworkCore.Internal
- uid: Microsoft.EntityFrameworkCore.Extensions.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Extensions.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Extensions.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Extensions.Internal
  fullName: Microsoft.EntityFrameworkCore.Extensions.Internal
- uid: Microsoft.EntityFrameworkCore.Specification.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.LocalView`1
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.LocalView`1
  isExternal: false
  name: LocalView<TEntity>
  nameWithType: LocalView<TEntity>
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.LocalView<TEntity>
  nameWithType.vb: LocalView(Of TEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.LocalView(Of TEntity)
  name.vb: LocalView(Of TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.LocalView`1
    name: LocalView
    nameWithType: LocalView
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.LocalView
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.LocalView`1
    name: LocalView
    nameWithType: LocalView
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.LocalView
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbSet`1.Local*
  commentId: Overload:Microsoft.EntityFrameworkCore.DbSet`1.Local
  isExternal: false
  name: Local
  nameWithType: DbSet<TEntity>.Local
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.Local
  nameWithType.vb: DbSet(Of TEntity).Local
  fullname.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).Local
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.LocalView{{TEntity}}
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.LocalView{`0}
  parent: Microsoft.EntityFrameworkCore.ChangeTracking
  definition: Microsoft.EntityFrameworkCore.ChangeTracking.LocalView`1
  name: LocalView<TEntity>
  nameWithType: LocalView<TEntity>
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.LocalView<TEntity>
  nameWithType.vb: LocalView(Of TEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.LocalView(Of TEntity)
  name.vb: LocalView(Of TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.LocalView`1
    name: LocalView
    nameWithType: LocalView
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.LocalView
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.LocalView`1
    name: LocalView
    nameWithType: LocalView
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.LocalView
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking
  commentId: N:Microsoft.EntityFrameworkCore.ChangeTracking
  isExternal: false
  name: Microsoft.EntityFrameworkCore.ChangeTracking
  nameWithType: Microsoft.EntityFrameworkCore.ChangeTracking
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking
- uid: Microsoft.EntityFrameworkCore.DbSet`1.Find*
  commentId: Overload:Microsoft.EntityFrameworkCore.DbSet`1.Find
  isExternal: false
  name: Find
  nameWithType: DbSet<TEntity>.Find
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.Find
  nameWithType.vb: DbSet(Of TEntity).Find
  fullname.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).Find
- uid: System.Object[]
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: '{TEntity}'
  commentId: '!:TEntity'
  definition: TEntity
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: TEntity
  isExternal: false
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: Microsoft.EntityFrameworkCore.DbSet`1.FindAsync*
  commentId: Overload:Microsoft.EntityFrameworkCore.DbSet`1.FindAsync
  isExternal: false
  name: FindAsync
  nameWithType: DbSet<TEntity>.FindAsync
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.FindAsync
  nameWithType.vb: DbSet(Of TEntity).FindAsync
  fullname.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).FindAsync
- uid: System.Threading.Tasks.Task{{TEntity}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TEntity>
  nameWithType: Task<TEntity>
  fullName: System.Threading.Tasks.Task<TEntity>
  nameWithType.vb: Task(Of TEntity)
  fullname.vb: System.Threading.Tasks.Task(Of TEntity)
  name.vb: Task(Of TEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: Microsoft.EntityFrameworkCore.EntityState.Added
  commentId: F:Microsoft.EntityFrameworkCore.EntityState.Added
- uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: false
  name: SaveChanges()
  nameWithType: DbContext.SaveChanges()
  fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChanges()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
    name: SaveChanges
    nameWithType: DbContext.SaveChanges
    fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
    name: SaveChanges
    nameWithType: DbContext.SaveChanges
    fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1
  isExternal: false
  name: EntityEntry<TEntity>
  nameWithType: EntityEntry<TEntity>
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry<TEntity>
  nameWithType.vb: EntityEntry(Of TEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry(Of TEntity)
  name.vb: EntityEntry(Of TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1
    name: EntityEntry
    nameWithType: EntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1
    name: EntityEntry
    nameWithType: EntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbSet`1.Add*
  commentId: Overload:Microsoft.EntityFrameworkCore.DbSet`1.Add
  isExternal: false
  name: Add
  nameWithType: DbSet<TEntity>.Add
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.Add
  nameWithType.vb: DbSet(Of TEntity).Add
  fullname.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).Add
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry{{TEntity}}
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry{``0}
  parent: Microsoft.EntityFrameworkCore.ChangeTracking
  definition: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1
  name: EntityEntry<TEntity>
  nameWithType: EntityEntry<TEntity>
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry<TEntity>
  nameWithType.vb: EntityEntry(Of TEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry(Of TEntity)
  name.vb: EntityEntry(Of TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1
    name: EntityEntry
    nameWithType: EntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1
    name: EntityEntry
    nameWithType: EntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbSet`1.AddAsync*
  commentId: Overload:Microsoft.EntityFrameworkCore.DbSet`1.AddAsync
  isExternal: false
  name: AddAsync
  nameWithType: DbSet<TEntity>.AddAsync
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.AddAsync
  nameWithType.vb: DbSet(Of TEntity).AddAsync
  fullname.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).AddAsync
- uid: System.Threading.Tasks.Task{Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry{{TEntity}}}
  commentId: T:System.Threading.Tasks.Task{Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry{``0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<EntityEntry<TEntity>>
  nameWithType: Task<EntityEntry<TEntity>>
  fullName: System.Threading.Tasks.Task<Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry<TEntity>>
  nameWithType.vb: Task(Of EntityEntry(Of TEntity))
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry(Of TEntity))
  name.vb: Task(Of EntityEntry(Of TEntity))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1
    name: EntityEntry
    nameWithType: EntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1
    name: EntityEntry
    nameWithType: EntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.EntityState.Unchanged
  commentId: F:Microsoft.EntityFrameworkCore.EntityState.Unchanged
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  parent: Microsoft.EntityFrameworkCore.ChangeTracking
  isExternal: false
  name: EntityEntry
  nameWithType: EntityEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
- uid: Microsoft.EntityFrameworkCore.DbSet`1.Attach*
  commentId: Overload:Microsoft.EntityFrameworkCore.DbSet`1.Attach
  isExternal: false
  name: Attach
  nameWithType: DbSet<TEntity>.Attach
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.Attach
  nameWithType.vb: DbSet(Of TEntity).Attach
  fullname.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).Attach
- uid: Microsoft.EntityFrameworkCore.EntityState.Deleted
  commentId: F:Microsoft.EntityFrameworkCore.EntityState.Deleted
- uid: Microsoft.EntityFrameworkCore.DbSet`1.Attach(`0)
  commentId: M:Microsoft.EntityFrameworkCore.DbSet`1.Attach(`0)
  isExternal: false
  name: Attach(TEntity)
  nameWithType: DbSet<TEntity>.Attach(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.Attach(TEntity)
  nameWithType.vb: DbSet(Of TEntity).Attach(TEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).Attach(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1.Attach(`0)
    name: Attach
    nameWithType: DbSet<TEntity>.Attach
    fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.Attach
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1.Attach(`0)
    name: Attach
    nameWithType: DbSet(Of TEntity).Attach
    fullName: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).Attach
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbSet`1.Remove*
  commentId: Overload:Microsoft.EntityFrameworkCore.DbSet`1.Remove
  isExternal: false
  name: Remove
  nameWithType: DbSet<TEntity>.Remove
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.Remove
  nameWithType.vb: DbSet(Of TEntity).Remove
  fullname.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).Remove
- uid: Microsoft.EntityFrameworkCore.EntityState.Modified
  commentId: F:Microsoft.EntityFrameworkCore.EntityState.Modified
- uid: Microsoft.EntityFrameworkCore.DbSet`1.Update*
  commentId: Overload:Microsoft.EntityFrameworkCore.DbSet`1.Update
  isExternal: false
  name: Update
  nameWithType: DbSet<TEntity>.Update
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.Update
  nameWithType.vb: DbSet(Of TEntity).Update
  fullname.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).Update
- uid: Microsoft.EntityFrameworkCore.DbSet`1.AddRange*
  commentId: Overload:Microsoft.EntityFrameworkCore.DbSet`1.AddRange
  isExternal: false
  name: AddRange
  nameWithType: DbSet<TEntity>.AddRange
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.AddRange
  nameWithType.vb: DbSet(Of TEntity).AddRange
  fullname.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).AddRange
- uid: '{TEntity}[]'
  name: TEntity[]
  nameWithType: TEntity[]
  fullName: TEntity[]
  nameWithType.vb: TEntity()
  fullname.vb: TEntity()
  name.vb: TEntity()
  spec.csharp:
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.EntityFrameworkCore.DbSet`1.AddRangeAsync*
  commentId: Overload:Microsoft.EntityFrameworkCore.DbSet`1.AddRangeAsync
  isExternal: false
  name: AddRangeAsync
  nameWithType: DbSet<TEntity>.AddRangeAsync
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.AddRangeAsync
  nameWithType.vb: DbSet(Of TEntity).AddRangeAsync
  fullname.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).AddRangeAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.EntityFrameworkCore.DbSet`1.AttachRange*
  commentId: Overload:Microsoft.EntityFrameworkCore.DbSet`1.AttachRange
  isExternal: false
  name: AttachRange
  nameWithType: DbSet<TEntity>.AttachRange
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.AttachRange
  nameWithType.vb: DbSet(Of TEntity).AttachRange
  fullname.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).AttachRange
- uid: Microsoft.EntityFrameworkCore.DbSet`1.AttachRange(`0[])
  commentId: M:Microsoft.EntityFrameworkCore.DbSet`1.AttachRange(`0[])
  isExternal: false
  name: AttachRange(TEntity[])
  nameWithType: DbSet<TEntity>.AttachRange(TEntity[])
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.AttachRange(TEntity[])
  nameWithType.vb: DbSet(Of TEntity).AttachRange(TEntity())
  fullname.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).AttachRange(TEntity())
  name.vb: AttachRange(TEntity())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1.AttachRange(`0[])
    name: AttachRange
    nameWithType: DbSet<TEntity>.AttachRange
    fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.AttachRange
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1.AttachRange(`0[])
    name: AttachRange
    nameWithType: DbSet(Of TEntity).AttachRange
    fullName: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).AttachRange
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbSet`1.RemoveRange*
  commentId: Overload:Microsoft.EntityFrameworkCore.DbSet`1.RemoveRange
  isExternal: false
  name: RemoveRange
  nameWithType: DbSet<TEntity>.RemoveRange
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.RemoveRange
  nameWithType.vb: DbSet(Of TEntity).RemoveRange
  fullname.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).RemoveRange
- uid: Microsoft.EntityFrameworkCore.DbSet`1.UpdateRange*
  commentId: Overload:Microsoft.EntityFrameworkCore.DbSet`1.UpdateRange
  isExternal: false
  name: UpdateRange
  nameWithType: DbSet<TEntity>.UpdateRange
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.UpdateRange
  nameWithType.vb: DbSet(Of TEntity).UpdateRange
  fullname.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).UpdateRange
- uid: Microsoft.EntityFrameworkCore.DbSet`1.AttachRange(System.Collections.Generic.IEnumerable{`0})
  commentId: M:Microsoft.EntityFrameworkCore.DbSet`1.AttachRange(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: AttachRange(IEnumerable<TEntity>)
  nameWithType: DbSet<TEntity>.AttachRange(IEnumerable<TEntity>)
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.AttachRange(System.Collections.Generic.IEnumerable<TEntity>)
  nameWithType.vb: DbSet(Of TEntity).AttachRange(IEnumerable(Of TEntity))
  fullname.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).AttachRange(System.Collections.Generic.IEnumerable(Of TEntity))
  name.vb: AttachRange(IEnumerable(Of TEntity))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1.AttachRange(System.Collections.Generic.IEnumerable{`0})
    name: AttachRange
    nameWithType: DbSet<TEntity>.AttachRange
    fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.AttachRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1.AttachRange(System.Collections.Generic.IEnumerable{`0})
    name: AttachRange
    nameWithType: DbSet(Of TEntity).AttachRange
    fullName: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).AttachRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullname.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbSet`1.System#Collections#Generic#IEnumerable{TEntity}#GetEnumerator*
  commentId: Overload:Microsoft.EntityFrameworkCore.DbSet`1.System#Collections#Generic#IEnumerable{TEntity}#GetEnumerator
  isExternal: false
  name: IEnumerable<TEntity>.GetEnumerator
  nameWithType: DbSet<TEntity>.IEnumerable<TEntity>.GetEnumerator
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.System.Collections.Generic.IEnumerable<TEntity>.GetEnumerator
  nameWithType.vb: DbSet(Of TEntity).System.Collections.Generic.IEnumerable<TEntity>.GetEnumerator
  fullname.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).System.Collections.Generic.IEnumerable<TEntity>.GetEnumerator
  name.vb: System.Collections.Generic.IEnumerable<TEntity>.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{{TEntity}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{`0}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{{TEntity}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<TEntity>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<TEntity>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of TEntity).GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of TEntity).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<TEntity>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<TEntity>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of TEntity).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of TEntity).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{{TEntity}}
  commentId: T:System.Collections.Generic.IEnumerator{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<TEntity>
  nameWithType: IEnumerator<TEntity>
  fullName: System.Collections.Generic.IEnumerator<TEntity>
  nameWithType.vb: IEnumerator(Of TEntity)
  fullname.vb: System.Collections.Generic.IEnumerator(Of TEntity)
  name.vb: IEnumerator(Of TEntity)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: Microsoft.EntityFrameworkCore.DbSet`1.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:Microsoft.EntityFrameworkCore.DbSet`1.System#Collections#IEnumerable#GetEnumerator
  isExternal: false
  name: IEnumerable.GetEnumerator
  nameWithType: DbSet<TEntity>.IEnumerable.GetEnumerator
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: DbSet(Of TEntity).System.Collections.IEnumerable.GetEnumerator
  fullname.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbSet`1.Microsoft#EntityFrameworkCore#Query#Internal#IAsyncEnumerableAccessor{TEntity}#AsyncEnumerable*
  commentId: Overload:Microsoft.EntityFrameworkCore.DbSet`1.Microsoft#EntityFrameworkCore#Query#Internal#IAsyncEnumerableAccessor{TEntity}#AsyncEnumerable
  isExternal: false
  name: IAsyncEnumerableAccessor<TEntity>.AsyncEnumerable
  nameWithType: DbSet<TEntity>.IAsyncEnumerableAccessor<TEntity>.AsyncEnumerable
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor<TEntity>.AsyncEnumerable
  nameWithType.vb: DbSet(Of TEntity).Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor<TEntity>.AsyncEnumerable
  fullname.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor<TEntity>.AsyncEnumerable
  name.vb: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor<TEntity>.AsyncEnumerable
- uid: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor{{TEntity}}.AsyncEnumerable
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor{`0}.AsyncEnumerable
  parent: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor{{TEntity}}
  definition: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor`1.AsyncEnumerable
  name: AsyncEnumerable
  nameWithType: IAsyncEnumerableAccessor<TEntity>.AsyncEnumerable
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor<TEntity>.AsyncEnumerable
  nameWithType.vb: IAsyncEnumerableAccessor(Of TEntity).AsyncEnumerable
  fullname.vb: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor(Of TEntity).AsyncEnumerable
- uid: IAsyncEnumerable{{TEntity}}
  commentId: '!:IAsyncEnumerable{`0}'
  definition: IAsyncEnumerable`1
  name: IAsyncEnumerable<TEntity>
  nameWithType: IAsyncEnumerable<TEntity>
  fullName: IAsyncEnumerable<TEntity>
  nameWithType.vb: IAsyncEnumerable(Of TEntity)
  fullname.vb: IAsyncEnumerable(Of TEntity)
  name.vb: IAsyncEnumerable(Of TEntity)
  spec.csharp:
  - uid: IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor`1.AsyncEnumerable
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor`1.AsyncEnumerable
  isExternal: false
  name: AsyncEnumerable
  nameWithType: IAsyncEnumerableAccessor<T>.AsyncEnumerable
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor<T>.AsyncEnumerable
  nameWithType.vb: IAsyncEnumerableAccessor(Of T).AsyncEnumerable
  fullname.vb: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor(Of T).AsyncEnumerable
- uid: IAsyncEnumerable`1
  isExternal: true
  name: IAsyncEnumerable<>
  nameWithType: IAsyncEnumerable<>
  fullName: IAsyncEnumerable<>
  nameWithType.vb: IAsyncEnumerable(Of )
  fullname.vb: IAsyncEnumerable(Of )
  name.vb: IAsyncEnumerable(Of )
  spec.csharp:
  - uid: IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbSet`1.System#Linq#IQueryable#ElementType*
  commentId: Overload:Microsoft.EntityFrameworkCore.DbSet`1.System#Linq#IQueryable#ElementType
  isExternal: false
  name: IQueryable.ElementType
  nameWithType: DbSet<TEntity>.IQueryable.ElementType
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.System.Linq.IQueryable.ElementType
  nameWithType.vb: DbSet(Of TEntity).System.Linq.IQueryable.ElementType
  fullname.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).System.Linq.IQueryable.ElementType
  name.vb: System.Linq.IQueryable.ElementType
- uid: System.Linq.IQueryable.ElementType
  commentId: P:System.Linq.IQueryable.ElementType
  parent: System.Linq.IQueryable
  isExternal: true
  name: ElementType
  nameWithType: IQueryable.ElementType
  fullName: System.Linq.IQueryable.ElementType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.EntityFrameworkCore.DbSet`1.System#Linq#IQueryable#Expression*
  commentId: Overload:Microsoft.EntityFrameworkCore.DbSet`1.System#Linq#IQueryable#Expression
  isExternal: false
  name: IQueryable.Expression
  nameWithType: DbSet<TEntity>.IQueryable.Expression
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.System.Linq.IQueryable.Expression
  nameWithType.vb: DbSet(Of TEntity).System.Linq.IQueryable.Expression
  fullname.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).System.Linq.IQueryable.Expression
  name.vb: System.Linq.IQueryable.Expression
- uid: System.Linq.IQueryable.Expression
  commentId: P:System.Linq.IQueryable.Expression
  parent: System.Linq.IQueryable
  isExternal: true
  name: Expression
  nameWithType: IQueryable.Expression
  fullName: System.Linq.IQueryable.Expression
- uid: System.Linq.Expressions.Expression
  commentId: T:System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: Microsoft.EntityFrameworkCore.DbSet`1.System#Linq#IQueryable#Provider*
  commentId: Overload:Microsoft.EntityFrameworkCore.DbSet`1.System#Linq#IQueryable#Provider
  isExternal: false
  name: IQueryable.Provider
  nameWithType: DbSet<TEntity>.IQueryable.Provider
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.System.Linq.IQueryable.Provider
  nameWithType.vb: DbSet(Of TEntity).System.Linq.IQueryable.Provider
  fullname.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).System.Linq.IQueryable.Provider
  name.vb: System.Linq.IQueryable.Provider
- uid: System.Linq.IQueryable.Provider
  commentId: P:System.Linq.IQueryable.Provider
  parent: System.Linq.IQueryable
  isExternal: true
  name: Provider
  nameWithType: IQueryable.Provider
  fullName: System.Linq.IQueryable.Provider
- uid: System.Linq.IQueryProvider
  commentId: T:System.Linq.IQueryProvider
  parent: System.Linq
  isExternal: true
  name: IQueryProvider
  nameWithType: IQueryProvider
  fullName: System.Linq.IQueryProvider
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: Microsoft.EntityFrameworkCore.DbSet`1.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{System#IServiceProvider}#Instance*
  commentId: Overload:Microsoft.EntityFrameworkCore.DbSet`1.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{System#IServiceProvider}#Instance
  isExternal: false
  name: IInfrastructure<IServiceProvider>.Instance
  nameWithType: DbSet<TEntity>.IInfrastructure<IServiceProvider>.Instance
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.Instance
  nameWithType.vb: DbSet(Of TEntity).Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.Instance
  fullname.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.Instance
  name.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.Instance
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider}.Instance
  commentId: P:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider}.Instance
  parent: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider}
  definition: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1.Instance
  name: Instance
  nameWithType: IInfrastructure<IServiceProvider>.Instance
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.Instance
  nameWithType.vb: IInfrastructure(Of IServiceProvider).Instance
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of System.IServiceProvider).Instance
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1.Instance
  commentId: P:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1.Instance
  isExternal: false
  name: Instance
  nameWithType: IInfrastructure<T>.Instance
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<T>.Instance
  nameWithType.vb: IInfrastructure(Of T).Instance
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of T).Instance
