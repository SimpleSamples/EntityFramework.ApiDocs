### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IQueryTrackingListener
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IQueryTrackingListener
  id: IQueryTrackingListener
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  children:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IQueryTrackingListener.TrackedFromQuery(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,ISet{Microsoft.EntityFrameworkCore.Metadata.IForeignKey})
  langs:
  - csharp
  - vb
  name: IQueryTrackingListener
  nameWithType: IQueryTrackingListener
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IQueryTrackingListener
  type: Interface
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IQueryTrackingListener.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IQueryTrackingListener
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IQueryTrackingListener.cs
    startLine: 13
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public interface IQueryTrackingListener
    content.vb: Public Interface IQueryTrackingListener
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IQueryTrackingListener.TrackedFromQuery(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,ISet{Microsoft.EntityFrameworkCore.Metadata.IForeignKey})
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IQueryTrackingListener.TrackedFromQuery(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,ISet{Microsoft.EntityFrameworkCore.Metadata.IForeignKey})
  id: TrackedFromQuery(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,ISet{Microsoft.EntityFrameworkCore.Metadata.IForeignKey})
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IQueryTrackingListener
  langs:
  - csharp
  - vb
  name: TrackedFromQuery(InternalEntityEntry, ISet<IForeignKey>)
  nameWithType: IQueryTrackingListener.TrackedFromQuery(InternalEntityEntry, ISet<IForeignKey>)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IQueryTrackingListener.TrackedFromQuery(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, ISet<Microsoft.EntityFrameworkCore.Metadata.IForeignKey>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IQueryTrackingListener.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TrackedFromQuery
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IQueryTrackingListener.cs
    startLine: 19
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: void TrackedFromQuery(InternalEntityEntry entry, ISet<IForeignKey> handledForeignKeys)
    content.vb: Sub TrackedFromQuery(entry As InternalEntityEntry, handledForeignKeys As ISet(Of IForeignKey))
    parameters:
    - id: entry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    - id: handledForeignKeys
      type: ISet{Microsoft.EntityFrameworkCore.Metadata.IForeignKey}
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IQueryTrackingListener.TrackedFromQuery*
  nameWithType.vb: IQueryTrackingListener.TrackedFromQuery(InternalEntityEntry, ISet(Of IForeignKey))
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IQueryTrackingListener.TrackedFromQuery(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, ISet(Of Microsoft.EntityFrameworkCore.Metadata.IForeignKey))
  name.vb: TrackedFromQuery(InternalEntityEntry, ISet(Of IForeignKey))
references:
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  commentId: N:Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  nameWithType: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IQueryTrackingListener.TrackedFromQuery*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IQueryTrackingListener.TrackedFromQuery
  isExternal: false
  name: TrackedFromQuery
  nameWithType: IQueryTrackingListener.TrackedFromQuery
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IQueryTrackingListener.TrackedFromQuery
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: InternalEntityEntry
  nameWithType: InternalEntityEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
- uid: ISet{Microsoft.EntityFrameworkCore.Metadata.IForeignKey}
  commentId: '!:ISet{Microsoft.EntityFrameworkCore.Metadata.IForeignKey}'
  definition: ISet`1
  name: ISet<IForeignKey>
  nameWithType: ISet<IForeignKey>
  fullName: ISet<Microsoft.EntityFrameworkCore.Metadata.IForeignKey>
  nameWithType.vb: ISet(Of IForeignKey)
  fullname.vb: ISet(Of Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  name.vb: ISet(Of IForeignKey)
  spec.csharp:
  - uid: ISet`1
    name: ISet
    nameWithType: ISet
    fullName: ISet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    name: IForeignKey
    nameWithType: IForeignKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ISet`1
    name: ISet
    nameWithType: ISet
    fullName: ISet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    name: IForeignKey
    nameWithType: IForeignKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  - name: )
    nameWithType: )
    fullName: )
- uid: ISet`1
  isExternal: true
  name: ISet<>
  nameWithType: ISet<>
  fullName: ISet<>
  nameWithType.vb: ISet(Of )
  fullname.vb: ISet(Of )
  name.vb: ISet(Of )
  spec.csharp:
  - uid: ISet`1
    name: ISet
    nameWithType: ISet
    fullName: ISet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ISet`1
    name: ISet
    nameWithType: ISet
    fullName: ISet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
