### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMapFactoryFactory
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMapFactoryFactory
  id: DependentsMapFactoryFactory
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  children:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMapFactoryFactory.Create(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  langs:
  - csharp
  - vb
  name: DependentsMapFactoryFactory
  nameWithType: DependentsMapFactoryFactory
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMapFactoryFactory
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/DependentsMapFactoryFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DependentsMapFactoryFactory
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/DependentsMapFactoryFactory.cs
    startLine: 15
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class DependentsMapFactoryFactory : IdentityMapFactoryFactoryBase'
    content.vb: >-
      Public Class DependentsMapFactoryFactory
          Inherits IdentityMapFactoryFactoryBase
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMapFactoryFactoryBase
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMapFactoryFactoryBase.GetKeyType(Microsoft.EntityFrameworkCore.Metadata.IKey)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMapFactoryFactory.Create(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMapFactoryFactory.Create(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  id: Create(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMapFactoryFactory
  langs:
  - csharp
  - vb
  name: Create(IForeignKey)
  nameWithType: DependentsMapFactoryFactory.Create(IForeignKey)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMapFactoryFactory.Create(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/DependentsMapFactoryFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Create
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/DependentsMapFactoryFactory.cs
    startLine: 21
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual Func<IDependentsMap> Create(IForeignKey foreignKey)
    content.vb: Public Overridable Function Create(foreignKey As IForeignKey) As Func(Of IDependentsMap)
    parameters:
    - id: foreignKey
      type: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    return:
      type: System.Func{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap}
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMapFactoryFactory.Create*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  commentId: N:Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  nameWithType: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMapFactoryFactoryBase
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMapFactoryFactoryBase
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: IdentityMapFactoryFactoryBase
  nameWithType: IdentityMapFactoryFactoryBase
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMapFactoryFactoryBase
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMapFactoryFactoryBase.GetKeyType(Microsoft.EntityFrameworkCore.Metadata.IKey)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMapFactoryFactoryBase.GetKeyType(Microsoft.EntityFrameworkCore.Metadata.IKey)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMapFactoryFactoryBase
  isExternal: false
  name: GetKeyType(IKey)
  nameWithType: IdentityMapFactoryFactoryBase.GetKeyType(IKey)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMapFactoryFactoryBase.GetKeyType(Microsoft.EntityFrameworkCore.Metadata.IKey)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMapFactoryFactoryBase.GetKeyType(Microsoft.EntityFrameworkCore.Metadata.IKey)
    name: GetKeyType
    nameWithType: IdentityMapFactoryFactoryBase.GetKeyType
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMapFactoryFactoryBase.GetKeyType
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IKey
    name: IKey
    nameWithType: IKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMapFactoryFactoryBase.GetKeyType(Microsoft.EntityFrameworkCore.Metadata.IKey)
    name: GetKeyType
    nameWithType: IdentityMapFactoryFactoryBase.GetKeyType
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMapFactoryFactoryBase.GetKeyType
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IKey
    name: IKey
    nameWithType: IKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMapFactoryFactory.Create*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMapFactoryFactory.Create
  isExternal: false
  name: Create
  nameWithType: DependentsMapFactoryFactory.Create
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMapFactoryFactory.Create
- uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IForeignKey
  nameWithType: IForeignKey
  fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
- uid: System.Func{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap}
  commentId: T:System.Func{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap}
  parent: System
  definition: System.Func`1
  name: Func<IDependentsMap>
  nameWithType: Func<IDependentsMap>
  fullName: System.Func<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap>
  nameWithType.vb: Func(Of IDependentsMap)
  fullname.vb: System.Func(Of Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap)
  name.vb: Func(Of IDependentsMap)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap
    name: IDependentsMap
    nameWithType: IDependentsMap
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap
    name: IDependentsMap
    nameWithType: IDependentsMap
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullname.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
