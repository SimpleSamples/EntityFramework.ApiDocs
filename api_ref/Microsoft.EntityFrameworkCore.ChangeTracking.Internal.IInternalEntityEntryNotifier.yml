### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier
  id: IInternalEntityEntryNotifier
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  children:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.KeyPropertyChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IKey},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IForeignKey},System.Object,System.Object)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.NavigationCollectionChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation,System.Collections.Generic.IEnumerable{System.Object},System.Collections.Generic.IEnumerable{System.Object})
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.NavigationReferenceChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation,System.Object,System.Object)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.PropertyChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Boolean)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.PropertyChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.StateChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState,System.Boolean)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.StateChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.TrackedFromQuery(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,ISet{Microsoft.EntityFrameworkCore.Metadata.IForeignKey})
  langs:
  - csharp
  - vb
  name: IInternalEntityEntryNotifier
  nameWithType: IInternalEntityEntryNotifier
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier
  type: Interface
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IInternalEntityEntryNotifier.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IInternalEntityEntryNotifier
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IInternalEntityEntryNotifier.cs
    startLine: 13
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public interface IInternalEntityEntryNotifier
    content.vb: Public Interface IInternalEntityEntryNotifier
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.StateChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.StateChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState)
  id: StateChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier
  langs:
  - csharp
  - vb
  name: StateChanging(InternalEntityEntry, EntityState)
  nameWithType: IInternalEntityEntryNotifier.StateChanging(InternalEntityEntry, EntityState)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.StateChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, Microsoft.EntityFrameworkCore.EntityState)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IInternalEntityEntryNotifier.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: StateChanging
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IInternalEntityEntryNotifier.cs
    startLine: 19
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: void StateChanging(InternalEntityEntry entry, EntityState newState)
    content.vb: Sub StateChanging(entry As InternalEntityEntry, newState As EntityState)
    parameters:
    - id: entry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    - id: newState
      type: Microsoft.EntityFrameworkCore.EntityState
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.StateChanging*
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.StateChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState,System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.StateChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState,System.Boolean)
  id: StateChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState,System.Boolean)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier
  langs:
  - csharp
  - vb
  name: StateChanged(InternalEntityEntry, EntityState, Boolean)
  nameWithType: IInternalEntityEntryNotifier.StateChanged(InternalEntityEntry, EntityState, Boolean)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.StateChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, Microsoft.EntityFrameworkCore.EntityState, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IInternalEntityEntryNotifier.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: StateChanged
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IInternalEntityEntryNotifier.cs
    startLine: 25
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: void StateChanged(InternalEntityEntry entry, EntityState oldState, bool fromQuery)
    content.vb: Sub StateChanged(entry As InternalEntityEntry, oldState As EntityState, fromQuery As Boolean)
    parameters:
    - id: entry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    - id: oldState
      type: Microsoft.EntityFrameworkCore.EntityState
    - id: fromQuery
      type: System.Boolean
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.StateChanged*
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.TrackedFromQuery(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,ISet{Microsoft.EntityFrameworkCore.Metadata.IForeignKey})
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.TrackedFromQuery(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,ISet{Microsoft.EntityFrameworkCore.Metadata.IForeignKey})
  id: TrackedFromQuery(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,ISet{Microsoft.EntityFrameworkCore.Metadata.IForeignKey})
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier
  langs:
  - csharp
  - vb
  name: TrackedFromQuery(InternalEntityEntry, ISet<IForeignKey>)
  nameWithType: IInternalEntityEntryNotifier.TrackedFromQuery(InternalEntityEntry, ISet<IForeignKey>)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.TrackedFromQuery(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, ISet<Microsoft.EntityFrameworkCore.Metadata.IForeignKey>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IInternalEntityEntryNotifier.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TrackedFromQuery
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IInternalEntityEntryNotifier.cs
    startLine: 31
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: void TrackedFromQuery(InternalEntityEntry entry, ISet<IForeignKey> handledForeignKeys)
    content.vb: Sub TrackedFromQuery(entry As InternalEntityEntry, handledForeignKeys As ISet(Of IForeignKey))
    parameters:
    - id: entry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    - id: handledForeignKeys
      type: ISet{Microsoft.EntityFrameworkCore.Metadata.IForeignKey}
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.TrackedFromQuery*
  nameWithType.vb: IInternalEntityEntryNotifier.TrackedFromQuery(InternalEntityEntry, ISet(Of IForeignKey))
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.TrackedFromQuery(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, ISet(Of Microsoft.EntityFrameworkCore.Metadata.IForeignKey))
  name.vb: TrackedFromQuery(InternalEntityEntry, ISet(Of IForeignKey))
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.NavigationReferenceChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation,System.Object,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.NavigationReferenceChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation,System.Object,System.Object)
  id: NavigationReferenceChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation,System.Object,System.Object)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier
  langs:
  - csharp
  - vb
  name: NavigationReferenceChanged(InternalEntityEntry, INavigation, Object, Object)
  nameWithType: IInternalEntityEntryNotifier.NavigationReferenceChanged(InternalEntityEntry, INavigation, Object, Object)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.NavigationReferenceChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, Microsoft.EntityFrameworkCore.Metadata.INavigation, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IInternalEntityEntryNotifier.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: NavigationReferenceChanged
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IInternalEntityEntryNotifier.cs
    startLine: 39
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: void NavigationReferenceChanged(InternalEntityEntry entry, INavigation navigation, object oldValue, object newValue)
    content.vb: Sub NavigationReferenceChanged(entry As InternalEntityEntry, navigation As INavigation, oldValue As Object, newValue As Object)
    parameters:
    - id: entry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    - id: navigation
      type: Microsoft.EntityFrameworkCore.Metadata.INavigation
    - id: oldValue
      type: System.Object
    - id: newValue
      type: System.Object
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.NavigationReferenceChanged*
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.NavigationCollectionChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation,System.Collections.Generic.IEnumerable{System.Object},System.Collections.Generic.IEnumerable{System.Object})
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.NavigationCollectionChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation,System.Collections.Generic.IEnumerable{System.Object},System.Collections.Generic.IEnumerable{System.Object})
  id: NavigationCollectionChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation,System.Collections.Generic.IEnumerable{System.Object},System.Collections.Generic.IEnumerable{System.Object})
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier
  langs:
  - csharp
  - vb
  name: NavigationCollectionChanged(InternalEntityEntry, INavigation, IEnumerable<Object>, IEnumerable<Object>)
  nameWithType: IInternalEntityEntryNotifier.NavigationCollectionChanged(InternalEntityEntry, INavigation, IEnumerable<Object>, IEnumerable<Object>)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.NavigationCollectionChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, Microsoft.EntityFrameworkCore.Metadata.INavigation, System.Collections.Generic.IEnumerable<System.Object>, System.Collections.Generic.IEnumerable<System.Object>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IInternalEntityEntryNotifier.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: NavigationCollectionChanged
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IInternalEntityEntryNotifier.cs
    startLine: 49
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: void NavigationCollectionChanged(InternalEntityEntry entry, INavigation navigation, IEnumerable<object> added, IEnumerable<object> removed)
    content.vb: Sub NavigationCollectionChanged(entry As InternalEntityEntry, navigation As INavigation, added As IEnumerable(Of Object), removed As IEnumerable(Of Object))
    parameters:
    - id: entry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    - id: navigation
      type: Microsoft.EntityFrameworkCore.Metadata.INavigation
    - id: added
      type: System.Collections.Generic.IEnumerable{System.Object}
    - id: removed
      type: System.Collections.Generic.IEnumerable{System.Object}
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.NavigationCollectionChanged*
  nameWithType.vb: IInternalEntityEntryNotifier.NavigationCollectionChanged(InternalEntityEntry, INavigation, IEnumerable(Of Object), IEnumerable(Of Object))
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.NavigationCollectionChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, Microsoft.EntityFrameworkCore.Metadata.INavigation, System.Collections.Generic.IEnumerable(Of System.Object), System.Collections.Generic.IEnumerable(Of System.Object))
  name.vb: NavigationCollectionChanged(InternalEntityEntry, INavigation, IEnumerable(Of Object), IEnumerable(Of Object))
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.KeyPropertyChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IKey},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IForeignKey},System.Object,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.KeyPropertyChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IKey},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IForeignKey},System.Object,System.Object)
  id: KeyPropertyChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IKey},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IForeignKey},System.Object,System.Object)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier
  langs:
  - csharp
  - vb
  name: KeyPropertyChanged(InternalEntityEntry, IProperty, IReadOnlyList<IKey>, IReadOnlyList<IForeignKey>, Object, Object)
  nameWithType: IInternalEntityEntryNotifier.KeyPropertyChanged(InternalEntityEntry, IProperty, IReadOnlyList<IKey>, IReadOnlyList<IForeignKey>, Object, Object)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.KeyPropertyChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, Microsoft.EntityFrameworkCore.Metadata.IProperty, System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.IKey>, System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.IForeignKey>, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IInternalEntityEntryNotifier.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: KeyPropertyChanged
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IInternalEntityEntryNotifier.cs
    startLine: 59
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: void KeyPropertyChanged(InternalEntityEntry entry, IProperty property, IReadOnlyList<IKey> keys, IReadOnlyList<IForeignKey> foreignKeys, object oldValue, object newValue)
    content.vb: Sub KeyPropertyChanged(entry As InternalEntityEntry, property As IProperty, keys As IReadOnlyList(Of IKey), foreignKeys As IReadOnlyList(Of IForeignKey), oldValue As Object, newValue As Object)
    parameters:
    - id: entry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    - id: property
      type: Microsoft.EntityFrameworkCore.Metadata.IProperty
    - id: keys
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IKey}
    - id: foreignKeys
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IForeignKey}
    - id: oldValue
      type: System.Object
    - id: newValue
      type: System.Object
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.KeyPropertyChanged*
  nameWithType.vb: IInternalEntityEntryNotifier.KeyPropertyChanged(InternalEntityEntry, IProperty, IReadOnlyList(Of IKey), IReadOnlyList(Of IForeignKey), Object, Object)
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.KeyPropertyChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, Microsoft.EntityFrameworkCore.Metadata.IProperty, System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.IKey), System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.IForeignKey), System.Object, System.Object)
  name.vb: KeyPropertyChanged(InternalEntityEntry, IProperty, IReadOnlyList(Of IKey), IReadOnlyList(Of IForeignKey), Object, Object)
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.PropertyChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.PropertyChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Boolean)
  id: PropertyChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Boolean)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier
  langs:
  - csharp
  - vb
  name: PropertyChanged(InternalEntityEntry, IPropertyBase, Boolean)
  nameWithType: IInternalEntityEntryNotifier.PropertyChanged(InternalEntityEntry, IPropertyBase, Boolean)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.PropertyChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, Microsoft.EntityFrameworkCore.Metadata.IPropertyBase, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IInternalEntityEntryNotifier.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: PropertyChanged
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IInternalEntityEntryNotifier.cs
    startLine: 71
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: void PropertyChanged(InternalEntityEntry entry, IPropertyBase property, bool setModified)
    content.vb: Sub PropertyChanged(entry As InternalEntityEntry, property As IPropertyBase, setModified As Boolean)
    parameters:
    - id: entry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    - id: property
      type: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
    - id: setModified
      type: System.Boolean
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.PropertyChanged*
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.PropertyChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.PropertyChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  id: PropertyChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier
  langs:
  - csharp
  - vb
  name: PropertyChanging(InternalEntityEntry, IPropertyBase)
  nameWithType: IInternalEntityEntryNotifier.PropertyChanging(InternalEntityEntry, IPropertyBase)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.PropertyChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IInternalEntityEntryNotifier.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: PropertyChanging
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IInternalEntityEntryNotifier.cs
    startLine: 77
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: void PropertyChanging(InternalEntityEntry entry, IPropertyBase property)
    content.vb: Sub PropertyChanging(entry As InternalEntityEntry, property As IPropertyBase)
    parameters:
    - id: entry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    - id: property
      type: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.PropertyChanging*
references:
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  commentId: N:Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  nameWithType: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.StateChanging*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.StateChanging
  isExternal: false
  name: StateChanging
  nameWithType: IInternalEntityEntryNotifier.StateChanging
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.StateChanging
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: InternalEntityEntry
  nameWithType: InternalEntityEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
- uid: Microsoft.EntityFrameworkCore.EntityState
  commentId: T:Microsoft.EntityFrameworkCore.EntityState
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: EntityState
  nameWithType: EntityState
  fullName: Microsoft.EntityFrameworkCore.EntityState
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: false
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.StateChanged*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.StateChanged
  isExternal: false
  name: StateChanged
  nameWithType: IInternalEntityEntryNotifier.StateChanged
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.StateChanged
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.TrackedFromQuery*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.TrackedFromQuery
  isExternal: false
  name: TrackedFromQuery
  nameWithType: IInternalEntityEntryNotifier.TrackedFromQuery
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.TrackedFromQuery
- uid: ISet{Microsoft.EntityFrameworkCore.Metadata.IForeignKey}
  commentId: '!:ISet{Microsoft.EntityFrameworkCore.Metadata.IForeignKey}'
  definition: ISet`1
  name: ISet<IForeignKey>
  nameWithType: ISet<IForeignKey>
  fullName: ISet<Microsoft.EntityFrameworkCore.Metadata.IForeignKey>
  nameWithType.vb: ISet(Of IForeignKey)
  fullname.vb: ISet(Of Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  name.vb: ISet(Of IForeignKey)
  spec.csharp:
  - uid: ISet`1
    name: ISet
    nameWithType: ISet
    fullName: ISet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    name: IForeignKey
    nameWithType: IForeignKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ISet`1
    name: ISet
    nameWithType: ISet
    fullName: ISet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    name: IForeignKey
    nameWithType: IForeignKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  - name: )
    nameWithType: )
    fullName: )
- uid: ISet`1
  isExternal: true
  name: ISet<>
  nameWithType: ISet<>
  fullName: ISet<>
  nameWithType.vb: ISet(Of )
  fullname.vb: ISet(Of )
  name.vb: ISet(Of )
  spec.csharp:
  - uid: ISet`1
    name: ISet
    nameWithType: ISet
    fullName: ISet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ISet`1
    name: ISet
    nameWithType: ISet
    fullName: ISet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.NavigationReferenceChanged*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.NavigationReferenceChanged
  isExternal: false
  name: NavigationReferenceChanged
  nameWithType: IInternalEntityEntryNotifier.NavigationReferenceChanged
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.NavigationReferenceChanged
- uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.INavigation
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: INavigation
  nameWithType: INavigation
  fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.NavigationCollectionChanged*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.NavigationCollectionChanged
  isExternal: false
  name: NavigationCollectionChanged
  nameWithType: IInternalEntityEntryNotifier.NavigationCollectionChanged
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.NavigationCollectionChanged
- uid: System.Collections.Generic.IEnumerable{System.Object}
  commentId: T:System.Collections.Generic.IEnumerable{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Object>
  nameWithType: IEnumerable<Object>
  fullName: System.Collections.Generic.IEnumerable<System.Object>
  nameWithType.vb: IEnumerable(Of Object)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Object)
  name.vb: IEnumerable(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.KeyPropertyChanged*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.KeyPropertyChanged
  isExternal: false
  name: KeyPropertyChanged
  nameWithType: IInternalEntityEntryNotifier.KeyPropertyChanged
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.KeyPropertyChanged
- uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IProperty
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IProperty
  nameWithType: IProperty
  fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IKey}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IKey}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<IKey>
  nameWithType: IReadOnlyList<IKey>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.IKey>
  nameWithType.vb: IReadOnlyList(Of IKey)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.IKey)
  name.vb: IReadOnlyList(Of IKey)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.IKey
    name: IKey
    nameWithType: IKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IKey
    name: IKey
    nameWithType: IKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IForeignKey}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IForeignKey}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<IForeignKey>
  nameWithType: IReadOnlyList<IForeignKey>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.IForeignKey>
  nameWithType.vb: IReadOnlyList(Of IForeignKey)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  name.vb: IReadOnlyList(Of IForeignKey)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    name: IForeignKey
    nameWithType: IForeignKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    name: IForeignKey
    nameWithType: IForeignKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.PropertyChanged*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.PropertyChanged
  isExternal: false
  name: PropertyChanged
  nameWithType: IInternalEntityEntryNotifier.PropertyChanged
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.PropertyChanged
- uid: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IPropertyBase
  nameWithType: IPropertyBase
  fullName: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.PropertyChanging*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.PropertyChanging
  isExternal: false
  name: PropertyChanging
  nameWithType: IInternalEntityEntryNotifier.PropertyChanging
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.PropertyChanging
