### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ILocalViewListener
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ILocalViewListener
  id: ILocalViewListener
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  children:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ILocalViewListener.RegisterView(System.Action{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState})
  langs:
  - csharp
  - vb
  name: ILocalViewListener
  nameWithType: ILocalViewListener
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ILocalViewListener
  type: Interface
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/ILocalViewListener.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ILocalViewListener
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/ILocalViewListener.cs
    startLine: 12
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public interface ILocalViewListener : IEntityStateListener'
    content.vb: >-
      Public Interface ILocalViewListener
          Inherits IEntityStateListener
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityStateListener.StateChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityStateListener.StateChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState,System.Boolean)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ILocalViewListener.RegisterView(System.Action{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState})
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ILocalViewListener.RegisterView(System.Action{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState})
  id: RegisterView(System.Action{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState})
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ILocalViewListener
  langs:
  - csharp
  - vb
  name: RegisterView(Action<InternalEntityEntry, EntityState>)
  nameWithType: ILocalViewListener.RegisterView(Action<InternalEntityEntry, EntityState>)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ILocalViewListener.RegisterView(System.Action<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, Microsoft.EntityFrameworkCore.EntityState>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/ILocalViewListener.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: RegisterView
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/ILocalViewListener.cs
    startLine: 18
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: void RegisterView(Action<InternalEntityEntry, EntityState> viewAction)
    content.vb: Sub RegisterView(viewAction As Action(Of InternalEntityEntry, EntityState))
    parameters:
    - id: viewAction
      type: System.Action{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState}
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ILocalViewListener.RegisterView*
  nameWithType.vb: ILocalViewListener.RegisterView(Action(Of InternalEntityEntry, EntityState))
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ILocalViewListener.RegisterView(System.Action(Of Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, Microsoft.EntityFrameworkCore.EntityState))
  name.vb: RegisterView(Action(Of InternalEntityEntry, EntityState))
references:
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  commentId: N:Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  nameWithType: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityStateListener.StateChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityStateListener.StateChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityStateListener
  isExternal: false
  name: StateChanging(InternalEntityEntry, EntityState)
  nameWithType: IEntityStateListener.StateChanging(InternalEntityEntry, EntityState)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityStateListener.StateChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, Microsoft.EntityFrameworkCore.EntityState)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityStateListener.StateChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState)
    name: StateChanging
    nameWithType: IEntityStateListener.StateChanging
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityStateListener.StateChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.EntityState
    name: EntityState
    nameWithType: EntityState
    fullName: Microsoft.EntityFrameworkCore.EntityState
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityStateListener.StateChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState)
    name: StateChanging
    nameWithType: IEntityStateListener.StateChanging
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityStateListener.StateChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.EntityState
    name: EntityState
    nameWithType: EntityState
    fullName: Microsoft.EntityFrameworkCore.EntityState
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityStateListener.StateChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState,System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityStateListener.StateChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState,System.Boolean)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityStateListener
  isExternal: true
  name: StateChanged(InternalEntityEntry, EntityState, Boolean)
  nameWithType: IEntityStateListener.StateChanged(InternalEntityEntry, EntityState, Boolean)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityStateListener.StateChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, Microsoft.EntityFrameworkCore.EntityState, System.Boolean)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityStateListener.StateChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState,System.Boolean)
    name: StateChanged
    nameWithType: IEntityStateListener.StateChanged
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityStateListener.StateChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.EntityState
    name: EntityState
    nameWithType: EntityState
    fullName: Microsoft.EntityFrameworkCore.EntityState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityStateListener.StateChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState,System.Boolean)
    name: StateChanged
    nameWithType: IEntityStateListener.StateChanged
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityStateListener.StateChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.EntityState
    name: EntityState
    nameWithType: EntityState
    fullName: Microsoft.EntityFrameworkCore.EntityState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityStateListener
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityStateListener
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: IEntityStateListener
  nameWithType: IEntityStateListener
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityStateListener
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ILocalViewListener.RegisterView*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ILocalViewListener.RegisterView
  isExternal: false
  name: RegisterView
  nameWithType: ILocalViewListener.RegisterView
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ILocalViewListener.RegisterView
- uid: System.Action{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState}
  commentId: T:System.Action{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState}
  parent: System
  definition: System.Action`2
  name: Action<InternalEntityEntry, EntityState>
  nameWithType: Action<InternalEntityEntry, EntityState>
  fullName: System.Action<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, Microsoft.EntityFrameworkCore.EntityState>
  nameWithType.vb: Action(Of InternalEntityEntry, EntityState)
  fullname.vb: System.Action(Of Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, Microsoft.EntityFrameworkCore.EntityState)
  name.vb: Action(Of InternalEntityEntry, EntityState)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.EntityState
    name: EntityState
    nameWithType: EntityState
    fullName: Microsoft.EntityFrameworkCore.EntityState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.EntityState
    name: EntityState
    nameWithType: EntityState
    fullName: Microsoft.EntityFrameworkCore.EntityState
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullname.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
