### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1
  id: DependentsMap`1
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  children:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1.#ctor(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory{`0},Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory{`0})
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1.Add(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1.GetDependents(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1.GetDependentsUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1.Remove(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1.Update(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  langs:
  - csharp
  - vb
  name: DependentsMap<TKey>
  nameWithType: DependentsMap<TKey>
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap<TKey>
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/DependentsMap.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DependentsMap
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/DependentsMap.cs
    startLine: 14
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class DependentsMap<TKey> : IDependentsMap'
    content.vb: >-
      Public Class DependentsMap(Of TKey)
          Implements IDependentsMap
    typeParameters:
    - id: TKey
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: DependentsMap(Of TKey)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap(Of TKey)
  name.vb: DependentsMap(Of TKey)
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1.#ctor(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory{`0},Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory{`0})
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1.#ctor(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory{`0},Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory{`0})
  id: '#ctor(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory{`0},Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory{`0})'
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1
  langs:
  - csharp
  - vb
  name: DependentsMap(IForeignKey, IPrincipalKeyValueFactory<TKey>, IDependentKeyValueFactory<TKey>)
  nameWithType: DependentsMap<TKey>.DependentsMap(IForeignKey, IPrincipalKeyValueFactory<TKey>, IDependentKeyValueFactory<TKey>)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap<TKey>.DependentsMap(Microsoft.EntityFrameworkCore.Metadata.IForeignKey, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory<TKey>, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory<TKey>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/DependentsMap.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/DependentsMap.cs
    startLine: 25
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public DependentsMap(IForeignKey foreignKey, IPrincipalKeyValueFactory<TKey> principalKeyValueFactory, IDependentKeyValueFactory<TKey> dependentKeyValueFactory)
    content.vb: Public Sub New(foreignKey As IForeignKey, principalKeyValueFactory As IPrincipalKeyValueFactory(Of TKey), dependentKeyValueFactory As IDependentKeyValueFactory(Of TKey))
    parameters:
    - id: foreignKey
      type: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    - id: principalKeyValueFactory
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory{{TKey}}
    - id: dependentKeyValueFactory
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory{{TKey}}
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1.#ctor*
  nameWithType.vb: DependentsMap(Of TKey).DependentsMap(IForeignKey, IPrincipalKeyValueFactory(Of TKey), IDependentKeyValueFactory(Of TKey))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap(Of TKey).DependentsMap(Microsoft.EntityFrameworkCore.Metadata.IForeignKey, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory(Of TKey), Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory(Of TKey))
  name.vb: DependentsMap(IForeignKey, IPrincipalKeyValueFactory(Of TKey), IDependentKeyValueFactory(Of TKey))
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1.Add(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1.Add(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  id: Add(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1
  langs:
  - csharp
  - vb
  name: Add(InternalEntityEntry)
  nameWithType: DependentsMap<TKey>.Add(InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap<TKey>.Add(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/DependentsMap.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Add
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/DependentsMap.cs
    startLine: 40
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void Add(InternalEntityEntry entry)
    content.vb: Public Overridable Sub Add(entry As InternalEntityEntry)
    parameters:
    - id: entry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1.Add*
  implements:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Add(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  nameWithType.vb: DependentsMap(Of TKey).Add(InternalEntityEntry)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap(Of TKey).Add(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1.Remove(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1.Remove(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  id: Remove(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1
  langs:
  - csharp
  - vb
  name: Remove(InternalEntityEntry)
  nameWithType: DependentsMap<TKey>.Remove(InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap<TKey>.Remove(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/DependentsMap.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Remove
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/DependentsMap.cs
    startLine: 61
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void Remove(InternalEntityEntry entry)
    content.vb: Public Overridable Sub Remove(entry As InternalEntityEntry)
    parameters:
    - id: entry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1.Remove*
  implements:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Remove(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  nameWithType.vb: DependentsMap(Of TKey).Remove(InternalEntityEntry)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap(Of TKey).Remove(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1.Update(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1.Update(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  id: Update(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1
  langs:
  - csharp
  - vb
  name: Update(InternalEntityEntry)
  nameWithType: DependentsMap<TKey>.Update(InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap<TKey>.Update(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/DependentsMap.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Update
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/DependentsMap.cs
    startLine: 79
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void Update(InternalEntityEntry entry)
    content.vb: Public Overridable Sub Update(entry As InternalEntityEntry)
    parameters:
    - id: entry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1.Update*
  implements:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Update(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  nameWithType.vb: DependentsMap(Of TKey).Update(InternalEntityEntry)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap(Of TKey).Update(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1.GetDependents(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1.GetDependents(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  id: GetDependents(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1
  langs:
  - csharp
  - vb
  name: GetDependents(InternalEntityEntry)
  nameWithType: DependentsMap<TKey>.GetDependents(InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap<TKey>.GetDependents(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/DependentsMap.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetDependents
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/DependentsMap.cs
    startLine: 123
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IEnumerable<InternalEntityEntry> GetDependents(InternalEntityEntry principalEntry)
    content.vb: Public Overridable Function GetDependents(principalEntry As InternalEntityEntry) As IEnumerable(Of InternalEntityEntry)
    parameters:
    - id: principalEntry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry}
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1.GetDependents*
  implements:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.GetDependents(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  nameWithType.vb: DependentsMap(Of TKey).GetDependents(InternalEntityEntry)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap(Of TKey).GetDependents(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1.GetDependentsUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1.GetDependentsUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  id: GetDependentsUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1
  langs:
  - csharp
  - vb
  name: GetDependentsUsingRelationshipSnapshot(InternalEntityEntry)
  nameWithType: DependentsMap<TKey>.GetDependentsUsingRelationshipSnapshot(InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap<TKey>.GetDependentsUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/DependentsMap.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetDependentsUsingRelationshipSnapshot
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/DependentsMap.cs
    startLine: 135
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IEnumerable<InternalEntityEntry> GetDependentsUsingRelationshipSnapshot(InternalEntityEntry principalEntry)
    content.vb: Public Overridable Function GetDependentsUsingRelationshipSnapshot(principalEntry As InternalEntityEntry) As IEnumerable(Of InternalEntityEntry)
    parameters:
    - id: principalEntry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry}
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1.GetDependentsUsingRelationshipSnapshot*
  implements:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.GetDependentsUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  nameWithType.vb: DependentsMap(Of TKey).GetDependentsUsingRelationshipSnapshot(InternalEntityEntry)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap(Of TKey).GetDependentsUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
references:
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  commentId: N:Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  nameWithType: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: IDependentsMap
  nameWithType: IDependentsMap
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1.#ctor
  isExternal: false
  name: DependentsMap
  nameWithType: DependentsMap<TKey>.DependentsMap
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap<TKey>.DependentsMap
  nameWithType.vb: DependentsMap(Of TKey).DependentsMap
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap(Of TKey).DependentsMap
- uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IForeignKey
  nameWithType: IForeignKey
  fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory{{TKey}}
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory{`0}
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  definition: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory`1
  name: IPrincipalKeyValueFactory<TKey>
  nameWithType: IPrincipalKeyValueFactory<TKey>
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory<TKey>
  nameWithType.vb: IPrincipalKeyValueFactory(Of TKey)
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory(Of TKey)
  name.vb: IPrincipalKeyValueFactory(Of TKey)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory`1
    name: IPrincipalKeyValueFactory
    nameWithType: IPrincipalKeyValueFactory
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory`1
    name: IPrincipalKeyValueFactory
    nameWithType: IPrincipalKeyValueFactory
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory{{TKey}}
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory{``0}
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  definition: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory`1
  name: IDependentKeyValueFactory<TKey>
  nameWithType: IDependentKeyValueFactory<TKey>
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory<TKey>
  nameWithType.vb: IDependentKeyValueFactory(Of TKey)
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory(Of TKey)
  name.vb: IDependentKeyValueFactory(Of TKey)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory`1
    name: IDependentKeyValueFactory
    nameWithType: IDependentKeyValueFactory
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory`1
    name: IDependentKeyValueFactory
    nameWithType: IDependentKeyValueFactory
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory`1
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory`1
  isExternal: false
  name: IPrincipalKeyValueFactory<TKey>
  nameWithType: IPrincipalKeyValueFactory<TKey>
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory<TKey>
  nameWithType.vb: IPrincipalKeyValueFactory(Of TKey)
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory(Of TKey)
  name.vb: IPrincipalKeyValueFactory(Of TKey)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory`1
    name: IPrincipalKeyValueFactory
    nameWithType: IPrincipalKeyValueFactory
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory`1
    name: IPrincipalKeyValueFactory
    nameWithType: IPrincipalKeyValueFactory
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory`1
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory`1
  isExternal: false
  name: IDependentKeyValueFactory<TKey>
  nameWithType: IDependentKeyValueFactory<TKey>
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory<TKey>
  nameWithType.vb: IDependentKeyValueFactory(Of TKey)
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory(Of TKey)
  name.vb: IDependentKeyValueFactory(Of TKey)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory`1
    name: IDependentKeyValueFactory
    nameWithType: IDependentKeyValueFactory
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory`1
    name: IDependentKeyValueFactory
    nameWithType: IDependentKeyValueFactory
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1.Add*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1.Add
  isExternal: false
  name: Add
  nameWithType: DependentsMap<TKey>.Add
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap<TKey>.Add
  nameWithType.vb: DependentsMap(Of TKey).Add
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap(Of TKey).Add
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Add(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Add(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap
  isExternal: false
  name: Add(InternalEntityEntry)
  nameWithType: IDependentsMap.Add(InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Add(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Add(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
    name: Add
    nameWithType: IDependentsMap.Add
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Add(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
    name: Add
    nameWithType: IDependentsMap.Add
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: InternalEntityEntry
  nameWithType: InternalEntityEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1.Remove*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1.Remove
  isExternal: false
  name: Remove
  nameWithType: DependentsMap<TKey>.Remove
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap<TKey>.Remove
  nameWithType.vb: DependentsMap(Of TKey).Remove
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap(Of TKey).Remove
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Remove(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Remove(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap
  isExternal: false
  name: Remove(InternalEntityEntry)
  nameWithType: IDependentsMap.Remove(InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Remove(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Remove(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
    name: Remove
    nameWithType: IDependentsMap.Remove
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Remove(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
    name: Remove
    nameWithType: IDependentsMap.Remove
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1.Update*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1.Update
  isExternal: false
  name: Update
  nameWithType: DependentsMap<TKey>.Update
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap<TKey>.Update
  nameWithType.vb: DependentsMap(Of TKey).Update
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap(Of TKey).Update
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Update(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Update(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap
  isExternal: false
  name: Update(InternalEntityEntry)
  nameWithType: IDependentsMap.Update(InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Update(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Update(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
    name: Update
    nameWithType: IDependentsMap.Update
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Update(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
    name: Update
    nameWithType: IDependentsMap.Update
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1.GetDependents*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1.GetDependents
  isExternal: false
  name: GetDependents
  nameWithType: DependentsMap<TKey>.GetDependents
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap<TKey>.GetDependents
  nameWithType.vb: DependentsMap(Of TKey).GetDependents
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap(Of TKey).GetDependents
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.GetDependents(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.GetDependents(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap
  isExternal: false
  name: GetDependents(InternalEntityEntry)
  nameWithType: IDependentsMap.GetDependents(InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.GetDependents(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.GetDependents(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
    name: GetDependents
    nameWithType: IDependentsMap.GetDependents
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.GetDependents
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.GetDependents(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
    name: GetDependents
    nameWithType: IDependentsMap.GetDependents
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.GetDependents
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<InternalEntityEntry>
  nameWithType: IEnumerable<InternalEntityEntry>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry>
  nameWithType.vb: IEnumerable(Of InternalEntityEntry)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  name.vb: IEnumerable(Of InternalEntityEntry)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1.GetDependentsUsingRelationshipSnapshot*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1.GetDependentsUsingRelationshipSnapshot
  isExternal: false
  name: GetDependentsUsingRelationshipSnapshot
  nameWithType: DependentsMap<TKey>.GetDependentsUsingRelationshipSnapshot
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap<TKey>.GetDependentsUsingRelationshipSnapshot
  nameWithType.vb: DependentsMap(Of TKey).GetDependentsUsingRelationshipSnapshot
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap(Of TKey).GetDependentsUsingRelationshipSnapshot
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.GetDependentsUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.GetDependentsUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap
  isExternal: false
  name: GetDependentsUsingRelationshipSnapshot(InternalEntityEntry)
  nameWithType: IDependentsMap.GetDependentsUsingRelationshipSnapshot(InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.GetDependentsUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.GetDependentsUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
    name: GetDependentsUsingRelationshipSnapshot
    nameWithType: IDependentsMap.GetDependentsUsingRelationshipSnapshot
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.GetDependentsUsingRelationshipSnapshot
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.GetDependentsUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
    name: GetDependentsUsingRelationshipSnapshot
    nameWithType: IDependentsMap.GetDependentsUsingRelationshipSnapshot
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.GetDependentsUsingRelationshipSnapshot
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: )
    nameWithType: )
    fullName: )
