### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry
  id: CollectionEntry
  parent: Microsoft.EntityFrameworkCore.ChangeTracking
  children:
  - Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation)
  - Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.String)
  - Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.CurrentValue
  - Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.EnsureInitialized
  - Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.Load
  - Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.LoadAsync(System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.Query
  langs:
  - csharp
  - vb
  name: CollectionEntry
  nameWithType: CollectionEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/CollectionEntry.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CollectionEntry
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/CollectionEntry.cs
    startLine: 24
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\n<p>\n    Provides access to change tracking and loading information for a collection\n    navigation property that associates this entity to a collection of another entities.\n</p>\n<p>\n    Instances of this class are returned from methods when using the <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker\" data-throw-if-not-resolved=\"false\"></xref> API and it is\n    not designed to be directly constructed in your application code.\n</p>\n"
  example: []
  syntax:
    content: 'public class CollectionEntry : NavigationEntry, IInfrastructure<InternalEntityEntry>'
    content.vb: >-
      Public Class CollectionEntry
          Inherits NavigationEntry
          Implements IInfrastructure(Of InternalEntityEntry)
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry
  - Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry
  implements:
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry}
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.IsLoaded
  - Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Finder(System.Type)
  - Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.IsModified
  - Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Metadata
  - Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.InternalEntry
  - Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.EntityEntry
  - Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#ChangeTracking#Internal#InternalEntityEntry}#Instance
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry}.Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.String)
  id: '#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.String)'
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry
  langs:
  - csharp
  - vb
  name: CollectionEntry(InternalEntityEntry, String)
  nameWithType: CollectionEntry.CollectionEntry(InternalEntityEntry, String)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.CollectionEntry(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/CollectionEntry.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/CollectionEntry.cs
    startLine: 30
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public CollectionEntry(InternalEntityEntry internalEntry, string name)
    content.vb: Public Sub New(internalEntry As InternalEntityEntry, name As String)
    parameters:
    - id: internalEntry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    - id: name
      type: System.String
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation)
  id: '#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation)'
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry
  langs:
  - csharp
  - vb
  name: CollectionEntry(InternalEntityEntry, INavigation)
  nameWithType: CollectionEntry.CollectionEntry(InternalEntityEntry, INavigation)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.CollectionEntry(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, Microsoft.EntityFrameworkCore.Metadata.INavigation)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/CollectionEntry.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/CollectionEntry.cs
    startLine: 39
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public CollectionEntry(InternalEntityEntry internalEntry, INavigation navigation)
    content.vb: Public Sub New(internalEntry As InternalEntityEntry, navigation As INavigation)
    parameters:
    - id: internalEntry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    - id: navigation
      type: Microsoft.EntityFrameworkCore.Metadata.INavigation
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.CurrentValue
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.CurrentValue
  id: CurrentValue
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry
  langs:
  - csharp
  - vb
  name: CurrentValue
  nameWithType: CollectionEntry.CurrentValue
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.CurrentValue
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/CollectionEntry.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CurrentValue
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/CollectionEntry.cs
    startLine: 49
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\nGets or sets the value currently assigned to this property. If the current value is set using this property,\nthe change tracker is aware of the change and <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges\" data-throw-if-not-resolved=\"false\"></xref> is not required\nfor the context to detect the change.\n"
  example: []
  syntax:
    content: public virtual IEnumerable CurrentValue { get; set; }
    content.vb: Public Overridable Property CurrentValue As IEnumerable
    parameters: []
    return:
      type: System.Collections.IEnumerable
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.CurrentValue*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.Load
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.Load
  id: Load
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry
  langs:
  - csharp
  - vb
  name: Load()
  nameWithType: CollectionEntry.Load()
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.Load()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/CollectionEntry.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/CollectionEntry.cs
    startLine: 64
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\n<p>\n    Loads the entities referenced by this navigation property, unless <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.IsLoaded\" data-throw-if-not-resolved=\"false\"></xref>\n    is already set to true.\n</p>\n<p>\n    Note that entities that are already being tracked are not overwritten with new data from the database.\n</p>\n"
  example: []
  syntax:
    content: public override void Load()
    content.vb: Public Overrides Sub Load
  overridden: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Load
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.Load*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.LoadAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.LoadAsync(System.Threading.CancellationToken)
  id: LoadAsync(System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry
  langs:
  - csharp
  - vb
  name: LoadAsync(CancellationToken)
  nameWithType: CollectionEntry.LoadAsync(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.LoadAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/CollectionEntry.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: LoadAsync
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/CollectionEntry.cs
    startLine: 90
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\n<p>\n    Loads entities referenced by this navigation property, unless <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.IsLoaded\" data-throw-if-not-resolved=\"false\"></xref>\n    is already set to true.\n</p>\n<p>\n    Note that entities that are already being tracked are not overwritten with new data from the database.\n</p>\n<p>\n    Multiple active operations on the same context instance are not supported.  Use 'await' to ensure\n    that any asynchronous operations have completed before calling another method on this context.\n</p>\n"
  example: []
  syntax:
    content: public override Task LoadAsync(CancellationToken cancellationToken = null)
    content.vb: Public Overrides Function LoadAsync(cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nA <xref href=\"System.Threading.CancellationToken\" data-throw-if-not-resolved=\"false\"></xref> to observe while waiting for the task to complete.\n"
    return:
      type: System.Threading.Tasks.Task
      description: "\nA task that represents the asynchronous save operation.\n"
  overridden: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.LoadAsync(System.Threading.CancellationToken)
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.LoadAsync*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.Query
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.Query
  id: Query
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry
  langs:
  - csharp
  - vb
  name: Query()
  nameWithType: CollectionEntry.Query()
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.Query()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/CollectionEntry.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Query
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/CollectionEntry.cs
    startLine: 107
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\n<p>\n    Returns the query that would be used by <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.Load\" data-throw-if-not-resolved=\"false\"></xref> to load entities referenced by\n    this navigation property.\n</p>\n<p>\n    The query can be composed over using LINQ to perform filtering, counting, etc. without\n    actually loading all entities from the database.\n</p>\n"
  example: []
  syntax:
    content: public override IQueryable Query()
    content.vb: Public Overrides Function Query As IQueryable
    return:
      type: System.Linq.IQueryable
  overridden: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Query
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.Query*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.EnsureInitialized
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.EnsureInitialized
  id: EnsureInitialized
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry
  langs:
  - csharp
  - vb
  name: EnsureInitialized()
  nameWithType: CollectionEntry.EnsureInitialized()
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.EnsureInitialized()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/CollectionEntry.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: EnsureInitialized
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/CollectionEntry.cs
    startLine: 118
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual void EnsureInitialized()
    content.vb: Protected Overridable Sub EnsureInitialized
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.EnsureInitialized*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker
  parent: Microsoft.EntityFrameworkCore.ChangeTracking
  isExternal: false
  name: ChangeTracker
  nameWithType: ChangeTracker
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker
- uid: Microsoft.EntityFrameworkCore.ChangeTracking
  commentId: N:Microsoft.EntityFrameworkCore.ChangeTracking
  isExternal: false
  name: Microsoft.EntityFrameworkCore.ChangeTracking
  nameWithType: Microsoft.EntityFrameworkCore.ChangeTracking
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry
  parent: Microsoft.EntityFrameworkCore.ChangeTracking
  isExternal: false
  name: MemberEntry
  nameWithType: MemberEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry
  parent: Microsoft.EntityFrameworkCore.ChangeTracking
  isExternal: false
  name: NavigationEntry
  nameWithType: NavigationEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry}
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry}
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  definition: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  name: IInfrastructure<InternalEntityEntry>
  nameWithType: IInfrastructure<InternalEntityEntry>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry>
  nameWithType.vb: IInfrastructure(Of InternalEntityEntry)
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  name.vb: IInfrastructure(Of InternalEntityEntry)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.IsLoaded
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.IsLoaded
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry
  isExternal: false
  name: IsLoaded
  nameWithType: NavigationEntry.IsLoaded
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.IsLoaded
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Finder(System.Type)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Finder(System.Type)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry
  isExternal: true
  name: Finder(Type)
  nameWithType: NavigationEntry.Finder(Type)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Finder(System.Type)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Finder(System.Type)
    name: Finder
    nameWithType: NavigationEntry.Finder
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Finder
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Finder(System.Type)
    name: Finder
    nameWithType: NavigationEntry.Finder
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Finder
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.IsModified
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.IsModified
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry
  isExternal: false
  name: IsModified
  nameWithType: NavigationEntry.IsModified
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.IsModified
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Metadata
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Metadata
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry
  isExternal: false
  name: Metadata
  nameWithType: NavigationEntry.Metadata
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Metadata
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.InternalEntry
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.InternalEntry
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry
  isExternal: false
  name: InternalEntry
  nameWithType: MemberEntry.InternalEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.InternalEntry
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.EntityEntry
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.EntityEntry
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry
  isExternal: false
  name: EntityEntry
  nameWithType: MemberEntry.EntityEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.EntityEntry
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#ChangeTracking#Internal#InternalEntityEntry}#Instance
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#ChangeTracking#Internal#InternalEntityEntry}#Instance
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry
  isExternal: false
  name: IInfrastructure<InternalEntityEntry>.Instance
  nameWithType: MemberEntry.IInfrastructure<InternalEntityEntry>.Instance
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry>.Instance
  nameWithType.vb: MemberEntry.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry>.Instance
  name.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry>.Instance
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry}.Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
  parent: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions
  definition: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
  name: GetInfrastructure<InternalEntityEntry>()
  nameWithType: AccessorExtensions.GetInfrastructure<InternalEntityEntry>()
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry>()
  nameWithType.vb: AccessorExtensions.GetInfrastructure(Of InternalEntityEntry)()
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure(Of Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)()
  name.vb: GetInfrastructure(Of InternalEntityEntry)()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1
    name: GetInfrastructure<InternalEntityEntry>
    nameWithType: AccessorExtensions.GetInfrastructure<InternalEntityEntry>
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1
    name: GetInfrastructure(Of InternalEntityEntry)
    nameWithType: AccessorExtensions.GetInfrastructure(Of InternalEntityEntry)
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure(Of Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  isExternal: false
  name: IInfrastructure<T>
  nameWithType: IInfrastructure<T>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<T>
  nameWithType.vb: IInfrastructure(Of T)
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of T)
  name.vb: IInfrastructure(Of T)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure
  commentId: N:Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Infrastructure
  nameWithType: Microsoft.EntityFrameworkCore.Infrastructure
  fullName: Microsoft.EntityFrameworkCore.Infrastructure
- uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
  isExternal: false
  name: GetInfrastructure<T>(IInfrastructure<T>)
  nameWithType: AccessorExtensions.GetInfrastructure<T>(IInfrastructure<T>)
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure<T>(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<T>)
  nameWithType.vb: AccessorExtensions.GetInfrastructure(Of T)(IInfrastructure(Of T))
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure(Of T)(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of T))
  name.vb: GetInfrastructure(Of T)(IInfrastructure(Of T))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
    name: GetInfrastructure<T>
    nameWithType: AccessorExtensions.GetInfrastructure<T>
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
    name: GetInfrastructure(Of T)
    nameWithType: AccessorExtensions.GetInfrastructure(Of T)
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: AccessorExtensions
  nameWithType: AccessorExtensions
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.#ctor
  isExternal: false
  name: CollectionEntry
  nameWithType: CollectionEntry.CollectionEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.CollectionEntry
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: InternalEntityEntry
  nameWithType: InternalEntityEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  commentId: N:Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  nameWithType: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
- uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.INavigation
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: INavigation
  nameWithType: INavigation
  fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.CurrentValue*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.CurrentValue
  isExternal: false
  name: CurrentValue
  nameWithType: CollectionEntry.CurrentValue
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.CurrentValue
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Load
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Load
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry
  isExternal: false
  name: Load()
  nameWithType: NavigationEntry.Load()
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Load()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Load
    name: Load
    nameWithType: NavigationEntry.Load
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Load
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Load
    name: Load
    nameWithType: NavigationEntry.Load
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Load
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.Load*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.Load
  isExternal: false
  name: Load
  nameWithType: CollectionEntry.Load
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.Load
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.LoadAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.LoadAsync(System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry
  isExternal: true
  name: LoadAsync(CancellationToken)
  nameWithType: NavigationEntry.LoadAsync(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.LoadAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.LoadAsync(System.Threading.CancellationToken)
    name: LoadAsync
    nameWithType: NavigationEntry.LoadAsync
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.LoadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.LoadAsync(System.Threading.CancellationToken)
    name: LoadAsync
    nameWithType: NavigationEntry.LoadAsync
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.LoadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.LoadAsync*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.LoadAsync
  isExternal: false
  name: LoadAsync
  nameWithType: CollectionEntry.LoadAsync
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.LoadAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.Load
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.Load
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry
  isExternal: false
  name: Load()
  nameWithType: CollectionEntry.Load()
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.Load()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.Load
    name: Load
    nameWithType: CollectionEntry.Load
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.Load
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.Load
    name: Load
    nameWithType: CollectionEntry.Load
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.Load
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Query
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Query
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry
  isExternal: false
  name: Query()
  nameWithType: NavigationEntry.Query()
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Query()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Query
    name: Query
    nameWithType: NavigationEntry.Query
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Query
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Query
    name: Query
    nameWithType: NavigationEntry.Query
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Query
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.Query*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.Query
  isExternal: false
  name: Query
  nameWithType: CollectionEntry.Query
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.Query
- uid: System.Linq.IQueryable
  commentId: T:System.Linq.IQueryable
  parent: System.Linq
  isExternal: true
  name: IQueryable
  nameWithType: IQueryable
  fullName: System.Linq.IQueryable
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry
  parent: Microsoft.EntityFrameworkCore.ChangeTracking
  isExternal: false
  name: CollectionEntry
  nameWithType: CollectionEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry
- uid: System.Linq
  commentId: N:System.Linq
  isExternal: false
  name: System.Linq
  nameWithType: System.Linq
  fullName: System.Linq
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.EnsureInitialized*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.EnsureInitialized
  isExternal: false
  name: EnsureInitialized
  nameWithType: CollectionEntry.EnsureInitialized
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.EnsureInitialized
