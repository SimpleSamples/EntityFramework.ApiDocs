### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager
  id: IValueGenerationManager
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  children:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager.Generate(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager.GenerateAsync(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager.MayGetTemporaryValue(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  langs:
  - csharp
  - vb
  name: IValueGenerationManager
  nameWithType: IValueGenerationManager
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager
  type: Interface
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IValueGenerationManager.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IValueGenerationManager
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IValueGenerationManager.cs
    startLine: 14
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public interface IValueGenerationManager
    content.vb: Public Interface IValueGenerationManager
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager.Generate(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager.Generate(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  id: Generate(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager
  langs:
  - csharp
  - vb
  name: Generate(InternalEntityEntry)
  nameWithType: IValueGenerationManager.Generate(InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager.Generate(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IValueGenerationManager.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Generate
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IValueGenerationManager.cs
    startLine: 20
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: void Generate(InternalEntityEntry entry)
    content.vb: Sub Generate(entry As InternalEntityEntry)
    parameters:
    - id: entry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager.Generate*
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager.GenerateAsync(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager.GenerateAsync(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)
  id: GenerateAsync(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager
  langs:
  - csharp
  - vb
  name: GenerateAsync(InternalEntityEntry, CancellationToken)
  nameWithType: IValueGenerationManager.GenerateAsync(InternalEntityEntry, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager.GenerateAsync(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IValueGenerationManager.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GenerateAsync
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IValueGenerationManager.cs
    startLine: 26
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: Task GenerateAsync(InternalEntityEntry entry, CancellationToken cancellationToken = null)
    content.vb: Function GenerateAsync(entry As InternalEntityEntry, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: entry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager.GenerateAsync*
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager.MayGetTemporaryValue(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager.MayGetTemporaryValue(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  id: MayGetTemporaryValue(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager
  langs:
  - csharp
  - vb
  name: MayGetTemporaryValue(IProperty, IEntityType)
  nameWithType: IValueGenerationManager.MayGetTemporaryValue(IProperty, IEntityType)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager.MayGetTemporaryValue(Microsoft.EntityFrameworkCore.Metadata.IProperty, Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IValueGenerationManager.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: MayGetTemporaryValue
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/IValueGenerationManager.cs
    startLine: 34
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: bool MayGetTemporaryValue(IProperty property, IEntityType entityType)
    content.vb: Function MayGetTemporaryValue(property As IProperty, entityType As IEntityType) As Boolean
    parameters:
    - id: property
      type: Microsoft.EntityFrameworkCore.Metadata.IProperty
    - id: entityType
      type: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    return:
      type: System.Boolean
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager.MayGetTemporaryValue*
references:
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  commentId: N:Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  nameWithType: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager.Generate*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager.Generate
  isExternal: false
  name: Generate
  nameWithType: IValueGenerationManager.Generate
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager.Generate
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: InternalEntityEntry
  nameWithType: InternalEntityEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager.GenerateAsync*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager.GenerateAsync
  isExternal: false
  name: GenerateAsync
  nameWithType: IValueGenerationManager.GenerateAsync
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager.GenerateAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager.MayGetTemporaryValue*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager.MayGetTemporaryValue
  isExternal: false
  name: MayGetTemporaryValue
  nameWithType: IValueGenerationManager.MayGetTemporaryValue
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager.MayGetTemporaryValue
- uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IProperty
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IProperty
  nameWithType: IProperty
  fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
- uid: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IEntityType
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IEntityType
  nameWithType: IEntityType
  fullName: Microsoft.EntityFrameworkCore.Metadata.IEntityType
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
