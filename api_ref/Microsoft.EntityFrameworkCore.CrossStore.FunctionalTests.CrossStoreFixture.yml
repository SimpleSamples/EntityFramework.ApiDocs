### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.CrossStoreFixture
  commentId: T:Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.CrossStoreFixture
  id: CrossStoreFixture
  parent: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests
  children:
  - Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.CrossStoreFixture.CreateContext(Microsoft.EntityFrameworkCore.Specification.Tests.TestStore)
  - Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.CrossStoreFixture.CreateTestStore(System.Type)
  langs:
  - csharp
  - vb
  name: CrossStoreFixture
  nameWithType: CrossStoreFixture
  fullName: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.CrossStoreFixture
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests/CrossStoreFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CrossStoreFixture
    path: test/Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests/CrossStoreFixture.cs
    startLine: 9
  assemblies:
  - Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests
  syntax:
    content: public abstract class CrossStoreFixture
    content.vb: Public MustInherit Class CrossStoreFixture
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.CrossStoreFixture.CreateTestStore(System.Type)
  commentId: M:Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.CrossStoreFixture.CreateTestStore(System.Type)
  id: CreateTestStore(System.Type)
  parent: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.CrossStoreFixture
  langs:
  - csharp
  - vb
  name: CreateTestStore(Type)
  nameWithType: CrossStoreFixture.CreateTestStore(Type)
  fullName: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.CrossStoreFixture.CreateTestStore(System.Type)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests/CrossStoreFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateTestStore
    path: test/Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests/CrossStoreFixture.cs
    startLine: 11
  assemblies:
  - Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests
  syntax:
    content: public abstract TestStore CreateTestStore(Type testStoreType)
    content.vb: Public MustOverride Function CreateTestStore(testStoreType As Type) As TestStore
    parameters:
    - id: testStoreType
      type: System.Type
    return:
      type: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore
  overload: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.CrossStoreFixture.CreateTestStore*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.CrossStoreFixture.CreateContext(Microsoft.EntityFrameworkCore.Specification.Tests.TestStore)
  commentId: M:Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.CrossStoreFixture.CreateContext(Microsoft.EntityFrameworkCore.Specification.Tests.TestStore)
  id: CreateContext(Microsoft.EntityFrameworkCore.Specification.Tests.TestStore)
  parent: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.CrossStoreFixture
  langs:
  - csharp
  - vb
  name: CreateContext(TestStore)
  nameWithType: CrossStoreFixture.CreateContext(TestStore)
  fullName: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.CrossStoreFixture.CreateContext(Microsoft.EntityFrameworkCore.Specification.Tests.TestStore)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests/CrossStoreFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateContext
    path: test/Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests/CrossStoreFixture.cs
    startLine: 13
  assemblies:
  - Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests
  syntax:
    content: public abstract CrossStoreContext CreateContext(TestStore testStore)
    content.vb: Public MustOverride Function CreateContext(testStore As TestStore) As CrossStoreContext
    parameters:
    - id: testStore
      type: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore
    return:
      type: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.TestModels.CrossStoreContext
  overload: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.CrossStoreFixture.CreateContext*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
references:
- uid: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests
  commentId: N:Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests
  nameWithType: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests
  fullName: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.CrossStoreFixture.CreateTestStore*
  commentId: Overload:Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.CrossStoreFixture.CreateTestStore
  isExternal: false
  name: CreateTestStore
  nameWithType: CrossStoreFixture.CreateTestStore
  fullName: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.CrossStoreFixture.CreateTestStore
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TestStore
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: TestStore
  nameWithType: TestStore
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore
- uid: Microsoft.EntityFrameworkCore.Specification.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests
- uid: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.CrossStoreFixture.CreateContext*
  commentId: Overload:Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.CrossStoreFixture.CreateContext
  isExternal: false
  name: CreateContext
  nameWithType: CrossStoreFixture.CreateContext
  fullName: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.CrossStoreFixture.CreateContext
- uid: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.TestModels.CrossStoreContext
  commentId: T:Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.TestModels.CrossStoreContext
  parent: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.TestModels
  isExternal: false
  name: CrossStoreContext
  nameWithType: CrossStoreContext
  fullName: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.TestModels.CrossStoreContext
- uid: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.TestModels
  commentId: N:Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.TestModels
  isExternal: false
  name: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.TestModels
  nameWithType: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.TestModels
  fullName: Microsoft.EntityFrameworkCore.CrossStore.FunctionalTests.TestModels
