### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector
  id: ChangeDetector
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  children:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.DetectChanges(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.DetectChanges(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.PropertyChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Boolean)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.PropertyChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.Resume
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.SkipDetectChangesAnnotation
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.Suspend
  langs:
  - csharp
  - vb
  name: ChangeDetector
  nameWithType: ChangeDetector
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/ChangeDetector.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ChangeDetector
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/ChangeDetector.cs
    startLine: 16
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class ChangeDetector : IChangeDetector, IPropertyListener'
    content.vb: >-
      Public Class ChangeDetector
          Implements IChangeDetector, IPropertyListener
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPropertyListener
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.SkipDetectChangesAnnotation
  commentId: F:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.SkipDetectChangesAnnotation
  id: SkipDetectChangesAnnotation
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector
  langs:
  - csharp
  - vb
  name: SkipDetectChangesAnnotation
  nameWithType: ChangeDetector.SkipDetectChangesAnnotation
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.SkipDetectChangesAnnotation
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/ChangeDetector.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SkipDetectChangesAnnotation
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/ChangeDetector.cs
    startLine: 22
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public const string SkipDetectChangesAnnotation = "ChangeDetector.SkipDetectChanges"
    content.vb: Public Const SkipDetectChangesAnnotation As String = "ChangeDetector.SkipDetectChanges"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.Suspend
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.Suspend
  id: Suspend
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector
  langs:
  - csharp
  - vb
  name: Suspend()
  nameWithType: ChangeDetector.Suspend()
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.Suspend()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/ChangeDetector.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Suspend
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/ChangeDetector.cs
    startLine: 30
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void Suspend()
    content.vb: Public Overridable Sub Suspend
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.Suspend*
  implements:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector.Suspend
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.Resume
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.Resume
  id: Resume
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector
  langs:
  - csharp
  - vb
  name: Resume()
  nameWithType: ChangeDetector.Resume()
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.Resume()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/ChangeDetector.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Resume
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/ChangeDetector.cs
    startLine: 36
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void Resume()
    content.vb: Public Overridable Sub Resume
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.Resume*
  implements:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector.Resume
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.PropertyChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.PropertyChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Boolean)
  id: PropertyChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Boolean)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector
  langs:
  - csharp
  - vb
  name: PropertyChanged(InternalEntityEntry, IPropertyBase, Boolean)
  nameWithType: ChangeDetector.PropertyChanged(InternalEntityEntry, IPropertyBase, Boolean)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.PropertyChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, Microsoft.EntityFrameworkCore.Metadata.IPropertyBase, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/ChangeDetector.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: PropertyChanged
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/ChangeDetector.cs
    startLine: 42
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void PropertyChanged(InternalEntityEntry entry, IPropertyBase propertyBase, bool setModified)
    content.vb: Public Overridable Sub PropertyChanged(entry As InternalEntityEntry, propertyBase As IPropertyBase, setModified As Boolean)
    parameters:
    - id: entry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    - id: propertyBase
      type: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
    - id: setModified
      type: System.Boolean
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.PropertyChanged*
  implements:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPropertyListener.PropertyChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.PropertyChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.PropertyChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  id: PropertyChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector
  langs:
  - csharp
  - vb
  name: PropertyChanging(InternalEntityEntry, IPropertyBase)
  nameWithType: ChangeDetector.PropertyChanging(InternalEntityEntry, IPropertyBase)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.PropertyChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/ChangeDetector.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: PropertyChanging
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/ChangeDetector.cs
    startLine: 76
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void PropertyChanging(InternalEntityEntry entry, IPropertyBase propertyBase)
    content.vb: Public Overridable Sub PropertyChanging(entry As InternalEntityEntry, propertyBase As IPropertyBase)
    parameters:
    - id: entry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    - id: propertyBase
      type: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.PropertyChanging*
  implements:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPropertyListener.PropertyChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.DetectChanges(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.DetectChanges(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager)
  id: DetectChanges(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector
  langs:
  - csharp
  - vb
  name: DetectChanges(IStateManager)
  nameWithType: ChangeDetector.DetectChanges(IStateManager)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.DetectChanges(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/ChangeDetector.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DetectChanges
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/ChangeDetector.cs
    startLine: 103
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void DetectChanges(IStateManager stateManager)
    content.vb: Public Overridable Sub DetectChanges(stateManager As IStateManager)
    parameters:
    - id: stateManager
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.DetectChanges*
  implements:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector.DetectChanges(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.DetectChanges(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.DetectChanges(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  id: DetectChanges(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector
  langs:
  - csharp
  - vb
  name: DetectChanges(InternalEntityEntry)
  nameWithType: ChangeDetector.DetectChanges(InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.DetectChanges(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/ChangeDetector.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DetectChanges
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/ChangeDetector.cs
    startLine: 120
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void DetectChanges(InternalEntityEntry entry)
    content.vb: Public Overridable Sub DetectChanges(entry As InternalEntityEntry)
    parameters:
    - id: entry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.DetectChanges*
  implements:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector.DetectChanges(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  commentId: N:Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  nameWithType: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: IChangeDetector
  nameWithType: IChangeDetector
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPropertyListener
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPropertyListener
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: IPropertyListener
  nameWithType: IPropertyListener
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPropertyListener
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.Suspend*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.Suspend
  isExternal: false
  name: Suspend
  nameWithType: ChangeDetector.Suspend
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.Suspend
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector.Suspend
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector.Suspend
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector
  isExternal: false
  name: Suspend()
  nameWithType: IChangeDetector.Suspend()
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector.Suspend()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector.Suspend
    name: Suspend
    nameWithType: IChangeDetector.Suspend
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector.Suspend
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector.Suspend
    name: Suspend
    nameWithType: IChangeDetector.Suspend
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector.Suspend
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.Resume*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.Resume
  isExternal: false
  name: Resume
  nameWithType: ChangeDetector.Resume
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.Resume
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector.Resume
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector.Resume
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector
  isExternal: false
  name: Resume()
  nameWithType: IChangeDetector.Resume()
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector.Resume()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector.Resume
    name: Resume
    nameWithType: IChangeDetector.Resume
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector.Resume
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector.Resume
    name: Resume
    nameWithType: IChangeDetector.Resume
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector.Resume
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.PropertyChanged*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.PropertyChanged
  isExternal: false
  name: PropertyChanged
  nameWithType: ChangeDetector.PropertyChanged
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.PropertyChanged
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPropertyListener.PropertyChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPropertyListener.PropertyChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Boolean)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPropertyListener
  isExternal: true
  name: PropertyChanged(InternalEntityEntry, IPropertyBase, Boolean)
  nameWithType: IPropertyListener.PropertyChanged(InternalEntityEntry, IPropertyBase, Boolean)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPropertyListener.PropertyChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, Microsoft.EntityFrameworkCore.Metadata.IPropertyBase, System.Boolean)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPropertyListener.PropertyChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Boolean)
    name: PropertyChanged
    nameWithType: IPropertyListener.PropertyChanged
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPropertyListener.PropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
    name: IPropertyBase
    nameWithType: IPropertyBase
    fullName: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPropertyListener.PropertyChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Boolean)
    name: PropertyChanged
    nameWithType: IPropertyListener.PropertyChanged
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPropertyListener.PropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
    name: IPropertyBase
    nameWithType: IPropertyBase
    fullName: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: InternalEntityEntry
  nameWithType: InternalEntityEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
- uid: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IPropertyBase
  nameWithType: IPropertyBase
  fullName: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.PropertyChanging*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.PropertyChanging
  isExternal: false
  name: PropertyChanging
  nameWithType: ChangeDetector.PropertyChanging
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.PropertyChanging
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPropertyListener.PropertyChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPropertyListener.PropertyChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPropertyListener
  isExternal: false
  name: PropertyChanging(InternalEntityEntry, IPropertyBase)
  nameWithType: IPropertyListener.PropertyChanging(InternalEntityEntry, IPropertyBase)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPropertyListener.PropertyChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPropertyListener.PropertyChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
    name: PropertyChanging
    nameWithType: IPropertyListener.PropertyChanging
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPropertyListener.PropertyChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
    name: IPropertyBase
    nameWithType: IPropertyBase
    fullName: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPropertyListener.PropertyChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
    name: PropertyChanging
    nameWithType: IPropertyListener.PropertyChanging
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPropertyListener.PropertyChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
    name: IPropertyBase
    nameWithType: IPropertyBase
    fullName: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.DetectChanges*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.DetectChanges
  isExternal: false
  name: DetectChanges
  nameWithType: ChangeDetector.DetectChanges
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.DetectChanges
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector.DetectChanges(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector.DetectChanges(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector
  isExternal: false
  name: DetectChanges(IStateManager)
  nameWithType: IChangeDetector.DetectChanges(IStateManager)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector.DetectChanges(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector.DetectChanges(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager)
    name: DetectChanges
    nameWithType: IChangeDetector.DetectChanges
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector.DetectChanges
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager
    name: IStateManager
    nameWithType: IStateManager
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector.DetectChanges(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager)
    name: DetectChanges
    nameWithType: IChangeDetector.DetectChanges
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector.DetectChanges
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager
    name: IStateManager
    nameWithType: IStateManager
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: IStateManager
  nameWithType: IStateManager
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector.DetectChanges(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector.DetectChanges(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector
  isExternal: false
  name: DetectChanges(InternalEntityEntry)
  nameWithType: IChangeDetector.DetectChanges(InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector.DetectChanges(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector.DetectChanges(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
    name: DetectChanges
    nameWithType: IChangeDetector.DetectChanges
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector.DetectChanges
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector.DetectChanges(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
    name: DetectChanges
    nameWithType: IChangeDetector.DetectChanges
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector.DetectChanges
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: )
    nameWithType: )
    fullName: )
