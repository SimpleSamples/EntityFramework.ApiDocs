### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Design.DatabaseOperations
  commentId: T:Microsoft.EntityFrameworkCore.Design.DatabaseOperations
  id: DatabaseOperations
  parent: Microsoft.EntityFrameworkCore.Design
  children:
  - Microsoft.EntityFrameworkCore.Design.DatabaseOperations.#ctor(Microsoft.EntityFrameworkCore.Design.IOperationReporter,System.Reflection.Assembly,System.String,System.String,System.String,System.String)
  - Microsoft.EntityFrameworkCore.Design.DatabaseOperations.ReverseEngineerAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Boolean,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: DatabaseOperations
  nameWithType: DatabaseOperations
  fullName: Microsoft.EntityFrameworkCore.Design.DatabaseOperations
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Design/DatabaseOperations.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DatabaseOperations
    path: src/Microsoft.EntityFrameworkCore.Design/Design/DatabaseOperations.cs
    startLine: 16
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Design
  syntax:
    content: public class DatabaseOperations
    content.vb: Public Class DatabaseOperations
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Design.DatabaseOperations.#ctor(Microsoft.EntityFrameworkCore.Design.IOperationReporter,System.Reflection.Assembly,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Design.DatabaseOperations.#ctor(Microsoft.EntityFrameworkCore.Design.IOperationReporter,System.Reflection.Assembly,System.String,System.String,System.String,System.String)
  id: '#ctor(Microsoft.EntityFrameworkCore.Design.IOperationReporter,System.Reflection.Assembly,System.String,System.String,System.String,System.String)'
  parent: Microsoft.EntityFrameworkCore.Design.DatabaseOperations
  langs:
  - csharp
  - vb
  name: DatabaseOperations(IOperationReporter, Assembly, String, String, String, String)
  nameWithType: DatabaseOperations.DatabaseOperations(IOperationReporter, Assembly, String, String, String, String)
  fullName: Microsoft.EntityFrameworkCore.Design.DatabaseOperations.DatabaseOperations(Microsoft.EntityFrameworkCore.Design.IOperationReporter, System.Reflection.Assembly, System.String, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Design/DatabaseOperations.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Design/Design/DatabaseOperations.cs
    startLine: 22
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Design
  syntax:
    content: public DatabaseOperations(IOperationReporter reporter, Assembly startupAssembly, string environment, string projectDir, string contentRootPath, string rootNamespace)
    content.vb: Public Sub New(reporter As IOperationReporter, startupAssembly As Assembly, environment As String, projectDir As String, contentRootPath As String, rootNamespace As String)
    parameters:
    - id: reporter
      type: Microsoft.EntityFrameworkCore.Design.IOperationReporter
    - id: startupAssembly
      type: System.Reflection.Assembly
    - id: environment
      type: System.String
    - id: projectDir
      type: System.String
    - id: contentRootPath
      type: System.String
    - id: rootNamespace
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Design.DatabaseOperations.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Design.DatabaseOperations.ReverseEngineerAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Boolean,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Design.DatabaseOperations.ReverseEngineerAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Boolean,System.Threading.CancellationToken)
  id: ReverseEngineerAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Boolean,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Design.DatabaseOperations
  langs:
  - csharp
  - vb
  name: ReverseEngineerAsync(String, String, String, String, IEnumerable<String>, IEnumerable<String>, Boolean, Boolean, CancellationToken)
  nameWithType: DatabaseOperations.ReverseEngineerAsync(String, String, String, String, IEnumerable<String>, IEnumerable<String>, Boolean, Boolean, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Design.DatabaseOperations.ReverseEngineerAsync(System.String, System.String, System.String, System.String, System.Collections.Generic.IEnumerable<System.String>, System.Collections.Generic.IEnumerable<System.String>, System.Boolean, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Design/DatabaseOperations.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ReverseEngineerAsync
    path: src/Microsoft.EntityFrameworkCore.Design/Design/DatabaseOperations.cs
    startLine: 42
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Design
  syntax:
    content: public virtual Task<ReverseEngineerFiles> ReverseEngineerAsync(string provider, string connectionString, string outputDir, string dbContextClassName, IEnumerable<string> schemas, IEnumerable<string> tables, bool useDataAnnotations, bool overwriteFiles, CancellationToken cancellationToken = null)
    content.vb: Public Overridable Function ReverseEngineerAsync(provider As String, connectionString As String, outputDir As String, dbContextClassName As String, schemas As IEnumerable(Of String), tables As IEnumerable(Of String), useDataAnnotations As Boolean, overwriteFiles As Boolean, cancellationToken As CancellationToken = Nothing) As Task(Of ReverseEngineerFiles)
    parameters:
    - id: provider
      type: System.String
    - id: connectionString
      type: System.String
    - id: outputDir
      type: System.String
    - id: dbContextClassName
      type: System.String
    - id: schemas
      type: System.Collections.Generic.IEnumerable{System.String}
    - id: tables
      type: System.Collections.Generic.IEnumerable{System.String}
    - id: useDataAnnotations
      type: System.Boolean
    - id: overwriteFiles
      type: System.Boolean
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerFiles}
  overload: Microsoft.EntityFrameworkCore.Design.DatabaseOperations.ReverseEngineerAsync*
  nameWithType.vb: DatabaseOperations.ReverseEngineerAsync(String, String, String, String, IEnumerable(Of String), IEnumerable(Of String), Boolean, Boolean, CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Design.DatabaseOperations.ReverseEngineerAsync(System.String, System.String, System.String, System.String, System.Collections.Generic.IEnumerable(Of System.String), System.Collections.Generic.IEnumerable(Of System.String), System.Boolean, System.Boolean, System.Threading.CancellationToken)
  name.vb: ReverseEngineerAsync(String, String, String, String, IEnumerable(Of String), IEnumerable(Of String), Boolean, Boolean, CancellationToken)
references:
- uid: Microsoft.EntityFrameworkCore.Design
  commentId: N:Microsoft.EntityFrameworkCore.Design
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Design
  nameWithType: Microsoft.EntityFrameworkCore.Design
  fullName: Microsoft.EntityFrameworkCore.Design
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Design.DatabaseOperations.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.Design.DatabaseOperations.#ctor
  isExternal: false
  name: DatabaseOperations
  nameWithType: DatabaseOperations.DatabaseOperations
  fullName: Microsoft.EntityFrameworkCore.Design.DatabaseOperations.DatabaseOperations
- uid: Microsoft.EntityFrameworkCore.Design.IOperationReporter
  commentId: T:Microsoft.EntityFrameworkCore.Design.IOperationReporter
  parent: Microsoft.EntityFrameworkCore.Design
  isExternal: false
  name: IOperationReporter
  nameWithType: IOperationReporter
  fullName: Microsoft.EntityFrameworkCore.Design.IOperationReporter
- uid: System.Reflection.Assembly
  commentId: T:System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: false
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: Microsoft.EntityFrameworkCore.Design.DatabaseOperations.ReverseEngineerAsync*
  commentId: Overload:Microsoft.EntityFrameworkCore.Design.DatabaseOperations.ReverseEngineerAsync
  isExternal: false
  name: ReverseEngineerAsync
  nameWithType: DatabaseOperations.ReverseEngineerAsync
  fullName: Microsoft.EntityFrameworkCore.Design.DatabaseOperations.ReverseEngineerAsync
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerFiles}
  commentId: T:System.Threading.Tasks.Task{Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerFiles}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ReverseEngineerFiles>
  nameWithType: Task<ReverseEngineerFiles>
  fullName: System.Threading.Tasks.Task<Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerFiles>
  nameWithType.vb: Task(Of ReverseEngineerFiles)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerFiles)
  name.vb: Task(Of ReverseEngineerFiles)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerFiles
    name: ReverseEngineerFiles
    nameWithType: ReverseEngineerFiles
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerFiles
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerFiles
    name: ReverseEngineerFiles
    nameWithType: ReverseEngineerFiles
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerFiles
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
