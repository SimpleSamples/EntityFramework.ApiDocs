### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry
  id: MemberEntry
  parent: Microsoft.EntityFrameworkCore.ChangeTracking
  children:
  - Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  - Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.CurrentValue
  - Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.EntityEntry
  - Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.InternalEntry
  - Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.IsModified
  - Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.Metadata
  - Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#ChangeTracking#Internal#InternalEntityEntry}#Instance
  langs:
  - csharp
  - vb
  name: MemberEntry
  nameWithType: MemberEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/MemberEntry.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: MemberEntry
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/MemberEntry.cs
    startLine: 26
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\n<p>\n    Provides access to change tracking information and operations for a given property\n    or navigation property.\n</p>\n<p>\n    Scalar properties use the derived class <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry\" data-throw-if-not-resolved=\"false\"></xref>, reference navigation\n    properties use the derived class <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry\" data-throw-if-not-resolved=\"false\"></xref>, and collection navigation\n    properties use the derived class <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n<p>\n    Instances of this class are returned from methods when using the <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker\" data-throw-if-not-resolved=\"false\"></xref> API and it is\n    not designed to be directly constructed in your application code.\n</p>\n"
  example: []
  syntax:
    content: 'public abstract class MemberEntry : IInfrastructure<InternalEntityEntry>'
    content.vb: >-
      Public MustInherit Class MemberEntry
          Implements IInfrastructure(Of InternalEntityEntry)
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry}.Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  id: '#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)'
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry
  langs:
  - csharp
  - vb
  name: MemberEntry(InternalEntityEntry, IPropertyBase)
  nameWithType: MemberEntry.MemberEntry(InternalEntityEntry, IPropertyBase)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.MemberEntry(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/MemberEntry.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/MemberEntry.cs
    startLine: 32
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected MemberEntry(InternalEntityEntry internalEntry, IPropertyBase metadata)
    content.vb: Protected Sub New(internalEntry As InternalEntityEntry, metadata As IPropertyBase)
    parameters:
    - id: internalEntry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    - id: metadata
      type: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.InternalEntry
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.InternalEntry
  id: InternalEntry
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry
  langs:
  - csharp
  - vb
  name: InternalEntry
  nameWithType: MemberEntry.InternalEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.InternalEntry
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/MemberEntry.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: InternalEntry
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/MemberEntry.cs
    startLine: 45
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual InternalEntityEntry InternalEntry { get; }
    content.vb: Protected Overridable ReadOnly Property InternalEntry As InternalEntityEntry
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.InternalEntry*
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.IsModified
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.IsModified
  id: IsModified
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry
  langs:
  - csharp
  - vb
  name: IsModified
  nameWithType: MemberEntry.IsModified
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.IsModified
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/MemberEntry.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IsModified
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/MemberEntry.cs
    startLine: 60
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\n<p>\n    For non-navigation properties, gets or sets a value indicating whether the value of this\n    property has been modified and should be updated in the database when\n<xref href=\"Microsoft.EntityFrameworkCore.DbContext.SaveChanges\" data-throw-if-not-resolved=\"false\"></xref>\nis called.\n</p>\n<p>\n    For navigation properties, gets or sets a value indicating whether any of foreign key\n    property values associated with this navigation property have been modified and should\n    be updated in the database  when <xref href=\"Microsoft.EntityFrameworkCore.DbContext.SaveChanges\" data-throw-if-not-resolved=\"false\"></xref> is called.\n</p>\n"
  example: []
  syntax:
    content: public abstract bool IsModified { get; set; }
    content.vb: Public MustOverride Property IsModified As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.IsModified*
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.Metadata
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.Metadata
  id: Metadata
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: MemberEntry.Metadata
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.Metadata
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/MemberEntry.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Metadata
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/MemberEntry.cs
    startLine: 65
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\nGets the metadata that describes the facets of this property and how it maps to the database.\n"
  example: []
  syntax:
    content: public virtual IPropertyBase Metadata { get; }
    content.vb: Public Overridable ReadOnly Property Metadata As IPropertyBase
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.Metadata*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.CurrentValue
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.CurrentValue
  id: CurrentValue
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry
  langs:
  - csharp
  - vb
  name: CurrentValue
  nameWithType: MemberEntry.CurrentValue
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.CurrentValue
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/MemberEntry.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CurrentValue
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/MemberEntry.cs
    startLine: 72
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\nGets or sets the value currently assigned to this property. If the current value is set using this property,\nthe change tracker is aware of the change and <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges\" data-throw-if-not-resolved=\"false\"></xref> is not required\nfor the context to detect the change.\n"
  example: []
  syntax:
    content: public virtual object CurrentValue { get; set; }
    content.vb: Public Overridable Property CurrentValue As Object
    parameters: []
    return:
      type: System.Object
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.CurrentValue*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.EntityEntry
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.EntityEntry
  id: EntityEntry
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry
  langs:
  - csharp
  - vb
  name: EntityEntry
  nameWithType: MemberEntry.EntityEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.EntityEntry
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/MemberEntry.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: EntityEntry
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/MemberEntry.cs
    startLine: 82
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\nThe <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.EntityEntry\" data-throw-if-not-resolved=\"false\"></xref> to which this member belongs.\n"
  example: []
  syntax:
    content: public virtual EntityEntry EntityEntry { get; }
    content.vb: Public Overridable ReadOnly Property EntityEntry As EntityEntry
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
      description: 'An entry for the entity that owns this member. '
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.EntityEntry*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#ChangeTracking#Internal#InternalEntityEntry}#Instance
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#ChangeTracking#Internal#InternalEntityEntry}#Instance
  id: Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#ChangeTracking#Internal#InternalEntityEntry}#Instance
  isEii: true
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry
  langs:
  - csharp
  - vb
  name: IInfrastructure<InternalEntityEntry>.Instance
  nameWithType: MemberEntry.IInfrastructure<InternalEntityEntry>.Instance
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry>.Instance
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/MemberEntry.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry>.Instance
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/MemberEntry.cs
    startLine: 88
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: InternalEntityEntry IInfrastructure<InternalEntityEntry>.Instance { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry>.Instance As InternalEntityEntry Implements IInfrastructure(Of InternalEntityEntry).Instance
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#ChangeTracking#Internal#InternalEntityEntry}#Instance*
  implements:
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry}.Instance
  nameWithType.vb: MemberEntry.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry>.Instance
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry>.Instance
references:
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry
  parent: Microsoft.EntityFrameworkCore.ChangeTracking
  isExternal: false
  name: PropertyEntry
  nameWithType: PropertyEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry
  parent: Microsoft.EntityFrameworkCore.ChangeTracking
  isExternal: false
  name: ReferenceEntry
  nameWithType: ReferenceEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry
  parent: Microsoft.EntityFrameworkCore.ChangeTracking
  isExternal: false
  name: CollectionEntry
  nameWithType: CollectionEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker
  parent: Microsoft.EntityFrameworkCore.ChangeTracking
  isExternal: false
  name: ChangeTracker
  nameWithType: ChangeTracker
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker
- uid: Microsoft.EntityFrameworkCore.ChangeTracking
  commentId: N:Microsoft.EntityFrameworkCore.ChangeTracking
  isExternal: false
  name: Microsoft.EntityFrameworkCore.ChangeTracking
  nameWithType: Microsoft.EntityFrameworkCore.ChangeTracking
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry}
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry}
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  definition: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  name: IInfrastructure<InternalEntityEntry>
  nameWithType: IInfrastructure<InternalEntityEntry>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry>
  nameWithType.vb: IInfrastructure(Of InternalEntityEntry)
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  name.vb: IInfrastructure(Of InternalEntityEntry)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry}.Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
  parent: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions
  definition: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
  name: GetInfrastructure<InternalEntityEntry>()
  nameWithType: AccessorExtensions.GetInfrastructure<InternalEntityEntry>()
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry>()
  nameWithType.vb: AccessorExtensions.GetInfrastructure(Of InternalEntityEntry)()
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure(Of Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)()
  name.vb: GetInfrastructure(Of InternalEntityEntry)()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1
    name: GetInfrastructure<InternalEntityEntry>
    nameWithType: AccessorExtensions.GetInfrastructure<InternalEntityEntry>
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1
    name: GetInfrastructure(Of InternalEntityEntry)
    nameWithType: AccessorExtensions.GetInfrastructure(Of InternalEntityEntry)
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure(Of Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  isExternal: false
  name: IInfrastructure<T>
  nameWithType: IInfrastructure<T>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<T>
  nameWithType.vb: IInfrastructure(Of T)
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of T)
  name.vb: IInfrastructure(Of T)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure
  commentId: N:Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Infrastructure
  nameWithType: Microsoft.EntityFrameworkCore.Infrastructure
  fullName: Microsoft.EntityFrameworkCore.Infrastructure
- uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
  isExternal: false
  name: GetInfrastructure<T>(IInfrastructure<T>)
  nameWithType: AccessorExtensions.GetInfrastructure<T>(IInfrastructure<T>)
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure<T>(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<T>)
  nameWithType.vb: AccessorExtensions.GetInfrastructure(Of T)(IInfrastructure(Of T))
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure(Of T)(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of T))
  name.vb: GetInfrastructure(Of T)(IInfrastructure(Of T))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
    name: GetInfrastructure<T>
    nameWithType: AccessorExtensions.GetInfrastructure<T>
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
    name: GetInfrastructure(Of T)
    nameWithType: AccessorExtensions.GetInfrastructure(Of T)
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: AccessorExtensions
  nameWithType: AccessorExtensions
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.#ctor
  isExternal: false
  name: MemberEntry
  nameWithType: MemberEntry.MemberEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.MemberEntry
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: InternalEntityEntry
  nameWithType: InternalEntityEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
- uid: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IPropertyBase
  nameWithType: IPropertyBase
  fullName: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  commentId: N:Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  nameWithType: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.InternalEntry*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.InternalEntry
  isExternal: false
  name: InternalEntry
  nameWithType: MemberEntry.InternalEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.InternalEntry
- uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: false
  name: SaveChanges()
  nameWithType: DbContext.SaveChanges()
  fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChanges()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
    name: SaveChanges
    nameWithType: DbContext.SaveChanges
    fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
    name: SaveChanges
    nameWithType: DbContext.SaveChanges
    fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.IsModified*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.IsModified
  isExternal: false
  name: IsModified
  nameWithType: MemberEntry.IsModified
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.IsModified
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.DbContext
  commentId: T:Microsoft.EntityFrameworkCore.DbContext
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: DbContext
  nameWithType: DbContext
  fullName: Microsoft.EntityFrameworkCore.DbContext
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: false
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.Metadata*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.Metadata
  isExternal: false
  name: Metadata
  nameWithType: MemberEntry.Metadata
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.Metadata
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.CurrentValue*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.CurrentValue
  isExternal: false
  name: CurrentValue
  nameWithType: MemberEntry.CurrentValue
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.CurrentValue
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.EntityEntry
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.EntityEntry
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry
  isExternal: false
  name: EntityEntry
  nameWithType: MemberEntry.EntityEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.EntityEntry
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.EntityEntry*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.EntityEntry
  isExternal: false
  name: EntityEntry
  nameWithType: MemberEntry.EntityEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.EntityEntry
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  parent: Microsoft.EntityFrameworkCore.ChangeTracking
  isExternal: false
  name: EntityEntry
  nameWithType: EntityEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry
  parent: Microsoft.EntityFrameworkCore.ChangeTracking
  isExternal: false
  name: MemberEntry
  nameWithType: MemberEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#ChangeTracking#Internal#InternalEntityEntry}#Instance*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#ChangeTracking#Internal#InternalEntityEntry}#Instance
  isExternal: false
  name: IInfrastructure<InternalEntityEntry>.Instance
  nameWithType: MemberEntry.IInfrastructure<InternalEntityEntry>.Instance
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry>.Instance
  nameWithType.vb: MemberEntry.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry>.Instance
  name.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry>.Instance
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry}.Instance
  commentId: P:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry}.Instance
  parent: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry}
  definition: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1.Instance
  name: Instance
  nameWithType: IInfrastructure<InternalEntityEntry>.Instance
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry>.Instance
  nameWithType.vb: IInfrastructure(Of InternalEntityEntry).Instance
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry).Instance
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1.Instance
  commentId: P:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1.Instance
  isExternal: false
  name: Instance
  nameWithType: IInfrastructure<T>.Instance
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<T>.Instance
  nameWithType.vb: IInfrastructure(Of T).Instance
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of T).Instance
