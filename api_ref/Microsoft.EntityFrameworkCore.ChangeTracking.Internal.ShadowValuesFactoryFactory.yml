### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ShadowValuesFactoryFactory
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ShadowValuesFactoryFactory
  id: ShadowValuesFactoryFactory
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  children:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ShadowValuesFactoryFactory.CreateReadShadowValueExpression(System.Linq.Expressions.ParameterExpression,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ShadowValuesFactoryFactory.GetPropertyCount(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ShadowValuesFactoryFactory.GetPropertyIndex(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ShadowValuesFactoryFactory.UseEntityVariable
  langs:
  - csharp
  - vb
  name: ShadowValuesFactoryFactory
  nameWithType: ShadowValuesFactoryFactory
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ShadowValuesFactoryFactory
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/ShadowValuesFactoryFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ShadowValuesFactoryFactory
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/ShadowValuesFactoryFactory.cs
    startLine: 14
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class ShadowValuesFactoryFactory : SnapshotFactoryFactory<ValueBuffer>'
    content.vb: >-
      Public Class ShadowValuesFactoryFactory
          Inherits SnapshotFactoryFactory(Of ValueBuffer)
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory{Microsoft.EntityFrameworkCore.Storage.ValueBuffer}
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory{Microsoft.EntityFrameworkCore.Storage.ValueBuffer}.Create(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateEmpty(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  - Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateConstructorExpression(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Linq.Expressions.ParameterExpression)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ShadowValuesFactoryFactory.GetPropertyIndex(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ShadowValuesFactoryFactory.GetPropertyIndex(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  id: GetPropertyIndex(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ShadowValuesFactoryFactory
  langs:
  - csharp
  - vb
  name: GetPropertyIndex(IPropertyBase)
  nameWithType: ShadowValuesFactoryFactory.GetPropertyIndex(IPropertyBase)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ShadowValuesFactoryFactory.GetPropertyIndex(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/ShadowValuesFactoryFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetPropertyIndex
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/ShadowValuesFactoryFactory.cs
    startLine: 20
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override int GetPropertyIndex(IPropertyBase propertyBase)
    content.vb: Protected Overrides Function GetPropertyIndex(propertyBase As IPropertyBase) As Integer
    parameters:
    - id: propertyBase
      type: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
    return:
      type: System.Int32
  overridden: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.GetPropertyIndex(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ShadowValuesFactoryFactory.GetPropertyIndex*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ShadowValuesFactoryFactory.GetPropertyCount(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ShadowValuesFactoryFactory.GetPropertyCount(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  id: GetPropertyCount(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ShadowValuesFactoryFactory
  langs:
  - csharp
  - vb
  name: GetPropertyCount(IEntityType)
  nameWithType: ShadowValuesFactoryFactory.GetPropertyCount(IEntityType)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ShadowValuesFactoryFactory.GetPropertyCount(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/ShadowValuesFactoryFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetPropertyCount
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/ShadowValuesFactoryFactory.cs
    startLine: 27
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override int GetPropertyCount(IEntityType entityType)
    content.vb: Protected Overrides Function GetPropertyCount(entityType As IEntityType) As Integer
    parameters:
    - id: entityType
      type: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    return:
      type: System.Int32
  overridden: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.GetPropertyCount(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ShadowValuesFactoryFactory.GetPropertyCount*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ShadowValuesFactoryFactory.UseEntityVariable
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ShadowValuesFactoryFactory.UseEntityVariable
  id: UseEntityVariable
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ShadowValuesFactoryFactory
  langs:
  - csharp
  - vb
  name: UseEntityVariable
  nameWithType: ShadowValuesFactoryFactory.UseEntityVariable
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ShadowValuesFactoryFactory.UseEntityVariable
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/ShadowValuesFactoryFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: UseEntityVariable
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/ShadowValuesFactoryFactory.cs
    startLine: 34
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override bool UseEntityVariable { get; }
    content.vb: Protected Overrides ReadOnly Property UseEntityVariable As Boolean
    parameters: []
    return:
      type: System.Boolean
  overridden: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.UseEntityVariable
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ShadowValuesFactoryFactory.UseEntityVariable*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ShadowValuesFactoryFactory.CreateReadShadowValueExpression(System.Linq.Expressions.ParameterExpression,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ShadowValuesFactoryFactory.CreateReadShadowValueExpression(System.Linq.Expressions.ParameterExpression,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  id: CreateReadShadowValueExpression(System.Linq.Expressions.ParameterExpression,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ShadowValuesFactoryFactory
  langs:
  - csharp
  - vb
  name: CreateReadShadowValueExpression(ParameterExpression, IPropertyBase)
  nameWithType: ShadowValuesFactoryFactory.CreateReadShadowValueExpression(ParameterExpression, IPropertyBase)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ShadowValuesFactoryFactory.CreateReadShadowValueExpression(System.Linq.Expressions.ParameterExpression, Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/ShadowValuesFactoryFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateReadShadowValueExpression
    path: src/Microsoft.EntityFrameworkCore/ChangeTracking/Internal/ShadowValuesFactoryFactory.cs
    startLine: 40
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override Expression CreateReadShadowValueExpression(ParameterExpression parameter, IPropertyBase property)
    content.vb: Protected Overrides Function CreateReadShadowValueExpression(parameter As ParameterExpression, property As IPropertyBase) As Expression
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
    - id: property
      type: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
    return:
      type: System.Linq.Expressions.Expression
  overridden: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateReadShadowValueExpression(System.Linq.Expressions.ParameterExpression,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  overload: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ShadowValuesFactoryFactory.CreateReadShadowValueExpression*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  commentId: N:Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  nameWithType: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: SnapshotFactoryFactory
  nameWithType: SnapshotFactoryFactory
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory{Microsoft.EntityFrameworkCore.Storage.ValueBuffer}
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory{Microsoft.EntityFrameworkCore.Storage.ValueBuffer}
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  definition: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory`1
  name: SnapshotFactoryFactory<ValueBuffer>
  nameWithType: SnapshotFactoryFactory<ValueBuffer>
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory<Microsoft.EntityFrameworkCore.Storage.ValueBuffer>
  nameWithType.vb: SnapshotFactoryFactory(Of ValueBuffer)
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory(Of Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
  name.vb: SnapshotFactoryFactory(Of ValueBuffer)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory`1
    name: SnapshotFactoryFactory
    nameWithType: SnapshotFactoryFactory
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
    name: ValueBuffer
    nameWithType: ValueBuffer
    fullName: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory`1
    name: SnapshotFactoryFactory
    nameWithType: SnapshotFactoryFactory
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
    name: ValueBuffer
    nameWithType: ValueBuffer
    fullName: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory{Microsoft.EntityFrameworkCore.Storage.ValueBuffer}.Create(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory{Microsoft.EntityFrameworkCore.Storage.ValueBuffer}.Create(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory{Microsoft.EntityFrameworkCore.Storage.ValueBuffer}
  definition: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory`1.Create(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  name: Create(IEntityType)
  nameWithType: SnapshotFactoryFactory<ValueBuffer>.Create(IEntityType)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory<Microsoft.EntityFrameworkCore.Storage.ValueBuffer>.Create(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  nameWithType.vb: SnapshotFactoryFactory(Of ValueBuffer).Create(IEntityType)
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory(Of Microsoft.EntityFrameworkCore.Storage.ValueBuffer).Create(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory`1.Create(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
    name: Create
    nameWithType: SnapshotFactoryFactory<ValueBuffer>.Create
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory<Microsoft.EntityFrameworkCore.Storage.ValueBuffer>.Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    name: IEntityType
    nameWithType: IEntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory`1.Create(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
    name: Create
    nameWithType: SnapshotFactoryFactory(Of ValueBuffer).Create
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory(Of Microsoft.EntityFrameworkCore.Storage.ValueBuffer).Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    name: IEntityType
    nameWithType: IEntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateEmpty(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateEmpty(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory
  isExternal: false
  name: CreateEmpty(IEntityType)
  nameWithType: SnapshotFactoryFactory.CreateEmpty(IEntityType)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateEmpty(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateEmpty(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
    name: CreateEmpty
    nameWithType: SnapshotFactoryFactory.CreateEmpty
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    name: IEntityType
    nameWithType: IEntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateEmpty(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
    name: CreateEmpty
    nameWithType: SnapshotFactoryFactory.CreateEmpty
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    name: IEntityType
    nameWithType: IEntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateConstructorExpression(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Linq.Expressions.ParameterExpression)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateConstructorExpression(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Linq.Expressions.ParameterExpression)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory
  isExternal: true
  name: CreateConstructorExpression(IEntityType, ParameterExpression)
  nameWithType: SnapshotFactoryFactory.CreateConstructorExpression(IEntityType, ParameterExpression)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateConstructorExpression(Microsoft.EntityFrameworkCore.Metadata.IEntityType, System.Linq.Expressions.ParameterExpression)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateConstructorExpression(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Linq.Expressions.ParameterExpression)
    name: CreateConstructorExpression
    nameWithType: SnapshotFactoryFactory.CreateConstructorExpression
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateConstructorExpression
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    name: IEntityType
    nameWithType: IEntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    nameWithType: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateConstructorExpression(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Linq.Expressions.ParameterExpression)
    name: CreateConstructorExpression
    nameWithType: SnapshotFactoryFactory.CreateConstructorExpression
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateConstructorExpression
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    name: IEntityType
    nameWithType: IEntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    nameWithType: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory`1
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory`1
  isExternal: false
  name: SnapshotFactoryFactory<TInput>
  nameWithType: SnapshotFactoryFactory<TInput>
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory<TInput>
  nameWithType.vb: SnapshotFactoryFactory(Of TInput)
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory(Of TInput)
  name.vb: SnapshotFactoryFactory(Of TInput)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory`1
    name: SnapshotFactoryFactory
    nameWithType: SnapshotFactoryFactory
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory
  - name: <
    nameWithType: <
    fullName: <
  - name: TInput
    nameWithType: TInput
    fullName: TInput
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory`1
    name: SnapshotFactoryFactory
    nameWithType: SnapshotFactoryFactory
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TInput
    nameWithType: TInput
    fullName: TInput
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory`1.Create(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory`1.Create(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  isExternal: false
  name: Create(IEntityType)
  nameWithType: SnapshotFactoryFactory<TInput>.Create(IEntityType)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory<TInput>.Create(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  nameWithType.vb: SnapshotFactoryFactory(Of TInput).Create(IEntityType)
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory(Of TInput).Create(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory`1.Create(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
    name: Create
    nameWithType: SnapshotFactoryFactory<TInput>.Create
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory<TInput>.Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    name: IEntityType
    nameWithType: IEntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory`1.Create(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
    name: Create
    nameWithType: SnapshotFactoryFactory(Of TInput).Create
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory(Of TInput).Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    name: IEntityType
    nameWithType: IEntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.GetPropertyIndex(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.GetPropertyIndex(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory
  isExternal: false
  name: GetPropertyIndex(IPropertyBase)
  nameWithType: SnapshotFactoryFactory.GetPropertyIndex(IPropertyBase)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.GetPropertyIndex(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.GetPropertyIndex(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
    name: GetPropertyIndex
    nameWithType: SnapshotFactoryFactory.GetPropertyIndex
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.GetPropertyIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
    name: IPropertyBase
    nameWithType: IPropertyBase
    fullName: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.GetPropertyIndex(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
    name: GetPropertyIndex
    nameWithType: SnapshotFactoryFactory.GetPropertyIndex
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.GetPropertyIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
    name: IPropertyBase
    nameWithType: IPropertyBase
    fullName: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ShadowValuesFactoryFactory.GetPropertyIndex*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ShadowValuesFactoryFactory.GetPropertyIndex
  isExternal: false
  name: GetPropertyIndex
  nameWithType: ShadowValuesFactoryFactory.GetPropertyIndex
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ShadowValuesFactoryFactory.GetPropertyIndex
- uid: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IPropertyBase
  nameWithType: IPropertyBase
  fullName: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.GetPropertyCount(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.GetPropertyCount(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory
  isExternal: false
  name: GetPropertyCount(IEntityType)
  nameWithType: SnapshotFactoryFactory.GetPropertyCount(IEntityType)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.GetPropertyCount(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.GetPropertyCount(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
    name: GetPropertyCount
    nameWithType: SnapshotFactoryFactory.GetPropertyCount
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.GetPropertyCount
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    name: IEntityType
    nameWithType: IEntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.GetPropertyCount(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
    name: GetPropertyCount
    nameWithType: SnapshotFactoryFactory.GetPropertyCount
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.GetPropertyCount
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    name: IEntityType
    nameWithType: IEntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ShadowValuesFactoryFactory.GetPropertyCount*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ShadowValuesFactoryFactory.GetPropertyCount
  isExternal: false
  name: GetPropertyCount
  nameWithType: ShadowValuesFactoryFactory.GetPropertyCount
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ShadowValuesFactoryFactory.GetPropertyCount
- uid: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IEntityType
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IEntityType
  nameWithType: IEntityType
  fullName: Microsoft.EntityFrameworkCore.Metadata.IEntityType
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.UseEntityVariable
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.UseEntityVariable
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory
  isExternal: false
  name: UseEntityVariable
  nameWithType: SnapshotFactoryFactory.UseEntityVariable
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.UseEntityVariable
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ShadowValuesFactoryFactory.UseEntityVariable*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ShadowValuesFactoryFactory.UseEntityVariable
  isExternal: false
  name: UseEntityVariable
  nameWithType: ShadowValuesFactoryFactory.UseEntityVariable
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ShadowValuesFactoryFactory.UseEntityVariable
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateReadShadowValueExpression(System.Linq.Expressions.ParameterExpression,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateReadShadowValueExpression(System.Linq.Expressions.ParameterExpression,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory
  isExternal: true
  name: CreateReadShadowValueExpression(ParameterExpression, IPropertyBase)
  nameWithType: SnapshotFactoryFactory.CreateReadShadowValueExpression(ParameterExpression, IPropertyBase)
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateReadShadowValueExpression(System.Linq.Expressions.ParameterExpression, Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateReadShadowValueExpression(System.Linq.Expressions.ParameterExpression,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
    name: CreateReadShadowValueExpression
    nameWithType: SnapshotFactoryFactory.CreateReadShadowValueExpression
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateReadShadowValueExpression
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    nameWithType: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
    name: IPropertyBase
    nameWithType: IPropertyBase
    fullName: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateReadShadowValueExpression(System.Linq.Expressions.ParameterExpression,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
    name: CreateReadShadowValueExpression
    nameWithType: SnapshotFactoryFactory.CreateReadShadowValueExpression
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateReadShadowValueExpression
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    nameWithType: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
    name: IPropertyBase
    nameWithType: IPropertyBase
    fullName: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ShadowValuesFactoryFactory.CreateReadShadowValueExpression*
  commentId: Overload:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ShadowValuesFactoryFactory.CreateReadShadowValueExpression
  isExternal: false
  name: CreateReadShadowValueExpression
  nameWithType: ShadowValuesFactoryFactory.CreateReadShadowValueExpression
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ShadowValuesFactoryFactory.CreateReadShadowValueExpression
- uid: System.Linq.Expressions.ParameterExpression
  commentId: T:System.Linq.Expressions.ParameterExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: ParameterExpression
  nameWithType: ParameterExpression
  fullName: System.Linq.Expressions.ParameterExpression
- uid: System.Linq.Expressions.Expression
  commentId: T:System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
